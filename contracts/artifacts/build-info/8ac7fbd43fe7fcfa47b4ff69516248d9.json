{
	"id": "8ac7fbd43fe7fcfa47b4ff69516248d9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BimodalLib.sol": {
				"content": "pragma solidity 0.4.26;\n\nimport \"./ERC20.sol\";\nimport \"./SafeMath/SafeMathLib256.sol\";\n\n/**\n * This library defines the bi-modal commit-chain ledger. It provides data\n * structure definitions, accessors and mutators.\n */\nlibrary BimodalLib {\n  using SafeMathLib256 for uint256;\n\n  // ENUMS\n  enum ChallengeType {\n    NONE,\n    STATE_UPDATE,\n    TRANSFER_DELIVERY,\n    SWAP_ENACTMENT\n  }\n\n  // DATA MODELS\n  /**\n   * Aggregate field datastructure used to sum up deposits / withdrawals for an eon.\n   */\n  struct AmountAggregate {\n    uint256 eon;\n    uint256 amount;\n  }\n\n  /**\n   * The structure for a submitted commit-chain checkpoint.\n   */\n  struct Checkpoint {\n    uint256 eonNumber;\n    bytes32 merkleRoot;\n    uint256 liveChallenges;\n  }\n\n  /**\n   * A structure representing a single commit-chain wallet.\n   */\n  struct Wallet {\n    // Deposits performed in the last three eons\n    AmountAggregate[3] depositsKept;\n    // Withdrawals requested and not yet confirmed\n    Withdrawal[] withdrawals;\n    // Recovery flag denoting whether this account has retrieved its funds\n    bool recovered;\n  }\n\n  /**\n   * A structure denoting a single withdrawal request.\n   */\n  struct Withdrawal {\n    uint256 eon;\n    uint256 amount;\n  }\n\n  /**\n   * A structure containing the information of a single challenge.\n   */\n  struct Challenge {\n    // State Update Challenges\n    ChallengeType challengeType; // 0\n    uint256 block; // 1\n    uint256 initialStateEon; // 2\n    uint256 initialStateBalance; // 3\n    uint256 deltaHighestSpendings; // 4\n    uint256 deltaHighestGains; // 5\n    uint256 finalStateBalance; // 6\n    uint256 deliveredTxNonce; // 7\n    uint64 trailIdentifier; // 8\n  }\n\n  /**\n   * The types of parent-chain operations logged into the accumulator.\n   */\n  enum Operation {\n    DEPOSIT,\n    WITHDRAWAL,\n    CANCELLATION\n  }\n\n  /* solhint-disable var-name-mixedcase */\n  /**\n   * The structure for an instance of the commit-chain ledger.\n   */\n  struct Ledger {\n    // OPERATIONAL CONSTANTS\n    uint8 EONS_KEPT;\n    uint8 DEPOSITS_KEPT;\n    uint256 MIN_CHALLENGE_GAS_COST;\n    uint256 BLOCKS_PER_EON;\n    uint256 BLOCKS_PER_EPOCH;\n    uint256 EXTENDED_BLOCKS_PER_EPOCH;\n    // STATE VARIABLES\n    uint256 genesis;\n    address operator;\n    Checkpoint[5] checkpoints;\n    bytes32[5] parentChainAccumulator; // bytes32[EONS_KEPT]\n    uint256 lastSubmissionEon;\n    mapping (address => mapping (address => mapping (address => Challenge))) challengeBook;\n    mapping (address => mapping (address => Wallet)) walletBook;\n    mapping (address => AmountAggregate[5]) deposits;\n    mapping (address => AmountAggregate[5]) pendingWithdrawals;\n    mapping (address => AmountAggregate[5]) confirmedWithdrawals;\n    mapping (address => uint64) tokenToTrail;\n    address[] trailToToken;\n  }\n  /* solhint-enable */\n\n  // INITIALIZATION\n  function init(\n    Ledger storage self,\n    uint256 blocksPerEon,\n    address operator\n  )\n    public\n  {\n    self.BLOCKS_PER_EON = blocksPerEon;\n    self.BLOCKS_PER_EPOCH = self.BLOCKS_PER_EON.div(4);\n    self.EXTENDED_BLOCKS_PER_EPOCH = self.BLOCKS_PER_EON.div(3);\n    self.EONS_KEPT = 5; // eons kept on chain\n    self.DEPOSITS_KEPT = 3; // deposit aggregates kept on chain\n    self.MIN_CHALLENGE_GAS_COST = 0.005 szabo; // 5 gwei minimum gas reimbursement cost\n    self.operator = operator;\n    self.genesis = block.number;\n  }\n\n  // DATA ACCESS\n  /**\n   * This method calculates the current eon number using the genesis block number\n   * and eon duration.\n   */\n  function currentEon(\n    Ledger storage self\n  )\n    public\n    view\n    returns (uint256)\n  {\n    return block.number.sub(self.genesis).div(self.BLOCKS_PER_EON).add(1);\n  }\n\n  /**\n   * This method calculates the current era number\n   */\n  function currentEra(\n    Ledger storage self\n  )\n    public\n    view\n    returns (uint256)\n  {\n    return block.number.sub(self.genesis).mod(self.BLOCKS_PER_EON);\n  }\n\n  /**\n   * This method is used to embed a parent-chain operation into the accumulator\n   * through hashing its values. The on-chain accumulator is used to provide a\n   * reference with respect to which the operator can commit checkpoints.\n   */\n  function appendOperationToEonAccumulator(\n    Ledger storage self,\n    uint256 eon,\n    ERC20 token,\n    address participant,\n    Operation operation,\n    uint256 value\n  )\n    public\n  {\n    self.parentChainAccumulator[eon.mod(self.EONS_KEPT)] = keccak256(abi.encodePacked(\n      self.parentChainAccumulator[eon.mod(self.EONS_KEPT)],\n      eon,\n      token,\n      participant,\n      operation,\n      value));\n  }\n\n  /**\n   * Retrieves the total pending withdrawal amount at a specific eon.\n   */\n  function getPendingWithdrawalsAtEon(\n    Ledger storage self,\n    ERC20 token,\n    uint256 eon\n  )\n    public\n    view\n    returns (uint256)\n  {\n    uint256 lastAggregateEon = 0;\n    for (uint256 i = 0; i < self.EONS_KEPT; i++) {\n      AmountAggregate storage currentAggregate = self.pendingWithdrawals[token][eon.mod(self.EONS_KEPT)];\n      if (currentAggregate.eon == eon) {\n        return currentAggregate.amount;\n      } else if (currentAggregate.eon > lastAggregateEon && currentAggregate.eon < eon) {\n        // As this is a running aggregate value, if the target eon value is not set,\n        // the most recent value is provided and assumed to have remained constant.\n        lastAggregateEon = currentAggregate.eon;\n      }\n      if (eon == 0) {\n        break;\n      }\n      eon = eon.sub(1);\n    }\n    if (lastAggregateEon == 0) {\n      return 0;\n    }\n    return self.pendingWithdrawals[token][lastAggregateEon.mod(self.EONS_KEPT)].amount;\n  }\n\n  /**\n   * Increases the total pending withdrawal amount at a specific eon.\n   */\n  function addToRunningPendingWithdrawals(\n    Ledger storage self,\n    ERC20 token,\n    uint256 eon,\n    uint256 value\n  )\n    public\n  {\n    AmountAggregate storage aggregate = self.pendingWithdrawals[token][eon.mod(self.EONS_KEPT)];\n    // As this is a running aggregate, the target eon and all those that\n    // come after it are updated to reflect the increase.\n    if (aggregate.eon < eon) { // implies eon > 0\n      aggregate.amount = getPendingWithdrawalsAtEon(self, token, eon.sub(1)).add(value);\n      aggregate.eon = eon;\n    } else {\n      aggregate.amount = aggregate.amount.add(value);\n    }\n  }\n  \n  /**\n   * Decreases the total pending withdrawal amount at a specific eon.\n   */\n  function deductFromRunningPendingWithdrawals(\n    Ledger storage self,\n    ERC20 token,\n    uint256 eon,\n    uint256 latestEon,\n    uint256 value\n  )\n    public\n  {\n    /* Initalize empty aggregates to running values */\n    for (uint256 i = 0; i < self.EONS_KEPT; i++) {\n      uint256 targetEon = eon.add(i);\n      AmountAggregate storage aggregate = self.pendingWithdrawals[token][targetEon.mod(self.EONS_KEPT)];\n      if (targetEon > latestEon) {\n        break;\n      } else if (aggregate.eon < targetEon) { // implies targetEon > 0\n        // Set constant running value\n        aggregate.eon = targetEon;\n        aggregate.amount = getPendingWithdrawalsAtEon(self, token, targetEon.sub(1));\n      }\n    }\n    /* Update running values */\n    for (i = 0; i < self.EONS_KEPT; i++) {\n       targetEon = eon.add(i);\n        aggregate = self.pendingWithdrawals[token][targetEon.mod(self.EONS_KEPT)];\n      if (targetEon > latestEon) {\n        break;\n      } else if (aggregate.eon < targetEon) {\n        revert('X'); // This is impossible.\n      } else {\n        aggregate.amount = aggregate.amount.sub(value);\n      }\n    }\n  }\n\n  /**\n   * Get the total number of live challenges for a specific eon.\n   */\n  function getLiveChallenges(\n    Ledger storage self,\n    uint256 eon\n  )\n    public\n    view\n    returns (uint)\n  {\n    Checkpoint storage checkpoint = self.checkpoints[eon.mod(self.EONS_KEPT)];\n    if (checkpoint.eonNumber != eon) {\n      return 0;\n    }\n    return checkpoint.liveChallenges;\n  }\n\n  /**\n   * Get checkpoint data or assume it to be empty if non-existant.\n   */\n  function getOrCreateCheckpoint(\n    Ledger storage self,\n    uint256 targetEon,\n    uint256 latestEon\n  )\n    public\n    returns (Checkpoint storage checkpoint)\n  {\n    require(latestEon < targetEon.add(self.EONS_KEPT) && targetEon <= latestEon);\n\n    uint256 index = targetEon.mod(self.EONS_KEPT);\n    checkpoint = self.checkpoints[index];\n\n    if (checkpoint.eonNumber != targetEon) {\n      checkpoint.eonNumber = targetEon;\n      checkpoint.merkleRoot = bytes32(0);\n      checkpoint.liveChallenges = 0;\n    }\n\n    return checkpoint;\n  }\n\n  /**\n   * Get the total amount pending withdrawal by a wallet at a specific eon.\n   */\n  function getWalletPendingWithdrawalAmountAtEon(\n    Ledger storage self,\n    ERC20 token,\n    address holder,\n    uint256 eon\n  )\n    public\n    view\n    returns (uint256 amount)\n  {\n    amount = 0;\n\n    Wallet storage accountingEntry = self.walletBook[token][holder];\n    Withdrawal[] storage withdrawals = accountingEntry.withdrawals;\n    for (uint32 i = 0; i < withdrawals.length; i++) {\n      Withdrawal storage withdrawal = withdrawals[i];\n      if (withdrawal.eon == eon) {\n        amount = amount.add(withdrawal.amount);\n      } else if (withdrawal.eon > eon) {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Get the total amounts deposited and pending withdrawal at the current eon.\n   */\n  function getCurrentEonDepositsWithdrawals(\n    Ledger storage self,\n    ERC20 token,\n    address holder\n  )\n    public\n    view\n    returns (uint256 currentEonDeposits, uint256 currentEonWithdrawals)\n  {\n\n    currentEonDeposits = 0;\n    currentEonWithdrawals = 0;\n\n    Wallet storage accountingEntry = self.walletBook[token][holder];\n    Challenge storage challengeEntry = self.challengeBook[token][holder][holder];\n\n    AmountAggregate storage depositEntry =\n      accountingEntry.depositsKept[challengeEntry.initialStateEon.mod(self.DEPOSITS_KEPT)];\n\n    if (depositEntry.eon == challengeEntry.initialStateEon) {\n      currentEonDeposits = currentEonDeposits.add(depositEntry.amount);\n    }\n\n    currentEonWithdrawals = getWalletPendingWithdrawalAmountAtEon(self, token, holder, challengeEntry.initialStateEon);\n\n    return (currentEonDeposits, currentEonWithdrawals);\n  }\n\n  // UTILITY\n  function addToAggregate(\n    AmountAggregate storage aggregate,\n    uint256 eon,\n    uint256 value\n  )\n    public\n  {\n    if (eon > aggregate.eon) {\n      aggregate.eon = eon;\n      aggregate.amount = value;\n    } else {\n      aggregate.amount = aggregate.amount.add(value);\n    }\n  }\n\n  function clearAggregate(\n    AmountAggregate storage aggregate\n  )\n    public\n  {\n    aggregate.eon = 0;\n    aggregate.amount = 0;\n  }\n\n  function signedMessageECRECOVER(\n    bytes32 message,\n    bytes32 r, bytes32 s, uint8 v\n  )\n    public\n    pure\n    returns (address)\n  {\n    return ecrecover(\n      keccak256(abi.encodePacked(\n        \"\\x19Ethereum Signed Message:\\n32\",\n        keccak256(abi.encodePacked(\n          \"\\x19Liquidity.Network Authorization:\\n32\",\n          message)))),\n      v, r, s);\n  }\n}\n"
			},
			"contracts/SafeMath/SafeMathLib256.sol": {
				"content": "pragma solidity 0.4.26;\n\n/* Overflow safety library */\nlibrary SafeMathLib256 {\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, '+');\n\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a, '-');\n    return a - b;\n  }\n\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, '*');\n\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b > 0, '/');\n    return a / b;\n  }\n\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b > 0, '%');\n    return a % b;\n  }\n}"
			},
			"contracts/ERC20.sol": {
				"content": "pragma solidity 0.4.26;\n\ncontract ERC20Basic {\n  function totalSupply() public view returns (uint256);\n  function balanceOf(address who) public view returns (uint256);\n  function transfer(address to, uint256 value) public returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\ncontract ERC20 is ERC20Basic {\n  function allowance(address owner, address spender)\n    public view returns (uint256);\n\n  function transferFrom(address from, address to, uint256 value)\n    public returns (bool);\n\n  function approve(address spender, uint256 value) public returns (bool);\n  \n  event Approval(\n    address indexed owner,\n    address indexed spender,\n    uint256 value\n  );\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BimodalLib.sol": {
				"BimodalLib": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "self",
									"type": "BimodalLib.Ledger storage"
								},
								{
									"name": "token",
									"type": "ERC20"
								},
								{
									"name": "eon",
									"type": "uint256"
								}
							],
							"name": "getPendingWithdrawalsAtEon",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "self",
									"type": "BimodalLib.Ledger storage"
								}
							],
							"name": "currentEon",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "self",
									"type": "BimodalLib.Ledger storage"
								},
								{
									"name": "eon",
									"type": "uint256"
								}
							],
							"name": "getLiveChallenges",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "self",
									"type": "BimodalLib.Ledger storage"
								},
								{
									"name": "blocksPerEon",
									"type": "uint256"
								},
								{
									"name": "operator",
									"type": "address"
								}
							],
							"name": "init",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "self",
									"type": "BimodalLib.Ledger storage"
								}
							],
							"name": "currentEra",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "message",
									"type": "bytes32"
								},
								{
									"name": "r",
									"type": "bytes32"
								},
								{
									"name": "s",
									"type": "bytes32"
								},
								{
									"name": "v",
									"type": "uint8"
								}
							],
							"name": "signedMessageECRECOVER",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "aggregate",
									"type": "BimodalLib.AmountAggregate storage"
								},
								{
									"name": "eon",
									"type": "uint256"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "addToAggregate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "self",
									"type": "BimodalLib.Ledger storage"
								},
								{
									"name": "token",
									"type": "ERC20"
								},
								{
									"name": "holder",
									"type": "address"
								},
								{
									"name": "eon",
									"type": "uint256"
								}
							],
							"name": "getWalletPendingWithdrawalAmountAtEon",
							"outputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "self",
									"type": "BimodalLib.Ledger storage"
								},
								{
									"name": "token",
									"type": "ERC20"
								},
								{
									"name": "eon",
									"type": "uint256"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "addToRunningPendingWithdrawals",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "self",
									"type": "BimodalLib.Ledger storage"
								},
								{
									"name": "token",
									"type": "ERC20"
								},
								{
									"name": "eon",
									"type": "uint256"
								},
								{
									"name": "latestEon",
									"type": "uint256"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "deductFromRunningPendingWithdrawals",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "self",
									"type": "BimodalLib.Ledger storage"
								},
								{
									"name": "targetEon",
									"type": "uint256"
								},
								{
									"name": "latestEon",
									"type": "uint256"
								}
							],
							"name": "getOrCreateCheckpoint",
							"outputs": [
								{
									"name": "checkpoint",
									"type": "BimodalLib.Checkpoint storage"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "self",
									"type": "BimodalLib.Ledger storage"
								},
								{
									"name": "token",
									"type": "ERC20"
								},
								{
									"name": "holder",
									"type": "address"
								}
							],
							"name": "getCurrentEonDepositsWithdrawals",
							"outputs": [
								{
									"name": "currentEonDeposits",
									"type": "uint256"
								},
								{
									"name": "currentEonWithdrawals",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "aggregate",
									"type": "BimodalLib.AmountAggregate storage"
								}
							],
							"name": "clearAggregate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "self",
									"type": "BimodalLib.Ledger storage"
								},
								{
									"name": "eon",
									"type": "uint256"
								},
								{
									"name": "token",
									"type": "ERC20"
								},
								{
									"name": "participant",
									"type": "address"
								},
								{
									"name": "operation",
									"type": "BimodalLib.Operation"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "appendOperationToEonAccumulator",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/BimodalLib.sol\":221:10995  library BimodalLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BimodalLib.sol\":221:10995  library BimodalLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x207cbaba\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x26df6e49\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x378a4719\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7fcacff9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x87d5cab9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8e9f9072\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x971bff52\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa7e478ba\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb0abcbbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe37e06ea\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe72b5713\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe7f24bad\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe8e95a3d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf9ac8fca\n      eq\n      tag_15\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/BimodalLib.sol\":4657:5611  function getPendingWithdrawalsAtEon(... */\n    tag_2:\n      tag_16\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BimodalLib.sol\":3503:3676  function currentEon(... */\n    tag_3:\n      tag_18\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_19)\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BimodalLib.sol\":7598:7895  function getLiveChallenges(... */\n    tag_4:\n      tag_20\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BimodalLib.sol\":2834:3365  function init(... */\n    tag_5:\n      dup2\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"contracts/BimodalLib.sol\":2834:3365  function init(... */\n      pop\n      tag_23\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_24)\n    tag_23:\n      stop\n        /* \"contracts/BimodalLib.sol\":3743:3909  function currentEra(... */\n    tag_6:\n      tag_25\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_26)\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BimodalLib.sol\":10623:10993  function signedMessageECRECOVER(... */\n    tag_7:\n      tag_27\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_28)\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BimodalLib.sol\":10197:10481  function addToAggregate(... */\n    tag_8:\n      dup2\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_29:\n        /* \"contracts/BimodalLib.sol\":10197:10481  function addToAggregate(... */\n      pop\n      tag_30\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_31)\n    tag_30:\n      stop\n        /* \"contracts/BimodalLib.sol\":8609:9210  function getWalletPendingWithdrawalAmountAtEon(... */\n    tag_9:\n      tag_32\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_33)\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BimodalLib.sol\":5697:6304  function addToRunningPendingWithdrawals(... */\n    tag_10:\n      dup2\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"contracts/BimodalLib.sol\":5697:6304  function addToRunningPendingWithdrawals(... */\n      pop\n      tag_35\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_36)\n    tag_35:\n      stop\n        /* \"contracts/BimodalLib.sol\":6392:7517  function deductFromRunningPendingWithdrawals(... */\n    tag_11:\n      dup2\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"contracts/BimodalLib.sol\":6392:7517  function deductFromRunningPendingWithdrawals(... */\n      pop\n      tag_38\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_39)\n    tag_38:\n      stop\n        /* \"contracts/BimodalLib.sol\":7978:8517  function getOrCreateCheckpoint(... */\n    tag_12:\n      dup2\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"contracts/BimodalLib.sol\":7978:8517  function getOrCreateCheckpoint(... */\n      pop\n      tag_41\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_42)\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BimodalLib.sol\":9306:10180  function getCurrentEonDepositsWithdrawals(... */\n    tag_13:\n      tag_43\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_44)\n    tag_43:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BimodalLib.sol\":10485:10619  function clearAggregate(... */\n    tag_14:\n      dup2\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_45:\n        /* \"contracts/BimodalLib.sol\":10485:10619  function clearAggregate(... */\n      pop\n      tag_46\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_47)\n    tag_46:\n      stop\n        /* \"contracts/BimodalLib.sol\":4158:4571  function appendOperationToEonAccumulator(... */\n    tag_15:\n      dup2\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_48:\n        /* \"contracts/BimodalLib.sol\":4158:4571  function appendOperationToEonAccumulator(... */\n      pop\n      tag_49\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_50)\n    tag_49:\n      stop\n        /* \"contracts/BimodalLib.sol\":4657:5611  function getPendingWithdrawalsAtEon(... */\n    tag_17:\n        /* \"contracts/BimodalLib.sol\":4789:4796  uint256 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":4806:4830  uint256 lastAggregateEon */\n      dup1\n        /* \"contracts/BimodalLib.sol\":4845:4854  uint256 i */\n      0x0\n        /* \"contracts/BimodalLib.sol\":4893:4933  AmountAggregate storage currentAggregate */\n      dup1\n        /* \"contracts/BimodalLib.sol\":4833:4834  0 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":4806:4834  uint256 lastAggregateEon = 0 */\n      swap3\n      pop\n        /* \"contracts/BimodalLib.sol\":4857:4858  0 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":4845:4858  uint256 i = 0 */\n      swap2\n      pop\n        /* \"contracts/BimodalLib.sol\":4840:5464  for (uint256 i = 0; i < self.EONS_KEPT; i++) {... */\n    tag_52:\n        /* \"contracts/BimodalLib.sol\":4864:4868  self */\n      dup7\n        /* \"contracts/BimodalLib.sol\":4864:4878  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":4860:4878  i < self.EONS_KEPT */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":4860:4861  i */\n      dup3\n        /* \"contracts/BimodalLib.sol\":4860:4878  i < self.EONS_KEPT */\n      lt\n        /* \"contracts/BimodalLib.sol\":4840:5464  for (uint256 i = 0; i < self.EONS_KEPT; i++) {... */\n      iszero\n      tag_53\n      jumpi\n        /* \"contracts/BimodalLib.sol\":4936:4940  self */\n      dup7\n        /* \"contracts/BimodalLib.sol\":4936:4959  self.pendingWithdrawals */\n      0x1f\n      add\n        /* \"contracts/BimodalLib.sol\":4936:4966  self.pendingWithdrawals[token] */\n      0x0\n        /* \"contracts/BimodalLib.sol\":4960:4965  token */\n      dup8\n        /* \"contracts/BimodalLib.sol\":4936:4966  self.pendingWithdrawals[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BimodalLib.sol\":4967:4990  eon.mod(self.EONS_KEPT) */\n      tag_55\n        /* \"contracts/BimodalLib.sol\":4975:4979  self */\n      dup9\n        /* \"contracts/BimodalLib.sol\":4975:4989  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":4967:4990  eon.mod(self.EONS_KEPT) */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":4967:4970  eon */\n      dup8\n        /* \"contracts/BimodalLib.sol\":4967:4974  eon.mod */\n      tag_56\n      swap1\n        /* \"contracts/BimodalLib.sol\":4967:4990  eon.mod(self.EONS_KEPT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_55:\n        /* \"contracts/BimodalLib.sol\":4936:4991  self.pendingWithdrawals[token][eon.mod(self.EONS_KEPT)] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n      0x2\n      mul\n      add\n        /* \"contracts/BimodalLib.sol\":4893:4991  AmountAggregate storage currentAggregate = self.pendingWithdrawals[token][eon.mod(self.EONS_KEPT)] */\n      swap1\n      pop\n        /* \"contracts/BimodalLib.sol\":5027:5030  eon */\n      dup5\n        /* \"contracts/BimodalLib.sol\":5003:5019  currentAggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":5003:5023  currentAggregate.eon */\n      0x0\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":5003:5030  currentAggregate.eon == eon */\n      eq\n        /* \"contracts/BimodalLib.sol\":4999:5389  if (currentAggregate.eon == eon) {... */\n      iszero\n      tag_59\n      jumpi\n        /* \"contracts/BimodalLib.sol\":5049:5065  currentAggregate */\n      dup1\n        /* \"contracts/BimodalLib.sol\":5049:5072  currentAggregate.amount */\n      0x1\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":5042:5072  return currentAggregate.amount */\n      swap4\n      pop\n      jump(tag_51)\n        /* \"contracts/BimodalLib.sol\":4999:5389  if (currentAggregate.eon == eon) {... */\n    tag_59:\n        /* \"contracts/BimodalLib.sol\":5114:5130  lastAggregateEon */\n      dup3\n        /* \"contracts/BimodalLib.sol\":5091:5107  currentAggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":5091:5111  currentAggregate.eon */\n      0x0\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":5091:5130  currentAggregate.eon > lastAggregateEon */\n      gt\n        /* \"contracts/BimodalLib.sol\":5091:5160  currentAggregate.eon > lastAggregateEon && currentAggregate.eon < eon */\n      dup1\n      iszero\n      tag_61\n      jumpi\n      pop\n        /* \"contracts/BimodalLib.sol\":5157:5160  eon */\n      dup5\n        /* \"contracts/BimodalLib.sol\":5134:5150  currentAggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":5134:5154  currentAggregate.eon */\n      0x0\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":5134:5160  currentAggregate.eon < eon */\n      lt\n        /* \"contracts/BimodalLib.sol\":5091:5160  currentAggregate.eon > lastAggregateEon && currentAggregate.eon < eon */\n    tag_61:\n        /* \"contracts/BimodalLib.sol\":5087:5389  if (currentAggregate.eon > lastAggregateEon && currentAggregate.eon < eon) {... */\n      iszero\n      tag_62\n      jumpi\n        /* \"contracts/BimodalLib.sol\":5360:5376  currentAggregate */\n      dup1\n        /* \"contracts/BimodalLib.sol\":5360:5380  currentAggregate.eon */\n      0x0\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":5341:5380  lastAggregateEon = currentAggregate.eon */\n      swap3\n      pop\n        /* \"contracts/BimodalLib.sol\":5087:5389  if (currentAggregate.eon > lastAggregateEon && currentAggregate.eon < eon) {... */\n    tag_62:\n        /* \"contracts/BimodalLib.sol\":5407:5408  0 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":5400:5403  eon */\n      dup6\n        /* \"contracts/BimodalLib.sol\":5400:5408  eon == 0 */\n      eq\n        /* \"contracts/BimodalLib.sol\":5396:5434  if (eon == 0) {... */\n      iszero\n      tag_63\n      jumpi\n        /* \"contracts/BimodalLib.sol\":5420:5425  break */\n      jump(tag_53)\n        /* \"contracts/BimodalLib.sol\":5396:5434  if (eon == 0) {... */\n    tag_63:\n        /* \"contracts/BimodalLib.sol\":5447:5457  eon.sub(1) */\n      tag_64\n        /* \"contracts/BimodalLib.sol\":5455:5456  1 */\n      0x1\n        /* \"contracts/BimodalLib.sol\":5447:5450  eon */\n      dup7\n        /* \"contracts/BimodalLib.sol\":5447:5454  eon.sub */\n      tag_65\n      swap1\n        /* \"contracts/BimodalLib.sol\":5447:5457  eon.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"contracts/BimodalLib.sol\":5441:5457  eon = eon.sub(1) */\n      swap5\n      pop\n        /* \"contracts/BimodalLib.sol\":4880:4883  i++ */\n      dup2\n      dup1\n      0x1\n      add\n      swap3\n      pop\n      pop\n        /* \"contracts/BimodalLib.sol\":4840:5464  for (uint256 i = 0; i < self.EONS_KEPT; i++) {... */\n      jump(tag_52)\n    tag_53:\n        /* \"contracts/BimodalLib.sol\":5493:5494  0 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":5473:5489  lastAggregateEon */\n      dup4\n        /* \"contracts/BimodalLib.sol\":5473:5494  lastAggregateEon == 0 */\n      eq\n        /* \"contracts/BimodalLib.sol\":5469:5519  if (lastAggregateEon == 0) {... */\n      iszero\n      tag_66\n      jumpi\n        /* \"contracts/BimodalLib.sol\":5511:5512  0 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":5504:5512  return 0 */\n      swap4\n      pop\n      jump(tag_51)\n        /* \"contracts/BimodalLib.sol\":5469:5519  if (lastAggregateEon == 0) {... */\n    tag_66:\n        /* \"contracts/BimodalLib.sol\":5531:5535  self */\n      dup7\n        /* \"contracts/BimodalLib.sol\":5531:5554  self.pendingWithdrawals */\n      0x1f\n      add\n        /* \"contracts/BimodalLib.sol\":5531:5561  self.pendingWithdrawals[token] */\n      0x0\n        /* \"contracts/BimodalLib.sol\":5555:5560  token */\n      dup8\n        /* \"contracts/BimodalLib.sol\":5531:5561  self.pendingWithdrawals[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BimodalLib.sol\":5562:5598  lastAggregateEon.mod(self.EONS_KEPT) */\n      tag_67\n        /* \"contracts/BimodalLib.sol\":5583:5587  self */\n      dup9\n        /* \"contracts/BimodalLib.sol\":5583:5597  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":5562:5598  lastAggregateEon.mod(self.EONS_KEPT) */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":5562:5578  lastAggregateEon */\n      dup6\n        /* \"contracts/BimodalLib.sol\":5562:5582  lastAggregateEon.mod */\n      tag_56\n      swap1\n        /* \"contracts/BimodalLib.sol\":5562:5598  lastAggregateEon.mod(self.EONS_KEPT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"contracts/BimodalLib.sol\":5531:5599  self.pendingWithdrawals[token][lastAggregateEon.mod(self.EONS_KEPT)] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_68\n      jumpi\n      invalid\n    tag_68:\n      0x2\n      mul\n      add\n        /* \"contracts/BimodalLib.sol\":5531:5606  self.pendingWithdrawals[token][lastAggregateEon.mod(self.EONS_KEPT)].amount */\n      0x1\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":5524:5606  return self.pendingWithdrawals[token][lastAggregateEon.mod(self.EONS_KEPT)].amount */\n      swap4\n      pop\n        /* \"contracts/BimodalLib.sol\":4657:5611  function getPendingWithdrawalsAtEon(... */\n    tag_51:\n      pop\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BimodalLib.sol\":3503:3676  function currentEon(... */\n    tag_19:\n        /* \"contracts/BimodalLib.sol\":3585:3592  uint256 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":3609:3671  block.number.sub(self.genesis).div(self.BLOCKS_PER_EON).add(1) */\n      tag_71\n        /* \"contracts/BimodalLib.sol\":3669:3670  1 */\n      0x1\n        /* \"contracts/BimodalLib.sol\":3609:3664  block.number.sub(self.genesis).div(self.BLOCKS_PER_EON) */\n      tag_72\n        /* \"contracts/BimodalLib.sol\":3644:3648  self */\n      dup5\n        /* \"contracts/BimodalLib.sol\":3644:3663  self.BLOCKS_PER_EON */\n      0x2\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":3609:3639  block.number.sub(self.genesis) */\n      tag_73\n        /* \"contracts/BimodalLib.sol\":3626:3630  self */\n      dup7\n        /* \"contracts/BimodalLib.sol\":3626:3638  self.genesis */\n      0x5\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":3609:3621  block.number */\n      number\n        /* \"contracts/BimodalLib.sol\":3609:3625  block.number.sub */\n      tag_65\n      swap1\n        /* \"contracts/BimodalLib.sol\":3609:3639  block.number.sub(self.genesis) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_73:\n        /* \"contracts/BimodalLib.sol\":3609:3643  block.number.sub(self.genesis).div */\n      tag_74\n      swap1\n        /* \"contracts/BimodalLib.sol\":3609:3664  block.number.sub(self.genesis).div(self.BLOCKS_PER_EON) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"contracts/BimodalLib.sol\":3609:3668  block.number.sub(self.genesis).div(self.BLOCKS_PER_EON).add */\n      tag_75\n      swap1\n        /* \"contracts/BimodalLib.sol\":3609:3671  block.number.sub(self.genesis).div(self.BLOCKS_PER_EON).add(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"contracts/BimodalLib.sol\":3602:3671  return block.number.sub(self.genesis).div(self.BLOCKS_PER_EON).add(1) */\n      swap1\n      pop\n        /* \"contracts/BimodalLib.sol\":3503:3676  function currentEon(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BimodalLib.sol\":7598:7895  function getLiveChallenges(... */\n    tag_21:\n        /* \"contracts/BimodalLib.sol\":7704:7708  uint */\n      0x0\n        /* \"contracts/BimodalLib.sol\":7718:7747  Checkpoint storage checkpoint */\n      dup1\n        /* \"contracts/BimodalLib.sol\":7750:7754  self */\n      dup4\n        /* \"contracts/BimodalLib.sol\":7750:7766  self.checkpoints */\n      0x7\n      add\n        /* \"contracts/BimodalLib.sol\":7767:7790  eon.mod(self.EONS_KEPT) */\n      tag_77\n        /* \"contracts/BimodalLib.sol\":7775:7779  self */\n      dup6\n        /* \"contracts/BimodalLib.sol\":7775:7789  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":7767:7790  eon.mod(self.EONS_KEPT) */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":7767:7770  eon */\n      dup6\n        /* \"contracts/BimodalLib.sol\":7767:7774  eon.mod */\n      tag_56\n      swap1\n        /* \"contracts/BimodalLib.sol\":7767:7790  eon.mod(self.EONS_KEPT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_77:\n        /* \"contracts/BimodalLib.sol\":7750:7791  self.checkpoints[eon.mod(self.EONS_KEPT)] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_78\n      jumpi\n      invalid\n    tag_78:\n      0x3\n      mul\n      add\n        /* \"contracts/BimodalLib.sol\":7718:7791  Checkpoint storage checkpoint = self.checkpoints[eon.mod(self.EONS_KEPT)] */\n      swap1\n      pop\n        /* \"contracts/BimodalLib.sol\":7825:7828  eon */\n      dup3\n        /* \"contracts/BimodalLib.sol\":7801:7811  checkpoint */\n      dup2\n        /* \"contracts/BimodalLib.sol\":7801:7821  checkpoint.eonNumber */\n      0x0\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":7801:7828  checkpoint.eonNumber != eon */\n      eq\n      iszero\n        /* \"contracts/BimodalLib.sol\":7797:7853  if (checkpoint.eonNumber != eon) {... */\n      iszero\n      tag_80\n      jumpi\n        /* \"contracts/BimodalLib.sol\":7845:7846  0 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":7838:7846  return 0 */\n      swap2\n      pop\n      jump(tag_76)\n        /* \"contracts/BimodalLib.sol\":7797:7853  if (checkpoint.eonNumber != eon) {... */\n    tag_80:\n        /* \"contracts/BimodalLib.sol\":7865:7875  checkpoint */\n      dup1\n        /* \"contracts/BimodalLib.sol\":7865:7890  checkpoint.liveChallenges */\n      0x2\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":7858:7890  return checkpoint.liveChallenges */\n      swap2\n      pop\n        /* \"contracts/BimodalLib.sol\":7598:7895  function getLiveChallenges(... */\n    tag_76:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BimodalLib.sol\":2834:3365  function init(... */\n    tag_24:\n        /* \"contracts/BimodalLib.sol\":2966:2978  blocksPerEon */\n      dup2\n        /* \"contracts/BimodalLib.sol\":2944:2948  self */\n      dup4\n        /* \"contracts/BimodalLib.sol\":2944:2963  self.BLOCKS_PER_EON */\n      0x2\n      add\n        /* \"contracts/BimodalLib.sol\":2944:2978  self.BLOCKS_PER_EON = blocksPerEon */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":3008:3034  self.BLOCKS_PER_EON.div(4) */\n      tag_82\n        /* \"contracts/BimodalLib.sol\":3032:3033  4 */\n      0x4\n        /* \"contracts/BimodalLib.sol\":3008:3012  self */\n      dup5\n        /* \"contracts/BimodalLib.sol\":3008:3027  self.BLOCKS_PER_EON */\n      0x2\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":3008:3031  self.BLOCKS_PER_EON.div */\n      tag_74\n      swap1\n        /* \"contracts/BimodalLib.sol\":3008:3034  self.BLOCKS_PER_EON.div(4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"contracts/BimodalLib.sol\":2984:2988  self */\n      dup4\n        /* \"contracts/BimodalLib.sol\":2984:3005  self.BLOCKS_PER_EPOCH */\n      0x3\n      add\n        /* \"contracts/BimodalLib.sol\":2984:3034  self.BLOCKS_PER_EPOCH = self.BLOCKS_PER_EON.div(4) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":3073:3099  self.BLOCKS_PER_EON.div(3) */\n      tag_83\n        /* \"contracts/BimodalLib.sol\":3097:3098  3 */\n      0x3\n        /* \"contracts/BimodalLib.sol\":3073:3077  self */\n      dup5\n        /* \"contracts/BimodalLib.sol\":3073:3092  self.BLOCKS_PER_EON */\n      0x2\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":3073:3096  self.BLOCKS_PER_EON.div */\n      tag_74\n      swap1\n        /* \"contracts/BimodalLib.sol\":3073:3099  self.BLOCKS_PER_EON.div(3) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_83:\n        /* \"contracts/BimodalLib.sol\":3040:3044  self */\n      dup4\n        /* \"contracts/BimodalLib.sol\":3040:3070  self.EXTENDED_BLOCKS_PER_EPOCH */\n      0x4\n      add\n        /* \"contracts/BimodalLib.sol\":3040:3099  self.EXTENDED_BLOCKS_PER_EPOCH = self.BLOCKS_PER_EON.div(3) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":3122:3123  5 */\n      0x5\n        /* \"contracts/BimodalLib.sol\":3105:3109  self */\n      dup4\n        /* \"contracts/BimodalLib.sol\":3105:3119  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n        /* \"contracts/BimodalLib.sol\":3105:3123  self.EONS_KEPT = 5 */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":3172:3173  3 */\n      0x3\n        /* \"contracts/BimodalLib.sol\":3151:3155  self */\n      dup4\n        /* \"contracts/BimodalLib.sol\":3151:3169  self.DEPOSITS_KEPT */\n      0x0\n      add\n      0x1\n        /* \"contracts/BimodalLib.sol\":3151:3173  self.DEPOSITS_KEPT = 3 */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":3245:3256  0.005 szabo */\n      0x12a05f200\n        /* \"contracts/BimodalLib.sol\":3215:3219  self */\n      dup4\n        /* \"contracts/BimodalLib.sol\":3215:3242  self.MIN_CHALLENGE_GAS_COST */\n      0x1\n      add\n        /* \"contracts/BimodalLib.sol\":3215:3256  self.MIN_CHALLENGE_GAS_COST = 0.005 szabo */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":3319:3327  operator */\n      dup1\n        /* \"contracts/BimodalLib.sol\":3303:3307  self */\n      dup4\n        /* \"contracts/BimodalLib.sol\":3303:3316  self.operator */\n      0x6\n      add\n      0x0\n        /* \"contracts/BimodalLib.sol\":3303:3327  self.operator = operator */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":3348:3360  block.number */\n      number\n        /* \"contracts/BimodalLib.sol\":3333:3337  self */\n      dup4\n        /* \"contracts/BimodalLib.sol\":3333:3345  self.genesis */\n      0x5\n      add\n        /* \"contracts/BimodalLib.sol\":3333:3360  self.genesis = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":2834:3365  function init(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BimodalLib.sol\":3743:3909  function currentEra(... */\n    tag_26:\n        /* \"contracts/BimodalLib.sol\":3825:3832  uint256 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":3849:3904  block.number.sub(self.genesis).mod(self.BLOCKS_PER_EON) */\n      tag_85\n        /* \"contracts/BimodalLib.sol\":3884:3888  self */\n      dup3\n        /* \"contracts/BimodalLib.sol\":3884:3903  self.BLOCKS_PER_EON */\n      0x2\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":3849:3879  block.number.sub(self.genesis) */\n      tag_86\n        /* \"contracts/BimodalLib.sol\":3866:3870  self */\n      dup5\n        /* \"contracts/BimodalLib.sol\":3866:3878  self.genesis */\n      0x5\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":3849:3861  block.number */\n      number\n        /* \"contracts/BimodalLib.sol\":3849:3865  block.number.sub */\n      tag_65\n      swap1\n        /* \"contracts/BimodalLib.sol\":3849:3879  block.number.sub(self.genesis) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"contracts/BimodalLib.sol\":3849:3883  block.number.sub(self.genesis).mod */\n      tag_56\n      swap1\n        /* \"contracts/BimodalLib.sol\":3849:3904  block.number.sub(self.genesis).mod(self.BLOCKS_PER_EON) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"contracts/BimodalLib.sol\":3842:3904  return block.number.sub(self.genesis).mod(self.BLOCKS_PER_EON) */\n      swap1\n      pop\n        /* \"contracts/BimodalLib.sol\":3743:3909  function currentEra(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BimodalLib.sol\":10623:10993  function signedMessageECRECOVER(... */\n    tag_28:\n        /* \"contracts/BimodalLib.sol\":10748:10755  address */\n      0x0\n        /* \"contracts/BimodalLib.sol\":10772:10988  ecrecover(... */\n      0x1\n        /* \"contracts/BimodalLib.sol\":10961:10968  message */\n      dup6\n        /* \"contracts/BimodalLib.sol\":10879:10969  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x194c69717569646974792e4e6574776f726b20417574686f72697a6174696f6e\n      dup2\n      mstore\n      0x20\n      add\n      0x3a0a333200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x24\n      add\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/BimodalLib.sol\":10879:10969  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/BimodalLib.sol\":10869:10970  keccak256(abi.encodePacked(... */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_88:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_89\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_88)\n    tag_89:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/BimodalLib.sol\":10869:10970  keccak256(abi.encodePacked(... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/BimodalLib.sol\":10799:10971  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n      dup2\n      mstore\n      pop\n      0x1c\n      add\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/BimodalLib.sol\":10799:10971  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/BimodalLib.sol\":10789:10972  keccak256(abi.encodePacked(... */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_91:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_92\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_91)\n    tag_92:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/BimodalLib.sol\":10789:10972  keccak256(abi.encodePacked(... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/BimodalLib.sol\":10980:10981  v */\n      dup4\n        /* \"contracts/BimodalLib.sol\":10983:10984  r */\n      dup7\n        /* \"contracts/BimodalLib.sol\":10986:10987  s */\n      dup7\n        /* \"contracts/BimodalLib.sol\":10772:10988  ecrecover(... */\n      mload(0x40)\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      0x0\n      dup7\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_94:\n        /* \"contracts/BimodalLib.sol\":10772:10988  ecrecover(... */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/BimodalLib.sol\":10765:10988  return ecrecover(... */\n      swap1\n      pop\n        /* \"contracts/BimodalLib.sol\":10623:10993  function signedMessageECRECOVER(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BimodalLib.sol\":10197:10481  function addToAggregate(... */\n    tag_31:\n        /* \"contracts/BimodalLib.sol\":10329:10338  aggregate */\n      dup3\n        /* \"contracts/BimodalLib.sol\":10329:10342  aggregate.eon */\n      0x0\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":10323:10326  eon */\n      dup3\n        /* \"contracts/BimodalLib.sol\":10323:10342  eon > aggregate.eon */\n      gt\n        /* \"contracts/BimodalLib.sol\":10319:10477  if (eon > aggregate.eon) {... */\n      iszero\n      tag_96\n      jumpi\n        /* \"contracts/BimodalLib.sol\":10368:10371  eon */\n      dup2\n        /* \"contracts/BimodalLib.sol\":10352:10361  aggregate */\n      dup4\n        /* \"contracts/BimodalLib.sol\":10352:10365  aggregate.eon */\n      0x0\n      add\n        /* \"contracts/BimodalLib.sol\":10352:10371  aggregate.eon = eon */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":10398:10403  value */\n      dup1\n        /* \"contracts/BimodalLib.sol\":10379:10388  aggregate */\n      dup4\n        /* \"contracts/BimodalLib.sol\":10379:10395  aggregate.amount */\n      0x1\n      add\n        /* \"contracts/BimodalLib.sol\":10379:10403  aggregate.amount = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":10319:10477  if (eon > aggregate.eon) {... */\n      jump(tag_97)\n    tag_96:\n        /* \"contracts/BimodalLib.sol\":10443:10470  aggregate.amount.add(value) */\n      tag_98\n        /* \"contracts/BimodalLib.sol\":10464:10469  value */\n      dup2\n        /* \"contracts/BimodalLib.sol\":10443:10452  aggregate */\n      dup5\n        /* \"contracts/BimodalLib.sol\":10443:10459  aggregate.amount */\n      0x1\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":10443:10463  aggregate.amount.add */\n      tag_75\n      swap1\n        /* \"contracts/BimodalLib.sol\":10443:10470  aggregate.amount.add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_98:\n        /* \"contracts/BimodalLib.sol\":10424:10433  aggregate */\n      dup4\n        /* \"contracts/BimodalLib.sol\":10424:10440  aggregate.amount */\n      0x1\n      add\n        /* \"contracts/BimodalLib.sol\":10424:10470  aggregate.amount = aggregate.amount.add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":10319:10477  if (eon > aggregate.eon) {... */\n    tag_97:\n        /* \"contracts/BimodalLib.sol\":10197:10481  function addToAggregate(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BimodalLib.sol\":8609:9210  function getWalletPendingWithdrawalAmountAtEon(... */\n    tag_33:\n        /* \"contracts/BimodalLib.sol\":8772:8786  uint256 amount */\n      0x0\n        /* \"contracts/BimodalLib.sol\":8813:8843  Wallet storage accountingEntry */\n      dup1\n        /* \"contracts/BimodalLib.sol\":8882:8914  Withdrawal[] storage withdrawals */\n      0x0\n        /* \"contracts/BimodalLib.sol\":8955:8963  uint32 i */\n      dup1\n        /* \"contracts/BimodalLib.sol\":9006:9035  Withdrawal storage withdrawal */\n      0x0\n        /* \"contracts/BimodalLib.sol\":8805:8806  0 */\n      dup1\n        /* \"contracts/BimodalLib.sol\":8796:8806  amount = 0 */\n      swap5\n      pop\n        /* \"contracts/BimodalLib.sol\":8846:8850  self */\n      dup9\n        /* \"contracts/BimodalLib.sol\":8846:8861  self.walletBook */\n      0x1d\n      add\n        /* \"contracts/BimodalLib.sol\":8846:8868  self.walletBook[token] */\n      0x0\n        /* \"contracts/BimodalLib.sol\":8862:8867  token */\n      dup10\n        /* \"contracts/BimodalLib.sol\":8846:8868  self.walletBook[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BimodalLib.sol\":8846:8876  self.walletBook[token][holder] */\n      0x0\n        /* \"contracts/BimodalLib.sol\":8869:8875  holder */\n      dup9\n        /* \"contracts/BimodalLib.sol\":8846:8876  self.walletBook[token][holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BimodalLib.sol\":8813:8876  Wallet storage accountingEntry = self.walletBook[token][holder] */\n      swap4\n      pop\n        /* \"contracts/BimodalLib.sol\":8917:8932  accountingEntry */\n      dup4\n        /* \"contracts/BimodalLib.sol\":8917:8944  accountingEntry.withdrawals */\n      0x6\n      add\n        /* \"contracts/BimodalLib.sol\":8882:8944  Withdrawal[] storage withdrawals = accountingEntry.withdrawals */\n      swap3\n      pop\n        /* \"contracts/BimodalLib.sol\":8966:8967  0 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":8955:8967  uint32 i = 0 */\n      swap2\n      pop\n        /* \"contracts/BimodalLib.sol\":8950:9206  for (uint32 i = 0; i < withdrawals.length; i++) {... */\n    tag_100:\n        /* \"contracts/BimodalLib.sol\":8973:8984  withdrawals */\n      dup3\n        /* \"contracts/BimodalLib.sol\":8973:8991  withdrawals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/BimodalLib.sol\":8969:8970  i */\n      dup3\n        /* \"contracts/BimodalLib.sol\":8969:8991  i < withdrawals.length */\n      0xffffffff\n      and\n      lt\n        /* \"contracts/BimodalLib.sol\":8950:9206  for (uint32 i = 0; i < withdrawals.length; i++) {... */\n      iszero\n      tag_101\n      jumpi\n        /* \"contracts/BimodalLib.sol\":9038:9049  withdrawals */\n      dup3\n        /* \"contracts/BimodalLib.sol\":9050:9051  i */\n      dup3\n        /* \"contracts/BimodalLib.sol\":9038:9052  withdrawals[i] */\n      0xffffffff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_103\n      jumpi\n      invalid\n    tag_103:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      0x2\n      mul\n      add\n        /* \"contracts/BimodalLib.sol\":9006:9052  Withdrawal storage withdrawal = withdrawals[i] */\n      swap1\n      pop\n        /* \"contracts/BimodalLib.sol\":9082:9085  eon */\n      dup6\n        /* \"contracts/BimodalLib.sol\":9064:9074  withdrawal */\n      dup2\n        /* \"contracts/BimodalLib.sol\":9064:9078  withdrawal.eon */\n      0x0\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":9064:9085  withdrawal.eon == eon */\n      eq\n        /* \"contracts/BimodalLib.sol\":9060:9200  if (withdrawal.eon == eon) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"contracts/BimodalLib.sol\":9106:9135  amount.add(withdrawal.amount) */\n      tag_106\n        /* \"contracts/BimodalLib.sol\":9117:9127  withdrawal */\n      dup2\n        /* \"contracts/BimodalLib.sol\":9117:9134  withdrawal.amount */\n      0x1\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":9106:9112  amount */\n      dup7\n        /* \"contracts/BimodalLib.sol\":9106:9116  amount.add */\n      tag_75\n      swap1\n        /* \"contracts/BimodalLib.sol\":9106:9135  amount.add(withdrawal.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"contracts/BimodalLib.sol\":9097:9135  amount = amount.add(withdrawal.amount) */\n      swap5\n      pop\n        /* \"contracts/BimodalLib.sol\":9060:9200  if (withdrawal.eon == eon) {... */\n      jump(tag_107)\n    tag_105:\n        /* \"contracts/BimodalLib.sol\":9171:9174  eon */\n      dup6\n        /* \"contracts/BimodalLib.sol\":9154:9164  withdrawal */\n      dup2\n        /* \"contracts/BimodalLib.sol\":9154:9168  withdrawal.eon */\n      0x0\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":9154:9174  withdrawal.eon > eon */\n      gt\n        /* \"contracts/BimodalLib.sol\":9150:9200  if (withdrawal.eon > eon) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"contracts/BimodalLib.sol\":9186:9191  break */\n      jump(tag_101)\n        /* \"contracts/BimodalLib.sol\":9150:9200  if (withdrawal.eon > eon) {... */\n    tag_108:\n        /* \"contracts/BimodalLib.sol\":9060:9200  if (withdrawal.eon == eon) {... */\n    tag_107:\n        /* \"contracts/BimodalLib.sol\":8993:8996  i++ */\n      dup2\n      dup1\n      0x1\n      add\n      swap3\n      pop\n      pop\n        /* \"contracts/BimodalLib.sol\":8950:9206  for (uint32 i = 0; i < withdrawals.length; i++) {... */\n      jump(tag_100)\n    tag_101:\n        /* \"contracts/BimodalLib.sol\":8609:9210  function getWalletPendingWithdrawalAmountAtEon(... */\n      pop\n      pop\n      pop\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BimodalLib.sol\":5697:6304  function addToRunningPendingWithdrawals(... */\n    tag_36:\n        /* \"contracts/BimodalLib.sol\":5838:5871  AmountAggregate storage aggregate */\n      0x0\n        /* \"contracts/BimodalLib.sol\":5874:5878  self */\n      dup5\n        /* \"contracts/BimodalLib.sol\":5874:5897  self.pendingWithdrawals */\n      0x1f\n      add\n        /* \"contracts/BimodalLib.sol\":5874:5904  self.pendingWithdrawals[token] */\n      0x0\n        /* \"contracts/BimodalLib.sol\":5898:5903  token */\n      dup6\n        /* \"contracts/BimodalLib.sol\":5874:5904  self.pendingWithdrawals[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BimodalLib.sol\":5905:5928  eon.mod(self.EONS_KEPT) */\n      tag_110\n        /* \"contracts/BimodalLib.sol\":5913:5917  self */\n      dup7\n        /* \"contracts/BimodalLib.sol\":5913:5927  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":5905:5928  eon.mod(self.EONS_KEPT) */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":5905:5908  eon */\n      dup6\n        /* \"contracts/BimodalLib.sol\":5905:5912  eon.mod */\n      tag_56\n      swap1\n        /* \"contracts/BimodalLib.sol\":5905:5928  eon.mod(self.EONS_KEPT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/BimodalLib.sol\":5874:5929  self.pendingWithdrawals[token][eon.mod(self.EONS_KEPT)] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_111\n      jumpi\n      invalid\n    tag_111:\n      0x2\n      mul\n      add\n        /* \"contracts/BimodalLib.sol\":5838:5929  AmountAggregate storage aggregate = self.pendingWithdrawals[token][eon.mod(self.EONS_KEPT)] */\n      swap1\n      pop\n        /* \"contracts/BimodalLib.sol\":6086:6089  eon */\n      dup3\n        /* \"contracts/BimodalLib.sol\":6070:6079  aggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":6070:6083  aggregate.eon */\n      0x0\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":6070:6089  aggregate.eon < eon */\n      lt\n        /* \"contracts/BimodalLib.sol\":6066:6300  if (aggregate.eon < eon) { // implies eon > 0... */\n      iszero\n      tag_113\n      jumpi\n        /* \"contracts/BimodalLib.sol\":6137:6199  getPendingWithdrawalsAtEon(self, token, eon.sub(1)).add(value) */\n      tag_114\n        /* \"contracts/BimodalLib.sol\":6193:6198  value */\n      dup3\n        /* \"contracts/BimodalLib.sol\":6137:6188  getPendingWithdrawalsAtEon(self, token, eon.sub(1)) */\n      tag_115\n        /* \"contracts/BimodalLib.sol\":6164:6168  self */\n      dup8\n        /* \"contracts/BimodalLib.sol\":6170:6175  token */\n      dup8\n        /* \"contracts/BimodalLib.sol\":6177:6187  eon.sub(1) */\n      tag_116\n        /* \"contracts/BimodalLib.sol\":6185:6186  1 */\n      0x1\n        /* \"contracts/BimodalLib.sol\":6177:6180  eon */\n      dup10\n        /* \"contracts/BimodalLib.sol\":6177:6184  eon.sub */\n      tag_65\n      swap1\n        /* \"contracts/BimodalLib.sol\":6177:6187  eon.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"contracts/BimodalLib.sol\":6137:6163  getPendingWithdrawalsAtEon */\n      tag_17\n        /* \"contracts/BimodalLib.sol\":6137:6188  getPendingWithdrawalsAtEon(self, token, eon.sub(1)) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/BimodalLib.sol\":6137:6192  getPendingWithdrawalsAtEon(self, token, eon.sub(1)).add */\n      tag_75\n      swap1\n        /* \"contracts/BimodalLib.sol\":6137:6199  getPendingWithdrawalsAtEon(self, token, eon.sub(1)).add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"contracts/BimodalLib.sol\":6118:6127  aggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":6118:6134  aggregate.amount */\n      0x1\n      add\n        /* \"contracts/BimodalLib.sol\":6118:6199  aggregate.amount = getPendingWithdrawalsAtEon(self, token, eon.sub(1)).add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":6223:6226  eon */\n      dup3\n        /* \"contracts/BimodalLib.sol\":6207:6216  aggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":6207:6220  aggregate.eon */\n      0x0\n      add\n        /* \"contracts/BimodalLib.sol\":6207:6226  aggregate.eon = eon */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":6066:6300  if (aggregate.eon < eon) { // implies eon > 0... */\n      jump(tag_117)\n    tag_113:\n        /* \"contracts/BimodalLib.sol\":6266:6293  aggregate.amount.add(value) */\n      tag_118\n        /* \"contracts/BimodalLib.sol\":6287:6292  value */\n      dup3\n        /* \"contracts/BimodalLib.sol\":6266:6275  aggregate */\n      dup3\n        /* \"contracts/BimodalLib.sol\":6266:6282  aggregate.amount */\n      0x1\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":6266:6286  aggregate.amount.add */\n      tag_75\n      swap1\n        /* \"contracts/BimodalLib.sol\":6266:6293  aggregate.amount.add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/BimodalLib.sol\":6247:6256  aggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":6247:6263  aggregate.amount */\n      0x1\n      add\n        /* \"contracts/BimodalLib.sol\":6247:6293  aggregate.amount = aggregate.amount.add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":6066:6300  if (aggregate.eon < eon) { // implies eon > 0... */\n    tag_117:\n        /* \"contracts/BimodalLib.sol\":5697:6304  function addToRunningPendingWithdrawals(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BimodalLib.sol\":6392:7517  function deductFromRunningPendingWithdrawals(... */\n    tag_39:\n        /* \"contracts/BimodalLib.sol\":6621:6630  uint256 i */\n      0x0\n        /* \"contracts/BimodalLib.sol\":6669:6686  uint256 targetEon */\n      dup1\n        /* \"contracts/BimodalLib.sol\":6707:6740  AmountAggregate storage aggregate */\n      0x0\n        /* \"contracts/BimodalLib.sol\":6633:6634  0 */\n      dup1\n        /* \"contracts/BimodalLib.sol\":6621:6634  uint256 i = 0 */\n      swap3\n      pop\n        /* \"contracts/BimodalLib.sol\":6616:7099  for (uint256 i = 0; i < self.EONS_KEPT; i++) {... */\n    tag_120:\n        /* \"contracts/BimodalLib.sol\":6640:6644  self */\n      dup8\n        /* \"contracts/BimodalLib.sol\":6640:6654  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":6636:6654  i < self.EONS_KEPT */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":6636:6637  i */\n      dup4\n        /* \"contracts/BimodalLib.sol\":6636:6654  i < self.EONS_KEPT */\n      lt\n        /* \"contracts/BimodalLib.sol\":6616:7099  for (uint256 i = 0; i < self.EONS_KEPT; i++) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contracts/BimodalLib.sol\":6689:6699  eon.add(i) */\n      tag_123\n        /* \"contracts/BimodalLib.sol\":6697:6698  i */\n      dup4\n        /* \"contracts/BimodalLib.sol\":6689:6692  eon */\n      dup8\n        /* \"contracts/BimodalLib.sol\":6689:6696  eon.add */\n      tag_75\n      swap1\n        /* \"contracts/BimodalLib.sol\":6689:6699  eon.add(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"contracts/BimodalLib.sol\":6669:6699  uint256 targetEon = eon.add(i) */\n      swap2\n      pop\n        /* \"contracts/BimodalLib.sol\":6743:6747  self */\n      dup8\n        /* \"contracts/BimodalLib.sol\":6743:6766  self.pendingWithdrawals */\n      0x1f\n      add\n        /* \"contracts/BimodalLib.sol\":6743:6773  self.pendingWithdrawals[token] */\n      0x0\n        /* \"contracts/BimodalLib.sol\":6767:6772  token */\n      dup9\n        /* \"contracts/BimodalLib.sol\":6743:6773  self.pendingWithdrawals[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BimodalLib.sol\":6774:6803  targetEon.mod(self.EONS_KEPT) */\n      tag_124\n        /* \"contracts/BimodalLib.sol\":6788:6792  self */\n      dup10\n        /* \"contracts/BimodalLib.sol\":6788:6802  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":6774:6803  targetEon.mod(self.EONS_KEPT) */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":6774:6783  targetEon */\n      dup5\n        /* \"contracts/BimodalLib.sol\":6774:6787  targetEon.mod */\n      tag_56\n      swap1\n        /* \"contracts/BimodalLib.sol\":6774:6803  targetEon.mod(self.EONS_KEPT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"contracts/BimodalLib.sol\":6743:6804  self.pendingWithdrawals[token][targetEon.mod(self.EONS_KEPT)] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_125\n      jumpi\n      invalid\n    tag_125:\n      0x2\n      mul\n      add\n        /* \"contracts/BimodalLib.sol\":6707:6804  AmountAggregate storage aggregate = self.pendingWithdrawals[token][targetEon.mod(self.EONS_KEPT)] */\n      swap1\n      pop\n        /* \"contracts/BimodalLib.sol\":6828:6837  latestEon */\n      dup5\n        /* \"contracts/BimodalLib.sol\":6816:6825  targetEon */\n      dup3\n        /* \"contracts/BimodalLib.sol\":6816:6837  targetEon > latestEon */\n      gt\n        /* \"contracts/BimodalLib.sol\":6812:7093  if (targetEon > latestEon) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"contracts/BimodalLib.sol\":6849:6854  break */\n      jump(tag_121)\n        /* \"contracts/BimodalLib.sol\":6812:7093  if (targetEon > latestEon) {... */\n    tag_127:\n        /* \"contracts/BimodalLib.sol\":6889:6898  targetEon */\n      dup2\n        /* \"contracts/BimodalLib.sol\":6873:6882  aggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":6873:6886  aggregate.eon */\n      0x0\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":6873:6898  aggregate.eon < targetEon */\n      lt\n        /* \"contracts/BimodalLib.sol\":6869:7093  if (aggregate.eon < targetEon) { // implies targetEon > 0... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/BimodalLib.sol\":6989:6998  targetEon */\n      dup2\n        /* \"contracts/BimodalLib.sol\":6973:6982  aggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":6973:6986  aggregate.eon */\n      0x0\n      add\n        /* \"contracts/BimodalLib.sol\":6973:6998  aggregate.eon = targetEon */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":7027:7084  getPendingWithdrawalsAtEon(self, token, targetEon.sub(1)) */\n      tag_130\n        /* \"contracts/BimodalLib.sol\":7054:7058  self */\n      dup9\n        /* \"contracts/BimodalLib.sol\":7060:7065  token */\n      dup9\n        /* \"contracts/BimodalLib.sol\":7067:7083  targetEon.sub(1) */\n      tag_131\n        /* \"contracts/BimodalLib.sol\":7081:7082  1 */\n      0x1\n        /* \"contracts/BimodalLib.sol\":7067:7076  targetEon */\n      dup7\n        /* \"contracts/BimodalLib.sol\":7067:7080  targetEon.sub */\n      tag_65\n      swap1\n        /* \"contracts/BimodalLib.sol\":7067:7083  targetEon.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"contracts/BimodalLib.sol\":7027:7053  getPendingWithdrawalsAtEon */\n      tag_17\n        /* \"contracts/BimodalLib.sol\":7027:7084  getPendingWithdrawalsAtEon(self, token, targetEon.sub(1)) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/BimodalLib.sol\":7008:7017  aggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":7008:7024  aggregate.amount */\n      0x1\n      add\n        /* \"contracts/BimodalLib.sol\":7008:7084  aggregate.amount = getPendingWithdrawalsAtEon(self, token, targetEon.sub(1)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":6869:7093  if (aggregate.eon < targetEon) { // implies targetEon > 0... */\n    tag_129:\n        /* \"contracts/BimodalLib.sol\":6656:6659  i++ */\n      dup3\n      dup1\n      0x1\n      add\n      swap4\n      pop\n      pop\n        /* \"contracts/BimodalLib.sol\":6616:7099  for (uint256 i = 0; i < self.EONS_KEPT; i++) {... */\n      jump(tag_120)\n    tag_121:\n        /* \"contracts/BimodalLib.sol\":7145:7146  0 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":7141:7146  i = 0 */\n      swap3\n      pop\n        /* \"contracts/BimodalLib.sol\":7136:7513  for (i = 0; i < self.EONS_KEPT; i++) {... */\n    tag_132:\n        /* \"contracts/BimodalLib.sol\":7152:7156  self */\n      dup8\n        /* \"contracts/BimodalLib.sol\":7152:7166  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":7148:7166  i < self.EONS_KEPT */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":7148:7149  i */\n      dup4\n        /* \"contracts/BimodalLib.sol\":7148:7166  i < self.EONS_KEPT */\n      lt\n        /* \"contracts/BimodalLib.sol\":7136:7513  for (i = 0; i < self.EONS_KEPT; i++) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"contracts/BimodalLib.sol\":7194:7204  eon.add(i) */\n      tag_135\n        /* \"contracts/BimodalLib.sol\":7202:7203  i */\n      dup4\n        /* \"contracts/BimodalLib.sol\":7194:7197  eon */\n      dup8\n        /* \"contracts/BimodalLib.sol\":7194:7201  eon.add */\n      tag_75\n      swap1\n        /* \"contracts/BimodalLib.sol\":7194:7204  eon.add(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"contracts/BimodalLib.sol\":7182:7204  targetEon = eon.add(i) */\n      swap2\n      pop\n        /* \"contracts/BimodalLib.sol\":7226:7230  self */\n      dup8\n        /* \"contracts/BimodalLib.sol\":7226:7249  self.pendingWithdrawals */\n      0x1f\n      add\n        /* \"contracts/BimodalLib.sol\":7226:7256  self.pendingWithdrawals[token] */\n      0x0\n        /* \"contracts/BimodalLib.sol\":7250:7255  token */\n      dup9\n        /* \"contracts/BimodalLib.sol\":7226:7256  self.pendingWithdrawals[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BimodalLib.sol\":7257:7286  targetEon.mod(self.EONS_KEPT) */\n      tag_136\n        /* \"contracts/BimodalLib.sol\":7271:7275  self */\n      dup10\n        /* \"contracts/BimodalLib.sol\":7271:7285  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":7257:7286  targetEon.mod(self.EONS_KEPT) */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":7257:7266  targetEon */\n      dup5\n        /* \"contracts/BimodalLib.sol\":7257:7270  targetEon.mod */\n      tag_56\n      swap1\n        /* \"contracts/BimodalLib.sol\":7257:7286  targetEon.mod(self.EONS_KEPT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"contracts/BimodalLib.sol\":7226:7287  self.pendingWithdrawals[token][targetEon.mod(self.EONS_KEPT)] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_137\n      jumpi\n      invalid\n    tag_137:\n      0x2\n      mul\n      add\n        /* \"contracts/BimodalLib.sol\":7214:7287  aggregate = self.pendingWithdrawals[token][targetEon.mod(self.EONS_KEPT)] */\n      swap1\n      pop\n        /* \"contracts/BimodalLib.sol\":7311:7320  latestEon */\n      dup5\n        /* \"contracts/BimodalLib.sol\":7299:7308  targetEon */\n      dup3\n        /* \"contracts/BimodalLib.sol\":7299:7320  targetEon > latestEon */\n      gt\n        /* \"contracts/BimodalLib.sol\":7295:7507  if (targetEon > latestEon) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/BimodalLib.sol\":7332:7337  break */\n      jump(tag_133)\n        /* \"contracts/BimodalLib.sol\":7295:7507  if (targetEon > latestEon) {... */\n    tag_139:\n        /* \"contracts/BimodalLib.sol\":7372:7381  targetEon */\n      dup2\n        /* \"contracts/BimodalLib.sol\":7356:7365  aggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":7356:7369  aggregate.eon */\n      0x0\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":7356:7381  aggregate.eon < targetEon */\n      lt\n        /* \"contracts/BimodalLib.sol\":7352:7507  if (aggregate.eon < targetEon) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/BimodalLib.sol\":7393:7404  revert('X') */\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5800000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BimodalLib.sol\":7352:7507  if (aggregate.eon < targetEon) {... */\n    tag_141:\n        /* \"contracts/BimodalLib.sol\":7471:7498  aggregate.amount.sub(value) */\n      tag_143\n        /* \"contracts/BimodalLib.sol\":7492:7497  value */\n      dup5\n        /* \"contracts/BimodalLib.sol\":7471:7480  aggregate */\n      dup3\n        /* \"contracts/BimodalLib.sol\":7471:7487  aggregate.amount */\n      0x1\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":7471:7491  aggregate.amount.sub */\n      tag_65\n      swap1\n        /* \"contracts/BimodalLib.sol\":7471:7498  aggregate.amount.sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"contracts/BimodalLib.sol\":7452:7461  aggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":7452:7468  aggregate.amount */\n      0x1\n      add\n        /* \"contracts/BimodalLib.sol\":7452:7498  aggregate.amount = aggregate.amount.sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":7168:7171  i++ */\n      dup3\n      dup1\n      0x1\n      add\n      swap4\n      pop\n      pop\n        /* \"contracts/BimodalLib.sol\":7136:7513  for (i = 0; i < self.EONS_KEPT; i++) {... */\n      jump(tag_132)\n    tag_133:\n        /* \"contracts/BimodalLib.sol\":6392:7517  function deductFromRunningPendingWithdrawals(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BimodalLib.sol\":7978:8517  function getOrCreateCheckpoint(... */\n    tag_42:\n        /* \"contracts/BimodalLib.sol\":8108:8137  Checkpoint storage checkpoint */\n      0x0\n        /* \"contracts/BimodalLib.sol\":8230:8243  uint256 index */\n      dup1\n        /* \"contracts/BimodalLib.sol\":8167:8196  targetEon.add(self.EONS_KEPT) */\n      tag_145\n        /* \"contracts/BimodalLib.sol\":8181:8185  self */\n      dup6\n        /* \"contracts/BimodalLib.sol\":8181:8195  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":8167:8196  targetEon.add(self.EONS_KEPT) */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":8167:8176  targetEon */\n      dup6\n        /* \"contracts/BimodalLib.sol\":8167:8180  targetEon.add */\n      tag_75\n      swap1\n        /* \"contracts/BimodalLib.sol\":8167:8196  targetEon.add(self.EONS_KEPT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_145:\n        /* \"contracts/BimodalLib.sol\":8155:8164  latestEon */\n      dup4\n        /* \"contracts/BimodalLib.sol\":8155:8196  latestEon < targetEon.add(self.EONS_KEPT) */\n      lt\n        /* \"contracts/BimodalLib.sol\":8155:8222  latestEon < targetEon.add(self.EONS_KEPT) && targetEon <= latestEon */\n      dup1\n      iszero\n      tag_146\n      jumpi\n      pop\n        /* \"contracts/BimodalLib.sol\":8213:8222  latestEon */\n      dup3\n        /* \"contracts/BimodalLib.sol\":8200:8209  targetEon */\n      dup5\n        /* \"contracts/BimodalLib.sol\":8200:8222  targetEon <= latestEon */\n      gt\n      iszero\n        /* \"contracts/BimodalLib.sol\":8155:8222  latestEon < targetEon.add(self.EONS_KEPT) && targetEon <= latestEon */\n    tag_146:\n        /* \"contracts/BimodalLib.sol\":8147:8223  require(latestEon < targetEon.add(self.EONS_KEPT) && targetEon <= latestEon) */\n      iszero\n      iszero\n      tag_147\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_147:\n        /* \"contracts/BimodalLib.sol\":8246:8275  targetEon.mod(self.EONS_KEPT) */\n      tag_148\n        /* \"contracts/BimodalLib.sol\":8260:8264  self */\n      dup6\n        /* \"contracts/BimodalLib.sol\":8260:8274  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":8246:8275  targetEon.mod(self.EONS_KEPT) */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":8246:8255  targetEon */\n      dup6\n        /* \"contracts/BimodalLib.sol\":8246:8259  targetEon.mod */\n      tag_56\n      swap1\n        /* \"contracts/BimodalLib.sol\":8246:8275  targetEon.mod(self.EONS_KEPT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"contracts/BimodalLib.sol\":8230:8275  uint256 index = targetEon.mod(self.EONS_KEPT) */\n      swap1\n      pop\n        /* \"contracts/BimodalLib.sol\":8294:8298  self */\n      dup5\n        /* \"contracts/BimodalLib.sol\":8294:8310  self.checkpoints */\n      0x7\n      add\n        /* \"contracts/BimodalLib.sol\":8311:8316  index */\n      dup2\n        /* \"contracts/BimodalLib.sol\":8294:8317  self.checkpoints[index] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_149\n      jumpi\n      invalid\n    tag_149:\n      0x3\n      mul\n      add\n        /* \"contracts/BimodalLib.sol\":8281:8317  checkpoint = self.checkpoints[index] */\n      swap2\n      pop\n        /* \"contracts/BimodalLib.sol\":8352:8361  targetEon */\n      dup4\n        /* \"contracts/BimodalLib.sol\":8328:8338  checkpoint */\n      dup3\n        /* \"contracts/BimodalLib.sol\":8328:8348  checkpoint.eonNumber */\n      0x0\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":8328:8361  checkpoint.eonNumber != targetEon */\n      eq\n      iszero\n        /* \"contracts/BimodalLib.sol\":8324:8489  if (checkpoint.eonNumber != targetEon) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"contracts/BimodalLib.sol\":8394:8403  targetEon */\n      dup4\n        /* \"contracts/BimodalLib.sol\":8371:8381  checkpoint */\n      dup3\n        /* \"contracts/BimodalLib.sol\":8371:8391  checkpoint.eonNumber */\n      0x0\n      add\n        /* \"contracts/BimodalLib.sol\":8371:8403  checkpoint.eonNumber = targetEon */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":8443:8444  0 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":8435:8445  bytes32(0) */\n      0x1\n      mul\n        /* \"contracts/BimodalLib.sol\":8411:8421  checkpoint */\n      dup3\n        /* \"contracts/BimodalLib.sol\":8411:8432  checkpoint.merkleRoot */\n      0x1\n      add\n        /* \"contracts/BimodalLib.sol\":8411:8445  checkpoint.merkleRoot = bytes32(0) */\n      dup2\n      not(0x0)\n      and\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":8481:8482  0 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":8453:8463  checkpoint */\n      dup3\n        /* \"contracts/BimodalLib.sol\":8453:8478  checkpoint.liveChallenges */\n      0x2\n      add\n        /* \"contracts/BimodalLib.sol\":8453:8482  checkpoint.liveChallenges = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":8324:8489  if (checkpoint.eonNumber != targetEon) {... */\n    tag_151:\n        /* \"contracts/BimodalLib.sol\":8502:8512  checkpoint */\n      dup2\n        /* \"contracts/BimodalLib.sol\":8495:8512  return checkpoint */\n      swap2\n      pop\n        /* \"contracts/BimodalLib.sol\":7978:8517  function getOrCreateCheckpoint(... */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BimodalLib.sol\":9306:10180  function getCurrentEonDepositsWithdrawals(... */\n    tag_44:\n        /* \"contracts/BimodalLib.sol\":9447:9473  uint256 currentEonDeposits */\n      0x0\n        /* \"contracts/BimodalLib.sol\":9475:9504  uint256 currentEonWithdrawals */\n      dup1\n        /* \"contracts/BimodalLib.sol\":9575:9605  Wallet storage accountingEntry */\n      0x0\n        /* \"contracts/BimodalLib.sol\":9644:9676  Challenge storage challengeEntry */\n      dup1\n        /* \"contracts/BimodalLib.sol\":9727:9763  AmountAggregate storage depositEntry */\n      0x0\n        /* \"contracts/BimodalLib.sol\":9536:9537  0 */\n      dup1\n        /* \"contracts/BimodalLib.sol\":9515:9537  currentEonDeposits = 0 */\n      swap5\n      pop\n        /* \"contracts/BimodalLib.sol\":9567:9568  0 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":9543:9568  currentEonWithdrawals = 0 */\n      swap4\n      pop\n        /* \"contracts/BimodalLib.sol\":9608:9612  self */\n      dup8\n        /* \"contracts/BimodalLib.sol\":9608:9623  self.walletBook */\n      0x1d\n      add\n        /* \"contracts/BimodalLib.sol\":9608:9630  self.walletBook[token] */\n      0x0\n        /* \"contracts/BimodalLib.sol\":9624:9629  token */\n      dup9\n        /* \"contracts/BimodalLib.sol\":9608:9630  self.walletBook[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BimodalLib.sol\":9608:9638  self.walletBook[token][holder] */\n      0x0\n        /* \"contracts/BimodalLib.sol\":9631:9637  holder */\n      dup8\n        /* \"contracts/BimodalLib.sol\":9608:9638  self.walletBook[token][holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BimodalLib.sol\":9575:9638  Wallet storage accountingEntry = self.walletBook[token][holder] */\n      swap3\n      pop\n        /* \"contracts/BimodalLib.sol\":9679:9683  self */\n      dup8\n        /* \"contracts/BimodalLib.sol\":9679:9697  self.challengeBook */\n      0x1c\n      add\n        /* \"contracts/BimodalLib.sol\":9679:9704  self.challengeBook[token] */\n      0x0\n        /* \"contracts/BimodalLib.sol\":9698:9703  token */\n      dup9\n        /* \"contracts/BimodalLib.sol\":9679:9704  self.challengeBook[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BimodalLib.sol\":9679:9712  self.challengeBook[token][holder] */\n      0x0\n        /* \"contracts/BimodalLib.sol\":9705:9711  holder */\n      dup8\n        /* \"contracts/BimodalLib.sol\":9679:9712  self.challengeBook[token][holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BimodalLib.sol\":9679:9720  self.challengeBook[token][holder][holder] */\n      0x0\n        /* \"contracts/BimodalLib.sol\":9713:9719  holder */\n      dup8\n        /* \"contracts/BimodalLib.sol\":9679:9720  self.challengeBook[token][holder][holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/BimodalLib.sol\":9644:9720  Challenge storage challengeEntry = self.challengeBook[token][holder][holder] */\n      swap2\n      pop\n        /* \"contracts/BimodalLib.sol\":9772:9787  accountingEntry */\n      dup3\n        /* \"contracts/BimodalLib.sol\":9772:9800  accountingEntry.depositsKept */\n      0x0\n      add\n        /* \"contracts/BimodalLib.sol\":9801:9855  challengeEntry.initialStateEon.mod(self.DEPOSITS_KEPT) */\n      tag_153\n        /* \"contracts/BimodalLib.sol\":9836:9840  self */\n      dup10\n        /* \"contracts/BimodalLib.sol\":9836:9854  self.DEPOSITS_KEPT */\n      0x0\n      add\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":9801:9855  challengeEntry.initialStateEon.mod(self.DEPOSITS_KEPT) */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":9801:9815  challengeEntry */\n      dup5\n        /* \"contracts/BimodalLib.sol\":9801:9831  challengeEntry.initialStateEon */\n      0x2\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":9801:9835  challengeEntry.initialStateEon.mod */\n      tag_56\n      swap1\n        /* \"contracts/BimodalLib.sol\":9801:9855  challengeEntry.initialStateEon.mod(self.DEPOSITS_KEPT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"contracts/BimodalLib.sol\":9772:9856  accountingEntry.depositsKept[challengeEntry.initialStateEon.mod(self.DEPOSITS_KEPT)] */\n      0x3\n      dup2\n      lt\n      iszero\n      iszero\n      tag_154\n      jumpi\n      invalid\n    tag_154:\n      0x2\n      mul\n      add\n        /* \"contracts/BimodalLib.sol\":9727:9856  AmountAggregate storage depositEntry =... */\n      swap1\n      pop\n        /* \"contracts/BimodalLib.sol\":9887:9901  challengeEntry */\n      dup2\n        /* \"contracts/BimodalLib.sol\":9887:9917  challengeEntry.initialStateEon */\n      0x2\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":9867:9879  depositEntry */\n      dup2\n        /* \"contracts/BimodalLib.sol\":9867:9883  depositEntry.eon */\n      0x0\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":9867:9917  depositEntry.eon == challengeEntry.initialStateEon */\n      eq\n        /* \"contracts/BimodalLib.sol\":9863:9998  if (depositEntry.eon == challengeEntry.initialStateEon) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"contracts/BimodalLib.sol\":9948:9991  currentEonDeposits.add(depositEntry.amount) */\n      tag_157\n        /* \"contracts/BimodalLib.sol\":9971:9983  depositEntry */\n      dup2\n        /* \"contracts/BimodalLib.sol\":9971:9990  depositEntry.amount */\n      0x1\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":9948:9966  currentEonDeposits */\n      dup7\n        /* \"contracts/BimodalLib.sol\":9948:9970  currentEonDeposits.add */\n      tag_75\n      swap1\n        /* \"contracts/BimodalLib.sol\":9948:9991  currentEonDeposits.add(depositEntry.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"contracts/BimodalLib.sol\":9927:9991  currentEonDeposits = currentEonDeposits.add(depositEntry.amount) */\n      swap5\n      pop\n        /* \"contracts/BimodalLib.sol\":9863:9998  if (depositEntry.eon == challengeEntry.initialStateEon) {... */\n    tag_156:\n        /* \"contracts/BimodalLib.sol\":10028:10118  getWalletPendingWithdrawalAmountAtEon(self, token, holder, challengeEntry.initialStateEon) */\n      tag_158\n        /* \"contracts/BimodalLib.sol\":10066:10070  self */\n      dup9\n        /* \"contracts/BimodalLib.sol\":10072:10077  token */\n      dup9\n        /* \"contracts/BimodalLib.sol\":10079:10085  holder */\n      dup9\n        /* \"contracts/BimodalLib.sol\":10087:10101  challengeEntry */\n      dup6\n        /* \"contracts/BimodalLib.sol\":10087:10117  challengeEntry.initialStateEon */\n      0x2\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":10028:10065  getWalletPendingWithdrawalAmountAtEon */\n      tag_33\n        /* \"contracts/BimodalLib.sol\":10028:10118  getWalletPendingWithdrawalAmountAtEon(self, token, holder, challengeEntry.initialStateEon) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/BimodalLib.sol\":10004:10118  currentEonWithdrawals = getWalletPendingWithdrawalAmountAtEon(self, token, holder, challengeEntry.initialStateEon) */\n      swap4\n      pop\n        /* \"contracts/BimodalLib.sol\":10133:10151  currentEonDeposits */\n      dup5\n        /* \"contracts/BimodalLib.sol\":10153:10174  currentEonWithdrawals */\n      dup5\n        /* \"contracts/BimodalLib.sol\":10125:10175  return (currentEonDeposits, currentEonWithdrawals) */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"contracts/BimodalLib.sol\":9306:10180  function getCurrentEonDepositsWithdrawals(... */\n      pop\n      pop\n      pop\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BimodalLib.sol\":10485:10619  function clearAggregate(... */\n    tag_47:\n        /* \"contracts/BimodalLib.sol\":10587:10588  0 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":10571:10580  aggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":10571:10584  aggregate.eon */\n      0x0\n      add\n        /* \"contracts/BimodalLib.sol\":10571:10588  aggregate.eon = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":10613:10614  0 */\n      0x0\n        /* \"contracts/BimodalLib.sol\":10594:10603  aggregate */\n      dup2\n        /* \"contracts/BimodalLib.sol\":10594:10610  aggregate.amount */\n      0x1\n      add\n        /* \"contracts/BimodalLib.sol\":10594:10614  aggregate.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":10485:10619  function clearAggregate(... */\n      pop\n      jump\t// out\n        /* \"contracts/BimodalLib.sol\":4158:4571  function appendOperationToEonAccumulator(... */\n    tag_50:\n        /* \"contracts/BimodalLib.sol\":4439:4443  self */\n      dup6\n        /* \"contracts/BimodalLib.sol\":4439:4466  self.parentChainAccumulator */\n      0x16\n      add\n        /* \"contracts/BimodalLib.sol\":4467:4490  eon.mod(self.EONS_KEPT) */\n      tag_161\n        /* \"contracts/BimodalLib.sol\":4475:4479  self */\n      dup8\n        /* \"contracts/BimodalLib.sol\":4475:4489  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":4467:4490  eon.mod(self.EONS_KEPT) */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":4467:4470  eon */\n      dup8\n        /* \"contracts/BimodalLib.sol\":4467:4474  eon.mod */\n      tag_56\n      swap1\n        /* \"contracts/BimodalLib.sol\":4467:4490  eon.mod(self.EONS_KEPT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"contracts/BimodalLib.sol\":4439:4491  self.parentChainAccumulator[eon.mod(self.EONS_KEPT)] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_162\n      jumpi\n      invalid\n    tag_162:\n      add\n      sload\n        /* \"contracts/BimodalLib.sol\":4499:4502  eon */\n      dup6\n        /* \"contracts/BimodalLib.sol\":4510:4515  token */\n      dup6\n        /* \"contracts/BimodalLib.sol\":4523:4534  participant */\n      dup6\n        /* \"contracts/BimodalLib.sol\":4542:4551  operation */\n      dup6\n        /* \"contracts/BimodalLib.sol\":4559:4564  value */\n      dup6\n        /* \"contracts/BimodalLib.sol\":4415:4565  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x14\n      add\n      dup4\n      0x2\n      dup2\n      gt\n      iszero\n      tag_164\n      jumpi\n      invalid\n    tag_164:\n      0xff\n      and\n      0x100000000000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x1\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/BimodalLib.sol\":4415:4565  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/BimodalLib.sol\":4405:4566  keccak256(abi.encodePacked(... */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_165:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_166\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_165)\n    tag_166:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/BimodalLib.sol\":4405:4566  keccak256(abi.encodePacked(... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/BimodalLib.sol\":4350:4354  self */\n      dup7\n        /* \"contracts/BimodalLib.sol\":4350:4377  self.parentChainAccumulator */\n      0x16\n      add\n        /* \"contracts/BimodalLib.sol\":4378:4401  eon.mod(self.EONS_KEPT) */\n      tag_168\n        /* \"contracts/BimodalLib.sol\":4386:4390  self */\n      dup9\n        /* \"contracts/BimodalLib.sol\":4386:4400  self.EONS_KEPT */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":4378:4401  eon.mod(self.EONS_KEPT) */\n      0xff\n      and\n        /* \"contracts/BimodalLib.sol\":4378:4381  eon */\n      dup9\n        /* \"contracts/BimodalLib.sol\":4378:4385  eon.mod */\n      tag_56\n      swap1\n        /* \"contracts/BimodalLib.sol\":4378:4401  eon.mod(self.EONS_KEPT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"contracts/BimodalLib.sol\":4350:4402  self.parentChainAccumulator[eon.mod(self.EONS_KEPT)] */\n      0x5\n      dup2\n      lt\n      iszero\n      iszero\n      tag_169\n      jumpi\n      invalid\n    tag_169:\n      add\n        /* \"contracts/BimodalLib.sol\":4350:4566  self.parentChainAccumulator[eon.mod(self.EONS_KEPT)] = keccak256(abi.encodePacked(... */\n      dup2\n      not(0x0)\n      and\n      swap1\n      sstore\n      pop\n        /* \"contracts/BimodalLib.sol\":4158:4571  function appendOperationToEonAccumulator(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":646:761  function mod(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_56:\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":704:711  uint256 */\n      0x0\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":731:732  0 */\n      dup1\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":727:728  b */\n      dup3\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":727:732  b > 0 */\n      gt\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":719:738  require(b > 0, '%') */\n      iszero\n      iszero\n      tag_172\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x2500000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":755:756  b */\n      dup2\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":751:752  a */\n      dup4\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":751:756  a % b */\n      dup2\n      iszero\n      iszero\n      tag_173\n      jumpi\n      invalid\n    tag_173:\n      mod\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":744:756  return a % b */\n      swap1\n      pop\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":646:761  function mod(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":222:338  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_65:\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":280:287  uint256 */\n      0x0\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":308:309  a */\n      dup3\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":303:304  b */\n      dup3\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":303:309  b <= a */\n      gt\n      iszero\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":295:315  require(b <= a, '-') */\n      iszero\n      iszero\n      tag_175\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x2d00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":332:333  b */\n      dup2\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":328:329  a */\n      dup4\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":328:333  a - b */\n      sub\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":321:333  return a - b */\n      swap1\n      pop\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":222:338  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":527:642  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_74:\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":585:592  uint256 */\n      0x0\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":612:613  0 */\n      dup1\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":608:609  b */\n      dup3\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":608:613  b > 0 */\n      gt\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":600:619  require(b > 0, '/') */\n      iszero\n      iszero\n      tag_177\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x2f00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":636:637  b */\n      dup2\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":632:633  a */\n      dup4\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":632:637  a / b */\n      dup2\n      iszero\n      iszero\n      tag_178\n      jumpi\n      invalid\n    tag_178:\n      div\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":625:637  return a / b */\n      swap1\n      pop\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":527:642  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":82:218  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_75:\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":140:147  uint256 */\n      0x0\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":155:164  uint256 c */\n      dup1\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":171:172  b */\n      dup3\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":167:168  a */\n      dup5\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":167:172  a + b */\n      add\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":155:172  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":191:192  a */\n      dup4\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":186:187  c */\n      dup2\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":186:192  c >= a */\n      lt\n      iszero\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":178:198  require(c >= a, '+') */\n      iszero\n      iszero\n      tag_180\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x2b00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":212:213  c */\n      dup1\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":205:213  return c */\n      swap2\n      pop\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":82:218  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058207c3463fb4ca4b0bda181aa97edbb9831c20cbbf74c81d84d005f577232faa7360029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x1726 PUSH2 0x30 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH2 0x20 JUMPI PUSH2 0x22 JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x207CBABA EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x26DF6E49 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x378A4719 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x7FCACFF9 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x87D5CAB9 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x8E9F9072 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x971BFF52 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xA7E478BA EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xB0ABCBBB EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xE37E06EA EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xE72B5713 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0xE7F24BAD EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xE8E95A3D EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xF9AC8FCA EQ PUSH2 0x55C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x844 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCDC JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDD1 JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x512 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12E2 JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12F9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP3 LT ISZERO PUSH2 0x6FB JUMPI DUP7 PUSH1 0x1F ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x67D DUP9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP8 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x689 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x6A7 JUMPI DUP1 PUSH1 0x1 ADD SLOAD SWAP4 POP PUSH2 0x78C JUMP JUMPDEST DUP3 DUP2 PUSH1 0x0 ADD SLOAD GT DUP1 ISZERO PUSH2 0x6BD JUMPI POP DUP5 DUP2 PUSH1 0x0 ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x6CA JUMPI DUP1 PUSH1 0x0 ADD SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x6D8 JUMPI PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x6EC PUSH1 0x1 DUP7 PUSH2 0x155E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x78C JUMP JUMPDEST DUP7 PUSH1 0x1F ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x775 DUP9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP6 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x781 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP4 POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D8 PUSH1 0x1 PUSH2 0x7CA DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x7BC DUP7 PUSH1 0x5 ADD SLOAD NUMBER PUSH2 0x155E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x7 ADD PUSH2 0x80D DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP6 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x819 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x83D JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x865 PUSH1 0x4 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x15E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x885 PUSH1 0x3 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x15E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 DUP4 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP4 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH5 0x12A05F200 DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP NUMBER DUP4 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x957 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x949 DUP5 PUSH1 0x5 ADD SLOAD NUMBER PUSH2 0x155E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x194C69717569646974792E4E6574776F726B20417574686F72697A6174696F6E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3A0A333200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x24 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0xA0D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP PUSH1 0x1C ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0xABE JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 ADD SLOAD DUP3 GT ISZERO PUSH2 0xB96 JUMPI DUP2 DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0xBAD DUP2 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP5 POP DUP9 PUSH1 0x1D ADD PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP4 POP DUP4 PUSH1 0x6 ADD SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST DUP3 DUP1 SLOAD SWAP1 POP DUP3 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0xCD0 JUMPI DUP3 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0xC77 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0xCB1 JUMPI PUSH2 0xCAA DUP2 PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP PUSH2 0xCC3 JUMP JUMPDEST DUP6 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xCC2 JUMPI PUSH2 0xCD0 JUMP JUMPDEST JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0xC51 JUMP JUMPDEST POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1F ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xD46 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP6 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0xD52 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xDAA JUMPI PUSH2 0xD94 DUP3 PUSH2 0xD86 DUP8 DUP8 PUSH2 0xD81 PUSH1 0x1 DUP10 PUSH2 0x155E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xDCA JUMP JUMPDEST PUSH2 0xDC1 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP3 POP JUMPDEST DUP8 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP4 LT ISZERO PUSH2 0xEDB JUMPI PUSH2 0xE09 DUP4 DUP8 PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP8 PUSH1 0x1F ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xE73 DUP10 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP5 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0xE7F JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP1 POP DUP5 DUP3 GT ISZERO PUSH2 0xE92 JUMPI PUSH2 0xEDB JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xECE JUMPI DUP2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xEC5 DUP9 DUP9 PUSH2 0xEC0 PUSH1 0x1 DUP7 PUSH2 0x155E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP POP PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST DUP8 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP4 LT ISZERO PUSH2 0x103E JUMPI PUSH2 0xF0F DUP4 DUP8 PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP8 PUSH1 0x1F ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF79 DUP10 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP5 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0xF85 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP1 POP DUP5 DUP3 GT ISZERO PUSH2 0xF98 JUMPI PUSH2 0x103E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x1012 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1029 DUP5 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x155E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP POP PUSH2 0xEE0 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1072 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP6 PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 LT DUP1 ISZERO PUSH2 0x1080 JUMPI POP DUP3 DUP5 GT ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x108B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B2 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP6 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x7 ADD DUP2 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x10C5 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD SWAP2 POP DUP4 DUP3 PUSH1 0x0 ADD SLOAD EQ ISZERO ISZERO PUSH2 0x10FD JUMPI DUP4 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 MUL DUP3 PUSH1 0x1 ADD DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP5 POP PUSH1 0x0 SWAP4 POP DUP8 PUSH1 0x1D ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP3 POP DUP8 PUSH1 0x1C ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP2 POP DUP3 PUSH1 0x0 ADD PUSH2 0x1283 DUP10 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x128F JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP1 POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x12BF JUMPI PUSH2 0x12BC DUP2 PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP JUMPDEST PUSH2 0x12CF DUP9 DUP9 DUP9 DUP6 PUSH1 0x2 ADD SLOAD PUSH2 0xBBB JUMP JUMPDEST SWAP4 POP DUP5 DUP5 SWAP5 POP SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP6 PUSH1 0x16 ADD PUSH2 0x1324 DUP8 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP8 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x1330 JUMPI INVALID JUMPDEST ADD SLOAD DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13E0 JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x1 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x145C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP7 PUSH1 0x16 ADD PUSH2 0x14B4 DUP9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP9 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x14C0 JUMPI INVALID JUMPDEST ADD DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT ISZERO ISZERO PUSH2 0x154A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x2500000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 ISZERO ISZERO PUSH2 0x1555 JUMPI INVALID JUMPDEST MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x2D00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT ISZERO ISZERO PUSH2 0x165C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x2F00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 ISZERO ISZERO PUSH2 0x1667 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x16F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x2B00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH29 0x3463FB4CA4B0BDA181AA97EDBB9831C20CBBF74C81D84D005F577232FA 0xa7 CALLDATASIZE STOP 0x29 ",
							"sourceMap": "221:10774:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100e7576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063207cbaba146100ec57806326df6e491461014a578063378a47191461017e5780637fcacff9146101bc57806387d5cab9146102135780638e9f907214610247578063971bff52146102d4578063a7e478ba14610315578063b0abcbbb14610393578063e37e06ea146103f4578063e72b57131461045f578063e7f24bad146104b4578063e8e95a3d1461052f578063f9ac8fca1461055c575b600080fd5b61013460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ea565b6040518082815260200191505060405180910390f35b61016860048036038101908080359060200190929190505050610796565b6040518082815260200191505060405180910390f35b6101a660048036038101908080359060200190929190803590602001909291905050506107df565b6040518082815260200191505060405180910390f35b8180156101c857600080fd5b506102116004803603810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610844565b005b61023160048036038101908080359060200190929190505050610928565b6040518082815260200191505060405180910390f35b610292600480360381019080803560001916906020019092919080356000191690602001909291908035600019169060200190929190803560ff16906020019092919050505061095e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b8180156102e057600080fd5b50610313600480360381019080803590602001909291908035906020019092919080359060200190929190505050610b73565b005b61037d60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bbb565b6040518082815260200191505060405180910390f35b81801561039f57600080fd5b506103f260048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610cdc565b005b81801561040057600080fd5b5061045d60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050610dd1565b005b81801561046b57600080fd5b5061049e600480360381019080803590602001909291908035906020019092919080359060200190929190505050611048565b6040518082815260200191505060405180910390f35b61051260048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611108565b604051808381526020018281526020019250505060405180910390f35b81801561053b57600080fd5b5061055a600480360381019080803590602001909291905050506112e2565b005b81801561056857600080fd5b506105e86004803603810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190803590602001909291905050506112f9565b005b60008060008060009250600091505b8660000160009054906101000a900460ff1660ff168210156106fb5786601f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061067d8860000160009054906101000a900460ff1660ff16876114d190919063ffffffff16565b60058110151561068957fe5b60020201905084816000015414156106a7578060010154935061078c565b8281600001541180156106bd5750848160000154105b156106ca57806000015492505b60008514156106d8576106fb565b6106ec60018661155e90919063ffffffff16565b945081806001019250506105f9565b600083141561070d576000935061078c565b86601f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206107758860000160009054906101000a900460ff1660ff16856114d190919063ffffffff16565b60058110151561078157fe5b600202016001015493505b5050509392505050565b60006107d860016107ca84600201546107bc86600501544361155e90919063ffffffff16565b6115e390919063ffffffff16565b61167090919063ffffffff16565b9050919050565b6000808360070161080d8560000160009054906101000a900460ff1660ff16856114d190919063ffffffff16565b60058110151561081957fe5b600302019050828160000154141515610835576000915061083d565b806002015491505b5092915050565b818360020181905550610865600484600201546115e390919063ffffffff16565b8360030181905550610885600384600201546115e390919063ffffffff16565b836004018190555060058360000160006101000a81548160ff021916908360ff16021790555060038360000160016101000a81548160ff021916908360ff16021790555064012a05f2008360010181905550808360060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550438360050181905550505050565b6000610957826002015461094984600501544361155e90919063ffffffff16565b6114d190919063ffffffff16565b9050919050565b600060018560405160200180807f194c69717569646974792e4e6574776f726b20417574686f72697a6174696f6e81526020017f3a0a33320000000000000000000000000000000000000000000000000000000081525060240182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083101515610a0d57805182526020820191506020810190506020830392506109e8565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083101515610abe5780518252602082019150602081019050602083039250610a99565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020838686604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af1158015610b5f573d6000803e3d6000fd5b505050602060405103519050949350505050565b8260000154821115610b9657818360000181905550808360010181905550610bb6565b610bad81846001015461167090919063ffffffff16565b83600101819055505b505050565b600080600080600080945088601d0160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209350836006019250600091505b82805490508263ffffffff161015610cd057828263ffffffff16815481101515610c7757fe5b906000526020600020906002020190508581600001541415610cb157610caa81600101548661167090919063ffffffff16565b9450610cc3565b8581600001541115610cc257610cd0565b5b8180600101925050610c51565b50505050949350505050565b600084601f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610d468660000160009054906101000a900460ff1660ff16856114d190919063ffffffff16565b600581101515610d5257fe5b6002020190508281600001541015610daa57610d9482610d868787610d8160018961155e90919063ffffffff16565b6105ea565b61167090919063ffffffff16565b8160010181905550828160000181905550610dca565b610dc182826001015461167090919063ffffffff16565b81600101819055505b5050505050565b60008060008092505b8760000160009054906101000a900460ff1660ff16831015610edb57610e09838761167090919063ffffffff16565b915087601f0160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610e738960000160009054906101000a900460ff1660ff16846114d190919063ffffffff16565b600581101515610e7f57fe5b60020201905084821115610e9257610edb565b8181600001541015610ece57818160000181905550610ec58888610ec060018661155e90919063ffffffff16565b6105ea565b81600101819055505b8280600101935050610dda565b600092505b8760000160009054906101000a900460ff1660ff1683101561103e57610f0f838761167090919063ffffffff16565b915087601f0160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610f798960000160009054906101000a900460ff1660ff16846114d190919063ffffffff16565b600581101515610f8557fe5b60020201905084821115610f985761103e565b8181600001541015611012576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f580000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61102984826001015461155e90919063ffffffff16565b81600101819055508280600101935050610ee0565b5050505050505050565b6000806110728560000160009054906101000a900460ff1660ff168561167090919063ffffffff16565b831080156110805750828411155b151561108b57600080fd5b6110b28560000160009054906101000a900460ff1660ff16856114d190919063ffffffff16565b905084600701816005811015156110c557fe5b6003020191508382600001541415156110fd578382600001819055506000600102826001018160001916905550600082600201819055505b819150509392505050565b60008060008060008094506000935087601d0160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020925087601c0160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209150826000016112838960000160019054906101000a900460ff1660ff1684600201546114d190919063ffffffff16565b60038110151561128f57fe5b6002020190508160020154816000015414156112bf576112bc81600101548661167090919063ffffffff16565b94505b6112cf8888888560020154610bbb565b9350848494509450505050935093915050565b600081600001819055506000816001018190555050565b856016016113248760000160009054906101000a900460ff1660ff16876114d190919063ffffffff16565b60058110151561133057fe5b015485858585856040516020018087600019166000191681526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018360028111156113e057fe5b60ff167f010000000000000000000000000000000000000000000000000000000000000002815260010182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b60208310151561145c5780518252602082019150602081019050602083039250611437565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020866016016114b48860000160009054906101000a900460ff1660ff16886114d190919063ffffffff16565b6005811015156114c057fe5b018160001916905550505050505050565b6000808211151561154a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f250000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b818381151561155557fe5b06905092915050565b60008282111515156115d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f2d0000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b818303905092915050565b6000808211151561165c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f2f0000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b818381151561166757fe5b04905092915050565b60008082840190508381101515156116f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f2b0000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80915050929150505600a165627a7a723058207c3463fb4ca4b0bda181aa97edbb9831c20cbbf74c81d84d005f577232faa7360029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x207CBABA EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x26DF6E49 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x378A4719 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x7FCACFF9 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x87D5CAB9 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x8E9F9072 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x971BFF52 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xA7E478BA EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xB0ABCBBB EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xE37E06EA EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xE72B5713 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0xE7F24BAD EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xE8E95A3D EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xF9AC8FCA EQ PUSH2 0x55C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x844 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCDC JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDD1 JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x512 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12E2 JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12F9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP3 LT ISZERO PUSH2 0x6FB JUMPI DUP7 PUSH1 0x1F ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x67D DUP9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP8 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x689 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x6A7 JUMPI DUP1 PUSH1 0x1 ADD SLOAD SWAP4 POP PUSH2 0x78C JUMP JUMPDEST DUP3 DUP2 PUSH1 0x0 ADD SLOAD GT DUP1 ISZERO PUSH2 0x6BD JUMPI POP DUP5 DUP2 PUSH1 0x0 ADD SLOAD LT JUMPDEST ISZERO PUSH2 0x6CA JUMPI DUP1 PUSH1 0x0 ADD SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x6D8 JUMPI PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x6EC PUSH1 0x1 DUP7 PUSH2 0x155E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x78C JUMP JUMPDEST DUP7 PUSH1 0x1F ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x775 DUP9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP6 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x781 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP4 POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D8 PUSH1 0x1 PUSH2 0x7CA DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x7BC DUP7 PUSH1 0x5 ADD SLOAD NUMBER PUSH2 0x155E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x7 ADD PUSH2 0x80D DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP6 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x819 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x83D JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x865 PUSH1 0x4 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x15E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x885 PUSH1 0x3 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x15E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 DUP4 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP4 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH5 0x12A05F200 DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP NUMBER DUP4 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x957 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x949 DUP5 PUSH1 0x5 ADD SLOAD NUMBER PUSH2 0x155E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x194C69717569646974792E4E6574776F726B20417574686F72697A6174696F6E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3A0A333200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x24 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0xA0D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP PUSH1 0x1C ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0xABE JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 PUSH1 0x0 DUP7 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 ADD SLOAD DUP3 GT ISZERO PUSH2 0xB96 JUMPI DUP2 DUP4 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0xBAD DUP2 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP5 POP DUP9 PUSH1 0x1D ADD PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP4 POP DUP4 PUSH1 0x6 ADD SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST DUP3 DUP1 SLOAD SWAP1 POP DUP3 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0xCD0 JUMPI DUP3 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0xC77 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0xCB1 JUMPI PUSH2 0xCAA DUP2 PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP PUSH2 0xCC3 JUMP JUMPDEST DUP6 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xCC2 JUMPI PUSH2 0xCD0 JUMP JUMPDEST JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0xC51 JUMP JUMPDEST POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1F ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xD46 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP6 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0xD52 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xDAA JUMPI PUSH2 0xD94 DUP3 PUSH2 0xD86 DUP8 DUP8 PUSH2 0xD81 PUSH1 0x1 DUP10 PUSH2 0x155E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xDCA JUMP JUMPDEST PUSH2 0xDC1 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP3 POP JUMPDEST DUP8 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP4 LT ISZERO PUSH2 0xEDB JUMPI PUSH2 0xE09 DUP4 DUP8 PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP8 PUSH1 0x1F ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xE73 DUP10 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP5 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0xE7F JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP1 POP DUP5 DUP3 GT ISZERO PUSH2 0xE92 JUMPI PUSH2 0xEDB JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xECE JUMPI DUP2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xEC5 DUP9 DUP9 PUSH2 0xEC0 PUSH1 0x1 DUP7 PUSH2 0x155E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP POP PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST DUP8 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP4 LT ISZERO PUSH2 0x103E JUMPI PUSH2 0xF0F DUP4 DUP8 PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP8 PUSH1 0x1F ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF79 DUP10 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP5 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0xF85 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP1 POP DUP5 DUP3 GT ISZERO PUSH2 0xF98 JUMPI PUSH2 0x103E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x1012 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1029 DUP5 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x155E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP POP PUSH2 0xEE0 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1072 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP6 PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 LT DUP1 ISZERO PUSH2 0x1080 JUMPI POP DUP3 DUP5 GT ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x108B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B2 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP6 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x7 ADD DUP2 PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x10C5 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD SWAP2 POP DUP4 DUP3 PUSH1 0x0 ADD SLOAD EQ ISZERO ISZERO PUSH2 0x10FD JUMPI DUP4 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 MUL DUP3 PUSH1 0x1 ADD DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP5 POP PUSH1 0x0 SWAP4 POP DUP8 PUSH1 0x1D ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP3 POP DUP8 PUSH1 0x1C ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP2 POP DUP3 PUSH1 0x0 ADD PUSH2 0x1283 DUP10 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x128F JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP1 POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x12BF JUMPI PUSH2 0x12BC DUP2 PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x1670 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP JUMPDEST PUSH2 0x12CF DUP9 DUP9 DUP9 DUP6 PUSH1 0x2 ADD SLOAD PUSH2 0xBBB JUMP JUMPDEST SWAP4 POP DUP5 DUP5 SWAP5 POP SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP6 PUSH1 0x16 ADD PUSH2 0x1324 DUP8 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP8 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x1330 JUMPI INVALID JUMPDEST ADD SLOAD DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13E0 JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x1 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x145C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP7 PUSH1 0x16 ADD PUSH2 0x14B4 DUP9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP9 PUSH2 0x14D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO ISZERO PUSH2 0x14C0 JUMPI INVALID JUMPDEST ADD DUP2 PUSH1 0x0 NOT AND SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT ISZERO ISZERO PUSH2 0x154A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x2500000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 ISZERO ISZERO PUSH2 0x1555 JUMPI INVALID JUMPDEST MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x2D00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT ISZERO ISZERO PUSH2 0x165C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x2F00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 ISZERO ISZERO PUSH2 0x1667 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x16F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x2B00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH29 0x3463FB4CA4B0BDA181AA97EDBB9831C20CBBF74C81D84D005F577232FA 0xa7 CALLDATASIZE STOP 0x29 ",
							"sourceMap": "221:10774:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4657:954;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3503:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7598:297;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2834:531;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2834:531:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3743:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10623:370;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10197:284;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10197:284:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8609:601;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5697:607;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5697:607:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6392:1125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6392:1125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7978:539;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7978:539:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9306:874;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10485:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10485:134:0;;;;;;;;;;;;;;;;;;;;;;;;;;4158:413;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4158:413:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4657:954;4789:7;4806:24;4845:9;4893:40;4833:1;4806:28;;4857:1;4845:13;;4840:624;4864:4;:14;;;;;;;;;;;;4860:18;;:1;:18;4840:624;;;4936:4;:23;;:30;4960:5;4936:30;;;;;;;;;;;;;;;4967:23;4975:4;:14;;;;;;;;;;;;4967:23;;:3;:7;;:23;;;;:::i;:::-;4936:55;;;;;;;;;;;;4893:98;;5027:3;5003:16;:20;;;:27;4999:390;;;5049:16;:23;;;5042:30;;;;4999:390;5114:16;5091;:20;;;:39;:69;;;;;5157:3;5134:16;:20;;;:26;5091:69;5087:302;;;5360:16;:20;;;5341:39;;5087:302;5407:1;5400:3;:8;5396:38;;;5420:5;;5396:38;5447:10;5455:1;5447:3;:7;;:10;;;;:::i;:::-;5441:16;;4880:3;;;;;;;4840:624;;;5493:1;5473:16;:21;5469:50;;;5511:1;5504:8;;;;5469:50;5531:4;:23;;:30;5555:5;5531:30;;;;;;;;;;;;;;;5562:36;5583:4;:14;;;;;;;;;;;;5562:36;;:16;:20;;:36;;;;:::i;:::-;5531:68;;;;;;;;;;;;:75;;;5524:82;;4657:954;;;;;;;;;:::o;3503:173::-;3585:7;3609:62;3669:1;3609:55;3644:4;:19;;;3609:30;3626:4;:12;;;3609;:16;;:30;;;;:::i;:::-;:34;;:55;;;;:::i;:::-;:59;;:62;;;;:::i;:::-;3602:69;;3503:173;;;:::o;7598:297::-;7704:4;7718:29;7750:4;:16;;7767:23;7775:4;:14;;;;;;;;;;;;7767:23;;:3;:7;;:23;;;;:::i;:::-;7750:41;;;;;;;;;;;;7718:73;;7825:3;7801:10;:20;;;:27;;7797:56;;;7845:1;7838:8;;;;7797:56;7865:10;:25;;;7858:32;;7598:297;;;;;;:::o;2834:531::-;2966:12;2944:4;:19;;:34;;;;3008:26;3032:1;3008:4;:19;;;:23;;:26;;;;:::i;:::-;2984:4;:21;;:50;;;;3073:26;3097:1;3073:4;:19;;;:23;;:26;;;;:::i;:::-;3040:4;:30;;:59;;;;3122:1;3105:4;:14;;;:18;;;;;;;;;;;;;;;;;;3172:1;3151:4;:18;;;:22;;;;;;;;;;;;;;;;;;3245:11;3215:4;:27;;:41;;;;3319:8;3303:4;:13;;;:24;;;;;;;;;;;;;;;;;;3348:12;3333:4;:12;;:27;;;;2834:531;;;:::o;3743:166::-;3825:7;3849:55;3884:4;:19;;;3849:30;3866:4;:12;;;3849;:16;;:30;;;;:::i;:::-;:34;;:55;;;;:::i;:::-;3842:62;;3743:166;;;:::o;10623:370::-;10748:7;10772:216;10961:7;10879:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10879:90:0;;;10869:101;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;10869:101:0;;;;;;;;;;;;;;;;10799:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10799:172:0;;;10789:183;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;10789:183:0;;;;;;;;;;;;;;;;10980:1;10983;10986;10772:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10772:216:0;;;;;;;;10765:223;;10623:370;;;;;;:::o;10197:284::-;10329:9;:13;;;10323:3;:19;10319:158;;;10368:3;10352:9;:13;;:19;;;;10398:5;10379:9;:16;;:24;;;;10319:158;;;10443:27;10464:5;10443:9;:16;;;:20;;:27;;;;:::i;:::-;10424:9;:16;;:46;;;;10319:158;10197:284;;;:::o;8609:601::-;8772:14;8813:30;8882:32;8955:8;9006:29;8805:1;8796:10;;8846:4;:15;;:22;8862:5;8846:22;;;;;;;;;;;;;;;:30;8869:6;8846:30;;;;;;;;;;;;;;;8813:63;;8917:15;:27;;8882:62;;8966:1;8955:12;;8950:256;8973:11;:18;;;;8969:1;:22;;;8950:256;;;9038:11;9050:1;9038:14;;;;;;;;;;;;;;;;;;;;;;9006:46;;9082:3;9064:10;:14;;;:21;9060:140;;;9106:29;9117:10;:17;;;9106:6;:10;;:29;;;;:::i;:::-;9097:38;;9060:140;;;9171:3;9154:10;:14;;;:20;9150:50;;;9186:5;;9150:50;9060:140;8993:3;;;;;;;8950:256;;;8609:601;;;;;;;;;;:::o;5697:607::-;5838:33;5874:4;:23;;:30;5898:5;5874:30;;;;;;;;;;;;;;;5905:23;5913:4;:14;;;;;;;;;;;;5905:23;;:3;:7;;:23;;;;:::i;:::-;5874:55;;;;;;;;;;;;5838:91;;6086:3;6070:9;:13;;;:19;6066:234;;;6137:62;6193:5;6137:51;6164:4;6170:5;6177:10;6185:1;6177:3;:7;;:10;;;;:::i;:::-;6137:26;:51::i;:::-;:55;;:62;;;;:::i;:::-;6118:9;:16;;:81;;;;6223:3;6207:9;:13;;:19;;;;6066:234;;;6266:27;6287:5;6266:9;:16;;;:20;;:27;;;;:::i;:::-;6247:9;:16;;:46;;;;6066:234;5697:607;;;;;:::o;6392:1125::-;6621:9;6669:17;6707:33;6633:1;6621:13;;6616:483;6640:4;:14;;;;;;;;;;;;6636:18;;:1;:18;6616:483;;;6689:10;6697:1;6689:3;:7;;:10;;;;:::i;:::-;6669:30;;6743:4;:23;;:30;6767:5;6743:30;;;;;;;;;;;;;;;6774:29;6788:4;:14;;;;;;;;;;;;6774:29;;:9;:13;;:29;;;;:::i;:::-;6743:61;;;;;;;;;;;;6707:97;;6828:9;6816;:21;6812:281;;;6849:5;;6812:281;6889:9;6873;:13;;;:25;6869:224;;;6989:9;6973;:13;;:25;;;;7027:57;7054:4;7060:5;7067:16;7081:1;7067:9;:13;;:16;;;;:::i;:::-;7027:26;:57::i;:::-;7008:9;:16;;:76;;;;6869:224;6656:3;;;;;;;6616:483;;;7145:1;7141:5;;7136:377;7152:4;:14;;;;;;;;;;;;7148:18;;:1;:18;7136:377;;;7194:10;7202:1;7194:3;:7;;:10;;;;:::i;:::-;7182:22;;7226:4;:23;;:30;7250:5;7226:30;;;;;;;;;;;;;;;7257:29;7271:4;:14;;;;;;;;;;;;7257:29;;:9;:13;;:29;;;;:::i;:::-;7226:61;;;;;;;;;;;;7214:73;;7311:9;7299;:21;7295:212;;;7332:5;;7295:212;7372:9;7356;:13;;;:25;7352:155;;;7393:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7352:155;7471:27;7492:5;7471:9;:16;;;:20;;:27;;;;:::i;:::-;7452:9;:16;;:46;;;;7168:3;;;;;;;7136:377;;;6392:1125;;;;;;;;:::o;7978:539::-;8108:29;8230:13;8167:29;8181:4;:14;;;;;;;;;;;;8167:29;;:9;:13;;:29;;;;:::i;:::-;8155:9;:41;:67;;;;;8213:9;8200;:22;;8155:67;8147:76;;;;;;;;8246:29;8260:4;:14;;;;;;;;;;;;8246:29;;:9;:13;;:29;;;;:::i;:::-;8230:45;;8294:4;:16;;8311:5;8294:23;;;;;;;;;;;;8281:36;;8352:9;8328:10;:20;;;:33;;8324:165;;;8394:9;8371:10;:20;;:32;;;;8443:1;8435:10;;8411;:21;;:34;;;;;;;8481:1;8453:10;:25;;:29;;;;8324:165;8502:10;8495:17;;7978:539;;;;;;:::o;9306:874::-;9447:26;9475:29;9575:30;9644:32;9727:36;9536:1;9515:22;;9567:1;9543:25;;9608:4;:15;;:22;9624:5;9608:22;;;;;;;;;;;;;;;:30;9631:6;9608:30;;;;;;;;;;;;;;;9575:63;;9679:4;:18;;:25;9698:5;9679:25;;;;;;;;;;;;;;;:33;9705:6;9679:33;;;;;;;;;;;;;;;:41;9713:6;9679:41;;;;;;;;;;;;;;;9644:76;;9772:15;:28;;9801:54;9836:4;:18;;;;;;;;;;;;9801:54;;:14;:30;;;:34;;:54;;;;:::i;:::-;9772:84;;;;;;;;;;;;9727:129;;9887:14;:30;;;9867:12;:16;;;:50;9863:135;;;9948:43;9971:12;:19;;;9948:18;:22;;:43;;;;:::i;:::-;9927:64;;9863:135;10028:90;10066:4;10072:5;10079:6;10087:14;:30;;;10028:37;:90::i;:::-;10004:114;;10133:18;10153:21;10125:50;;;;9306:874;;;;;;;;;:::o;10485:134::-;10587:1;10571:9;:13;;:17;;;;10613:1;10594:9;:16;;:20;;;;10485:134;:::o;4158:413::-;4439:4;:27;;4467:23;4475:4;:14;;;;;;;;;;;;4467:23;;:3;:7;;:23;;;;:::i;:::-;4439:52;;;;;;;;;;;4499:3;4510:5;4523:11;4542:9;4559:5;4415:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4415:150:0;;;4405:161;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4405:161:0;;;;;;;;;;;;;;;;4350:4;:27;;4378:23;4386:4;:14;;;;;;;;;;;;4378:23;;:3;:7;;:23;;;;:::i;:::-;4350:52;;;;;;;;;;:216;;;;;;;4158:413;;;;;;:::o;646:115:2:-;704:7;731:1;727;:5;719:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;755:1;751;:5;;;;;;;;744:12;;646:115;;;;:::o;222:116::-;280:7;308:1;303;:6;;295:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;332:1;328;:5;321:12;;222:116;;;;:::o;527:115::-;585:7;612:1;608;:5;600:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:1;632;:5;;;;;;;;625:12;;527:115;;;;:::o;82:136::-;140:7;155:9;171:1;167;:5;155:17;;191:1;186;:6;;178:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;212:1;205:8;;82:136;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1185200",
								"executionCost": "1281",
								"totalCost": "1186481"
							},
							"external": {
								"addToAggregate(BimodalLib.AmountAggregate storage,uint256,uint256)": "infinite",
								"addToRunningPendingWithdrawals(BimodalLib.Ledger storage,ERC20,uint256,uint256)": "infinite",
								"appendOperationToEonAccumulator(BimodalLib.Ledger storage,uint256,ERC20,address,BimodalLib.Operation,uint256)": "infinite",
								"clearAggregate(BimodalLib.AmountAggregate storage)": "10504",
								"currentEon(BimodalLib.Ledger storage)": "infinite",
								"currentEra(BimodalLib.Ledger storage)": "infinite",
								"deductFromRunningPendingWithdrawals(BimodalLib.Ledger storage,ERC20,uint256,uint256,uint256)": "infinite",
								"getCurrentEonDepositsWithdrawals(BimodalLib.Ledger storage,ERC20,address)": "infinite",
								"getLiveChallenges(BimodalLib.Ledger storage,uint256)": "infinite",
								"getOrCreateCheckpoint(BimodalLib.Ledger storage,uint256,uint256)": "infinite",
								"getPendingWithdrawalsAtEon(BimodalLib.Ledger storage,ERC20,uint256)": "infinite",
								"getWalletPendingWithdrawalAmountAtEon(BimodalLib.Ledger storage,ERC20,address,uint256)": "infinite",
								"init(BimodalLib.Ledger storage,uint256,address)": "infinite",
								"signedMessageECRECOVER(bytes32,bytes32,bytes32,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 221,
									"end": 10995,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 10995,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058207c3463fb4ca4b0bda181aa97edbb9831c20cbbf74c81d84d005f577232faa7360029",
									".code": [
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "ADDRESS"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "MSTORE"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "LT"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "SWAP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DIV"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "AND"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "207CBABA"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "26DF6E49"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "378A4719"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "7FCACFF9"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "87D5CAB9"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "8E9F9072"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "971BFF52"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "A7E478BA"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "B0ABCBBB"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "E37E06EA"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "E72B5713"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "E7F24BAD"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "E8E95A3D"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "F9AC8FCA"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "EQ"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPI"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "JUMPDEST"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "DUP1"
										},
										{
											"begin": 221,
											"end": 10995,
											"name": "REVERT"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "JUMPDEST"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SUB"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "DUP2"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP3"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP2"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "AND"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP3"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP2"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP3"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP2"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "JUMP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "JUMPDEST"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "MLOAD"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "DUP3"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "DUP2"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "MSTORE"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP2"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "MLOAD"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP2"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SUB"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "RETURN"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "JUMPDEST"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "DUP1"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "SUB"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "DUP2"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "ADD"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "SWAP1"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "DUP1"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "DUP1"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "SWAP1"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "ADD"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "SWAP1"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "SWAP3"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "SWAP2"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "SWAP1"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "POP"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "POP"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "POP"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "JUMP"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "JUMPDEST"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "MLOAD"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "DUP1"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "DUP3"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "DUP2"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "MSTORE"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "ADD"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "SWAP2"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "POP"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "POP"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "MLOAD"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "DUP1"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "SWAP2"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "SUB"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "SWAP1"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "RETURN"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "JUMPDEST"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "DUP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SUB"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "DUP2"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "ADD"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "DUP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "DUP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "ADD"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP3"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP2"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "DUP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "ADD"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP3"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP2"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "POP"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "POP"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "POP"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "JUMP"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "JUMPDEST"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "MLOAD"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "DUP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "DUP3"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "DUP2"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "MSTORE"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "ADD"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP2"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "POP"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "POP"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "MLOAD"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "DUP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP2"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SUB"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP1"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "RETURN"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "JUMPDEST"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "DUP2"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "DUP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SUB"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "DUP2"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "ADD"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "DUP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "DUP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "ADD"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP3"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP2"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "DUP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "ADD"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP3"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP2"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "DUP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "AND"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "ADD"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP3"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP2"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "SWAP1"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "JUMP"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "JUMPDEST"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "STOP"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "JUMPDEST"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "DUP1"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "SUB"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "DUP2"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "ADD"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "SWAP1"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "DUP1"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "DUP1"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "SWAP1"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "ADD"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "SWAP1"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "SWAP3"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "SWAP2"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "SWAP1"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "POP"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "POP"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "POP"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "JUMP"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "JUMPDEST"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "MLOAD"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "DUP1"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "DUP3"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "DUP2"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "MSTORE"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "ADD"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "SWAP2"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "POP"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "POP"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "MLOAD"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "DUP1"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "SWAP2"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "SUB"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "SWAP1"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "RETURN"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "JUMPDEST"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "DUP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SUB"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "DUP2"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "ADD"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "DUP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "DUP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "NOT"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "AND"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "ADD"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP3"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP2"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "DUP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "NOT"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "AND"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "ADD"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP3"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP2"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "DUP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "NOT"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "AND"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "ADD"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP3"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP2"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "DUP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "AND"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "ADD"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP3"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP2"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "JUMP"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "JUMPDEST"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "MLOAD"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "DUP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "DUP3"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "AND"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "AND"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "DUP2"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "MSTORE"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "ADD"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP2"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "MLOAD"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "DUP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP2"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SUB"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "RETURN"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "JUMPDEST"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "DUP2"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "POP"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "DUP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SUB"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "DUP2"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "ADD"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "DUP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "DUP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "ADD"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP3"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP2"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "DUP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "ADD"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP3"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP2"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "DUP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "ADD"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP3"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP2"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "SWAP1"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "POP"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "POP"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "POP"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "JUMP"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "JUMPDEST"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "STOP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "JUMPDEST"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "DUP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SUB"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "DUP2"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "ADD"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "DUP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "DUP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "ADD"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP3"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP2"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "DUP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "AND"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "ADD"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP3"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP2"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "DUP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "AND"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "ADD"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP3"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP2"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "DUP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "ADD"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP3"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP2"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "JUMP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "JUMPDEST"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "MLOAD"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "DUP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "DUP3"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "DUP2"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "MSTORE"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "ADD"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP2"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "MLOAD"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "DUP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP2"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SUB"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP1"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "RETURN"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "JUMPDEST"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "DUP2"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "POP"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "DUP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SUB"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "DUP2"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "ADD"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "DUP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "DUP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "ADD"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP3"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP2"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "DUP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "AND"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "ADD"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP3"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP2"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "DUP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "ADD"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP3"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP2"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "DUP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "ADD"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP3"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP2"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "SWAP1"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "POP"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "POP"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "POP"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "JUMP"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "JUMPDEST"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "STOP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "JUMPDEST"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "DUP2"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "POP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "DUP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SUB"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "DUP2"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "ADD"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "DUP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "DUP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "ADD"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP3"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP2"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "DUP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "AND"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "ADD"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP3"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP2"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "DUP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "ADD"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP3"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP2"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "DUP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "ADD"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP3"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP2"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "DUP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "ADD"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP3"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP2"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "SWAP1"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "POP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "POP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "POP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "JUMP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "JUMPDEST"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "STOP"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "JUMPDEST"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "DUP2"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SUB"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "DUP2"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP3"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP2"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP3"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP2"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP3"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP2"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "JUMP"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "JUMPDEST"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "MLOAD"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "DUP3"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "DUP2"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "MSTORE"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "ADD"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP2"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "MLOAD"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "DUP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP2"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SUB"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP1"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "RETURN"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "JUMPDEST"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "DUP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SUB"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "DUP2"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "ADD"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "DUP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "DUP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "ADD"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP3"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP2"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "DUP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "AND"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "ADD"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP3"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP2"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "DUP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "AND"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "ADD"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP3"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP2"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "JUMP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "JUMPDEST"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "MLOAD"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "DUP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "DUP4"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "DUP2"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "MSTORE"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "ADD"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "DUP3"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "DUP2"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "MSTORE"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "ADD"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP3"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "MLOAD"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "DUP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP2"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SUB"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP1"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "RETURN"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "JUMPDEST"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "DUP2"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "POP"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "DUP1"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "SUB"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "DUP2"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "ADD"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "SWAP1"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "DUP1"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "DUP1"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "SWAP1"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "ADD"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "SWAP1"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "SWAP3"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "SWAP2"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "SWAP1"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "POP"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "POP"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "POP"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "JUMP"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "JUMPDEST"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "STOP"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "JUMPDEST"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "DUP2"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "DUP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SUB"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "DUP2"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "ADD"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "DUP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "DUP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "ADD"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP3"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP2"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "DUP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "ADD"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP3"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP2"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "DUP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "AND"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "ADD"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP3"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP2"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "DUP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "AND"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "ADD"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP3"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP2"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "DUP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "AND"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "ADD"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP3"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP2"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "DUP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "ADD"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP3"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP2"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "SWAP1"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "JUMP"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "JUMPDEST"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "STOP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "JUMPDEST"
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4830,
											"name": "DUP1"
										},
										{
											"begin": 4845,
											"end": 4854,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 4933,
											"name": "DUP1"
										},
										{
											"begin": 4833,
											"end": 4834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4834,
											"name": "SWAP3"
										},
										{
											"begin": 4806,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4857,
											"end": 4858,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4858,
											"name": "SWAP2"
										},
										{
											"begin": 4845,
											"end": 4858,
											"name": "POP"
										},
										{
											"begin": 4840,
											"end": 5464,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 4840,
											"end": 5464,
											"name": "JUMPDEST"
										},
										{
											"begin": 4864,
											"end": 4868,
											"name": "DUP7"
										},
										{
											"begin": 4864,
											"end": 4878,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4878,
											"name": "ADD"
										},
										{
											"begin": 4864,
											"end": 4878,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4878,
											"name": "SWAP1"
										},
										{
											"begin": 4864,
											"end": 4878,
											"name": "SLOAD"
										},
										{
											"begin": 4864,
											"end": 4878,
											"name": "SWAP1"
										},
										{
											"begin": 4864,
											"end": 4878,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4864,
											"end": 4878,
											"name": "EXP"
										},
										{
											"begin": 4864,
											"end": 4878,
											"name": "SWAP1"
										},
										{
											"begin": 4864,
											"end": 4878,
											"name": "DIV"
										},
										{
											"begin": 4864,
											"end": 4878,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4864,
											"end": 4878,
											"name": "AND"
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "AND"
										},
										{
											"begin": 4860,
											"end": 4861,
											"name": "DUP3"
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "LT"
										},
										{
											"begin": 4840,
											"end": 5464,
											"name": "ISZERO"
										},
										{
											"begin": 4840,
											"end": 5464,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 4840,
											"end": 5464,
											"name": "JUMPI"
										},
										{
											"begin": 4936,
											"end": 4940,
											"name": "DUP7"
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "ADD"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4965,
											"name": "DUP8"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "AND"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "AND"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "DUP2"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "MSTORE"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "ADD"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "SWAP1"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "DUP2"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "MSTORE"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "ADD"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "KECCAK256"
										},
										{
											"begin": 4967,
											"end": 4990,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 4975,
											"end": 4979,
											"name": "DUP9"
										},
										{
											"begin": 4975,
											"end": 4989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4989,
											"name": "ADD"
										},
										{
											"begin": 4975,
											"end": 4989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4989,
											"name": "SWAP1"
										},
										{
											"begin": 4975,
											"end": 4989,
											"name": "SLOAD"
										},
										{
											"begin": 4975,
											"end": 4989,
											"name": "SWAP1"
										},
										{
											"begin": 4975,
											"end": 4989,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4975,
											"end": 4989,
											"name": "EXP"
										},
										{
											"begin": 4975,
											"end": 4989,
											"name": "SWAP1"
										},
										{
											"begin": 4975,
											"end": 4989,
											"name": "DIV"
										},
										{
											"begin": 4975,
											"end": 4989,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4975,
											"end": 4989,
											"name": "AND"
										},
										{
											"begin": 4967,
											"end": 4990,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4967,
											"end": 4990,
											"name": "AND"
										},
										{
											"begin": 4967,
											"end": 4970,
											"name": "DUP8"
										},
										{
											"begin": 4967,
											"end": 4974,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 4967,
											"end": 4974,
											"name": "SWAP1"
										},
										{
											"begin": 4967,
											"end": 4990,
											"name": "SWAP2"
										},
										{
											"begin": 4967,
											"end": 4990,
											"name": "SWAP1"
										},
										{
											"begin": 4967,
											"end": 4990,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4990,
											"name": "AND"
										},
										{
											"begin": 4967,
											"end": 4990,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4967,
											"end": 4990,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 4967,
											"end": 4990,
											"name": "JUMPDEST"
										},
										{
											"begin": 4936,
											"end": 4991,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4936,
											"end": 4991,
											"name": "DUP2"
										},
										{
											"begin": 4936,
											"end": 4991,
											"name": "LT"
										},
										{
											"begin": 4936,
											"end": 4991,
											"name": "ISZERO"
										},
										{
											"begin": 4936,
											"end": 4991,
											"name": "ISZERO"
										},
										{
											"begin": 4936,
											"end": 4991,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 4936,
											"end": 4991,
											"name": "JUMPI"
										},
										{
											"begin": 4936,
											"end": 4991,
											"name": "INVALID"
										},
										{
											"begin": 4936,
											"end": 4991,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 4936,
											"end": 4991,
											"name": "JUMPDEST"
										},
										{
											"begin": 4936,
											"end": 4991,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4936,
											"end": 4991,
											"name": "MUL"
										},
										{
											"begin": 4936,
											"end": 4991,
											"name": "ADD"
										},
										{
											"begin": 4893,
											"end": 4991,
											"name": "SWAP1"
										},
										{
											"begin": 4893,
											"end": 4991,
											"name": "POP"
										},
										{
											"begin": 5027,
											"end": 5030,
											"name": "DUP5"
										},
										{
											"begin": 5003,
											"end": 5019,
											"name": "DUP2"
										},
										{
											"begin": 5003,
											"end": 5023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5023,
											"name": "ADD"
										},
										{
											"begin": 5003,
											"end": 5023,
											"name": "SLOAD"
										},
										{
											"begin": 5003,
											"end": 5030,
											"name": "EQ"
										},
										{
											"begin": 4999,
											"end": 5389,
											"name": "ISZERO"
										},
										{
											"begin": 4999,
											"end": 5389,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 4999,
											"end": 5389,
											"name": "JUMPI"
										},
										{
											"begin": 5049,
											"end": 5065,
											"name": "DUP1"
										},
										{
											"begin": 5049,
											"end": 5072,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5049,
											"end": 5072,
											"name": "ADD"
										},
										{
											"begin": 5049,
											"end": 5072,
											"name": "SLOAD"
										},
										{
											"begin": 5042,
											"end": 5072,
											"name": "SWAP4"
										},
										{
											"begin": 5042,
											"end": 5072,
											"name": "POP"
										},
										{
											"begin": 5042,
											"end": 5072,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5042,
											"end": 5072,
											"name": "JUMP"
										},
										{
											"begin": 4999,
											"end": 5389,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 4999,
											"end": 5389,
											"name": "JUMPDEST"
										},
										{
											"begin": 5114,
											"end": 5130,
											"name": "DUP3"
										},
										{
											"begin": 5091,
											"end": 5107,
											"name": "DUP2"
										},
										{
											"begin": 5091,
											"end": 5111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5091,
											"end": 5111,
											"name": "ADD"
										},
										{
											"begin": 5091,
											"end": 5111,
											"name": "SLOAD"
										},
										{
											"begin": 5091,
											"end": 5130,
											"name": "GT"
										},
										{
											"begin": 5091,
											"end": 5160,
											"name": "DUP1"
										},
										{
											"begin": 5091,
											"end": 5160,
											"name": "ISZERO"
										},
										{
											"begin": 5091,
											"end": 5160,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5091,
											"end": 5160,
											"name": "JUMPI"
										},
										{
											"begin": 5091,
											"end": 5160,
											"name": "POP"
										},
										{
											"begin": 5157,
											"end": 5160,
											"name": "DUP5"
										},
										{
											"begin": 5134,
											"end": 5150,
											"name": "DUP2"
										},
										{
											"begin": 5134,
											"end": 5154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5134,
											"end": 5154,
											"name": "ADD"
										},
										{
											"begin": 5134,
											"end": 5154,
											"name": "SLOAD"
										},
										{
											"begin": 5134,
											"end": 5160,
											"name": "LT"
										},
										{
											"begin": 5091,
											"end": 5160,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5091,
											"end": 5160,
											"name": "JUMPDEST"
										},
										{
											"begin": 5087,
											"end": 5389,
											"name": "ISZERO"
										},
										{
											"begin": 5087,
											"end": 5389,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5087,
											"end": 5389,
											"name": "JUMPI"
										},
										{
											"begin": 5360,
											"end": 5376,
											"name": "DUP1"
										},
										{
											"begin": 5360,
											"end": 5380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5360,
											"end": 5380,
											"name": "ADD"
										},
										{
											"begin": 5360,
											"end": 5380,
											"name": "SLOAD"
										},
										{
											"begin": 5341,
											"end": 5380,
											"name": "SWAP3"
										},
										{
											"begin": 5341,
											"end": 5380,
											"name": "POP"
										},
										{
											"begin": 5087,
											"end": 5389,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5087,
											"end": 5389,
											"name": "JUMPDEST"
										},
										{
											"begin": 5407,
											"end": 5408,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5400,
											"end": 5403,
											"name": "DUP6"
										},
										{
											"begin": 5400,
											"end": 5408,
											"name": "EQ"
										},
										{
											"begin": 5396,
											"end": 5434,
											"name": "ISZERO"
										},
										{
											"begin": 5396,
											"end": 5434,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5396,
											"end": 5434,
											"name": "JUMPI"
										},
										{
											"begin": 5420,
											"end": 5425,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 5420,
											"end": 5425,
											"name": "JUMP"
										},
										{
											"begin": 5396,
											"end": 5434,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 5396,
											"end": 5434,
											"name": "JUMPDEST"
										},
										{
											"begin": 5447,
											"end": 5457,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 5455,
											"end": 5456,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5447,
											"end": 5450,
											"name": "DUP7"
										},
										{
											"begin": 5447,
											"end": 5454,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5447,
											"end": 5454,
											"name": "SWAP1"
										},
										{
											"begin": 5447,
											"end": 5457,
											"name": "SWAP2"
										},
										{
											"begin": 5447,
											"end": 5457,
											"name": "SWAP1"
										},
										{
											"begin": 5447,
											"end": 5457,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5447,
											"end": 5457,
											"name": "AND"
										},
										{
											"begin": 5447,
											"end": 5457,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5447,
											"end": 5457,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 5447,
											"end": 5457,
											"name": "JUMPDEST"
										},
										{
											"begin": 5441,
											"end": 5457,
											"name": "SWAP5"
										},
										{
											"begin": 5441,
											"end": 5457,
											"name": "POP"
										},
										{
											"begin": 4880,
											"end": 4883,
											"name": "DUP2"
										},
										{
											"begin": 4880,
											"end": 4883,
											"name": "DUP1"
										},
										{
											"begin": 4880,
											"end": 4883,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4880,
											"end": 4883,
											"name": "ADD"
										},
										{
											"begin": 4880,
											"end": 4883,
											"name": "SWAP3"
										},
										{
											"begin": 4880,
											"end": 4883,
											"name": "POP"
										},
										{
											"begin": 4880,
											"end": 4883,
											"name": "POP"
										},
										{
											"begin": 4840,
											"end": 5464,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 4840,
											"end": 5464,
											"name": "JUMP"
										},
										{
											"begin": 4840,
											"end": 5464,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 4840,
											"end": 5464,
											"name": "JUMPDEST"
										},
										{
											"begin": 5493,
											"end": 5494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5489,
											"name": "DUP4"
										},
										{
											"begin": 5473,
											"end": 5494,
											"name": "EQ"
										},
										{
											"begin": 5469,
											"end": 5519,
											"name": "ISZERO"
										},
										{
											"begin": 5469,
											"end": 5519,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5469,
											"end": 5519,
											"name": "JUMPI"
										},
										{
											"begin": 5511,
											"end": 5512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5504,
											"end": 5512,
											"name": "SWAP4"
										},
										{
											"begin": 5504,
											"end": 5512,
											"name": "POP"
										},
										{
											"begin": 5504,
											"end": 5512,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5504,
											"end": 5512,
											"name": "JUMP"
										},
										{
											"begin": 5469,
											"end": 5519,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 5469,
											"end": 5519,
											"name": "JUMPDEST"
										},
										{
											"begin": 5531,
											"end": 5535,
											"name": "DUP7"
										},
										{
											"begin": 5531,
											"end": 5554,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5531,
											"end": 5554,
											"name": "ADD"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5560,
											"name": "DUP8"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "AND"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "AND"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "DUP2"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "MSTORE"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "ADD"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "SWAP1"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "DUP2"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "MSTORE"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "ADD"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "KECCAK256"
										},
										{
											"begin": 5562,
											"end": 5598,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 5583,
											"end": 5587,
											"name": "DUP9"
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "ADD"
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "SLOAD"
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "EXP"
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "SWAP1"
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "DIV"
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "AND"
										},
										{
											"begin": 5562,
											"end": 5598,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5562,
											"end": 5598,
											"name": "AND"
										},
										{
											"begin": 5562,
											"end": 5578,
											"name": "DUP6"
										},
										{
											"begin": 5562,
											"end": 5582,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5562,
											"end": 5582,
											"name": "SWAP1"
										},
										{
											"begin": 5562,
											"end": 5598,
											"name": "SWAP2"
										},
										{
											"begin": 5562,
											"end": 5598,
											"name": "SWAP1"
										},
										{
											"begin": 5562,
											"end": 5598,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5562,
											"end": 5598,
											"name": "AND"
										},
										{
											"begin": 5562,
											"end": 5598,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5562,
											"end": 5598,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 5562,
											"end": 5598,
											"name": "JUMPDEST"
										},
										{
											"begin": 5531,
											"end": 5599,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5531,
											"end": 5599,
											"name": "DUP2"
										},
										{
											"begin": 5531,
											"end": 5599,
											"name": "LT"
										},
										{
											"begin": 5531,
											"end": 5599,
											"name": "ISZERO"
										},
										{
											"begin": 5531,
											"end": 5599,
											"name": "ISZERO"
										},
										{
											"begin": 5531,
											"end": 5599,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5531,
											"end": 5599,
											"name": "JUMPI"
										},
										{
											"begin": 5531,
											"end": 5599,
											"name": "INVALID"
										},
										{
											"begin": 5531,
											"end": 5599,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5531,
											"end": 5599,
											"name": "JUMPDEST"
										},
										{
											"begin": 5531,
											"end": 5599,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5531,
											"end": 5599,
											"name": "MUL"
										},
										{
											"begin": 5531,
											"end": 5599,
											"name": "ADD"
										},
										{
											"begin": 5531,
											"end": 5606,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5531,
											"end": 5606,
											"name": "ADD"
										},
										{
											"begin": 5531,
											"end": 5606,
											"name": "SLOAD"
										},
										{
											"begin": 5524,
											"end": 5606,
											"name": "SWAP4"
										},
										{
											"begin": 5524,
											"end": 5606,
											"name": "POP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "JUMPDEST"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP4"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "SWAP3"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 4657,
											"end": 5611,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "JUMPDEST"
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3671,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3669,
											"end": 3670,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3609,
											"end": 3664,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3644,
											"end": 3648,
											"name": "DUP5"
										},
										{
											"begin": 3644,
											"end": 3663,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3644,
											"end": 3663,
											"name": "ADD"
										},
										{
											"begin": 3644,
											"end": 3663,
											"name": "SLOAD"
										},
										{
											"begin": 3609,
											"end": 3639,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3626,
											"end": 3630,
											"name": "DUP7"
										},
										{
											"begin": 3626,
											"end": 3638,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3626,
											"end": 3638,
											"name": "ADD"
										},
										{
											"begin": 3626,
											"end": 3638,
											"name": "SLOAD"
										},
										{
											"begin": 3609,
											"end": 3621,
											"name": "NUMBER"
										},
										{
											"begin": 3609,
											"end": 3625,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3609,
											"end": 3625,
											"name": "SWAP1"
										},
										{
											"begin": 3609,
											"end": 3639,
											"name": "SWAP2"
										},
										{
											"begin": 3609,
											"end": 3639,
											"name": "SWAP1"
										},
										{
											"begin": 3609,
											"end": 3639,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3609,
											"end": 3639,
											"name": "AND"
										},
										{
											"begin": 3609,
											"end": 3639,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3639,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3609,
											"end": 3639,
											"name": "JUMPDEST"
										},
										{
											"begin": 3609,
											"end": 3643,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3609,
											"end": 3643,
											"name": "SWAP1"
										},
										{
											"begin": 3609,
											"end": 3664,
											"name": "SWAP2"
										},
										{
											"begin": 3609,
											"end": 3664,
											"name": "SWAP1"
										},
										{
											"begin": 3609,
											"end": 3664,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3609,
											"end": 3664,
											"name": "AND"
										},
										{
											"begin": 3609,
											"end": 3664,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3664,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 3609,
											"end": 3664,
											"name": "JUMPDEST"
										},
										{
											"begin": 3609,
											"end": 3668,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3609,
											"end": 3668,
											"name": "SWAP1"
										},
										{
											"begin": 3609,
											"end": 3671,
											"name": "SWAP2"
										},
										{
											"begin": 3609,
											"end": 3671,
											"name": "SWAP1"
										},
										{
											"begin": 3609,
											"end": 3671,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3609,
											"end": 3671,
											"name": "AND"
										},
										{
											"begin": 3609,
											"end": 3671,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3671,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3609,
											"end": 3671,
											"name": "JUMPDEST"
										},
										{
											"begin": 3602,
											"end": 3671,
											"name": "SWAP1"
										},
										{
											"begin": 3602,
											"end": 3671,
											"name": "POP"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "SWAP2"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "SWAP1"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "POP"
										},
										{
											"begin": 3503,
											"end": 3676,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "JUMPDEST"
										},
										{
											"begin": 7704,
											"end": 7708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7718,
											"end": 7747,
											"name": "DUP1"
										},
										{
											"begin": 7750,
											"end": 7754,
											"name": "DUP4"
										},
										{
											"begin": 7750,
											"end": 7766,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 7750,
											"end": 7766,
											"name": "ADD"
										},
										{
											"begin": 7767,
											"end": 7790,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 7775,
											"end": 7779,
											"name": "DUP6"
										},
										{
											"begin": 7775,
											"end": 7789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7789,
											"name": "ADD"
										},
										{
											"begin": 7775,
											"end": 7789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7789,
											"name": "SWAP1"
										},
										{
											"begin": 7775,
											"end": 7789,
											"name": "SLOAD"
										},
										{
											"begin": 7775,
											"end": 7789,
											"name": "SWAP1"
										},
										{
											"begin": 7775,
											"end": 7789,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7775,
											"end": 7789,
											"name": "EXP"
										},
										{
											"begin": 7775,
											"end": 7789,
											"name": "SWAP1"
										},
										{
											"begin": 7775,
											"end": 7789,
											"name": "DIV"
										},
										{
											"begin": 7775,
											"end": 7789,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7775,
											"end": 7789,
											"name": "AND"
										},
										{
											"begin": 7767,
											"end": 7790,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7767,
											"end": 7790,
											"name": "AND"
										},
										{
											"begin": 7767,
											"end": 7770,
											"name": "DUP6"
										},
										{
											"begin": 7767,
											"end": 7774,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 7767,
											"end": 7774,
											"name": "SWAP1"
										},
										{
											"begin": 7767,
											"end": 7790,
											"name": "SWAP2"
										},
										{
											"begin": 7767,
											"end": 7790,
											"name": "SWAP1"
										},
										{
											"begin": 7767,
											"end": 7790,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7767,
											"end": 7790,
											"name": "AND"
										},
										{
											"begin": 7767,
											"end": 7790,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7767,
											"end": 7790,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 7767,
											"end": 7790,
											"name": "JUMPDEST"
										},
										{
											"begin": 7750,
											"end": 7791,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 7750,
											"end": 7791,
											"name": "DUP2"
										},
										{
											"begin": 7750,
											"end": 7791,
											"name": "LT"
										},
										{
											"begin": 7750,
											"end": 7791,
											"name": "ISZERO"
										},
										{
											"begin": 7750,
											"end": 7791,
											"name": "ISZERO"
										},
										{
											"begin": 7750,
											"end": 7791,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 7750,
											"end": 7791,
											"name": "JUMPI"
										},
										{
											"begin": 7750,
											"end": 7791,
											"name": "INVALID"
										},
										{
											"begin": 7750,
											"end": 7791,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 7750,
											"end": 7791,
											"name": "JUMPDEST"
										},
										{
											"begin": 7750,
											"end": 7791,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 7750,
											"end": 7791,
											"name": "MUL"
										},
										{
											"begin": 7750,
											"end": 7791,
											"name": "ADD"
										},
										{
											"begin": 7718,
											"end": 7791,
											"name": "SWAP1"
										},
										{
											"begin": 7718,
											"end": 7791,
											"name": "POP"
										},
										{
											"begin": 7825,
											"end": 7828,
											"name": "DUP3"
										},
										{
											"begin": 7801,
											"end": 7811,
											"name": "DUP2"
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "ADD"
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "SLOAD"
										},
										{
											"begin": 7801,
											"end": 7828,
											"name": "EQ"
										},
										{
											"begin": 7801,
											"end": 7828,
											"name": "ISZERO"
										},
										{
											"begin": 7797,
											"end": 7853,
											"name": "ISZERO"
										},
										{
											"begin": 7797,
											"end": 7853,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 7797,
											"end": 7853,
											"name": "JUMPI"
										},
										{
											"begin": 7845,
											"end": 7846,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7838,
											"end": 7846,
											"name": "SWAP2"
										},
										{
											"begin": 7838,
											"end": 7846,
											"name": "POP"
										},
										{
											"begin": 7838,
											"end": 7846,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 7838,
											"end": 7846,
											"name": "JUMP"
										},
										{
											"begin": 7797,
											"end": 7853,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 7797,
											"end": 7853,
											"name": "JUMPDEST"
										},
										{
											"begin": 7865,
											"end": 7875,
											"name": "DUP1"
										},
										{
											"begin": 7865,
											"end": 7890,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7865,
											"end": 7890,
											"name": "ADD"
										},
										{
											"begin": 7865,
											"end": 7890,
											"name": "SLOAD"
										},
										{
											"begin": 7858,
											"end": 7890,
											"name": "SWAP2"
										},
										{
											"begin": 7858,
											"end": 7890,
											"name": "POP"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "JUMPDEST"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "POP"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP3"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "SWAP2"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "POP"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "POP"
										},
										{
											"begin": 7598,
											"end": 7895,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "JUMPDEST"
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "DUP2"
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "DUP4"
										},
										{
											"begin": 2944,
											"end": 2963,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2944,
											"end": 2963,
											"name": "ADD"
										},
										{
											"begin": 2944,
											"end": 2978,
											"name": "DUP2"
										},
										{
											"begin": 2944,
											"end": 2978,
											"name": "SWAP1"
										},
										{
											"begin": 2944,
											"end": 2978,
											"name": "SSTORE"
										},
										{
											"begin": 2944,
											"end": 2978,
											"name": "POP"
										},
										{
											"begin": 3008,
											"end": 3034,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 3032,
											"end": 3033,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3008,
											"end": 3012,
											"name": "DUP5"
										},
										{
											"begin": 3008,
											"end": 3027,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3008,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 3008,
											"end": 3027,
											"name": "SLOAD"
										},
										{
											"begin": 3008,
											"end": 3031,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3008,
											"end": 3031,
											"name": "SWAP1"
										},
										{
											"begin": 3008,
											"end": 3034,
											"name": "SWAP2"
										},
										{
											"begin": 3008,
											"end": 3034,
											"name": "SWAP1"
										},
										{
											"begin": 3008,
											"end": 3034,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3008,
											"end": 3034,
											"name": "AND"
										},
										{
											"begin": 3008,
											"end": 3034,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3008,
											"end": 3034,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 3008,
											"end": 3034,
											"name": "JUMPDEST"
										},
										{
											"begin": 2984,
											"end": 2988,
											"name": "DUP4"
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "ADD"
										},
										{
											"begin": 2984,
											"end": 3034,
											"name": "DUP2"
										},
										{
											"begin": 2984,
											"end": 3034,
											"name": "SWAP1"
										},
										{
											"begin": 2984,
											"end": 3034,
											"name": "SSTORE"
										},
										{
											"begin": 2984,
											"end": 3034,
											"name": "POP"
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 3097,
											"end": 3098,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3073,
											"end": 3077,
											"name": "DUP5"
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "ADD"
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "SLOAD"
										},
										{
											"begin": 3073,
											"end": 3096,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3073,
											"end": 3096,
											"name": "SWAP1"
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "SWAP2"
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "SWAP1"
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "AND"
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 3073,
											"end": 3099,
											"name": "JUMPDEST"
										},
										{
											"begin": 3040,
											"end": 3044,
											"name": "DUP4"
										},
										{
											"begin": 3040,
											"end": 3070,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3040,
											"end": 3070,
											"name": "ADD"
										},
										{
											"begin": 3040,
											"end": 3099,
											"name": "DUP2"
										},
										{
											"begin": 3040,
											"end": 3099,
											"name": "SWAP1"
										},
										{
											"begin": 3040,
											"end": 3099,
											"name": "SSTORE"
										},
										{
											"begin": 3040,
											"end": 3099,
											"name": "POP"
										},
										{
											"begin": 3122,
											"end": 3123,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3105,
											"end": 3109,
											"name": "DUP4"
										},
										{
											"begin": 3105,
											"end": 3119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3119,
											"name": "ADD"
										},
										{
											"begin": 3105,
											"end": 3119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "EXP"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "DUP2"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "SLOAD"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "DUP2"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "MUL"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "NOT"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "AND"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "SWAP1"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "DUP4"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "AND"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "MUL"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "OR"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "SWAP1"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "SSTORE"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "POP"
										},
										{
											"begin": 3172,
											"end": 3173,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3151,
											"end": 3155,
											"name": "DUP4"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "EXP"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "DUP2"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "SLOAD"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "DUP2"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "MUL"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "NOT"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "AND"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "SWAP1"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "DUP4"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "AND"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "MUL"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "OR"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "SWAP1"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "SSTORE"
										},
										{
											"begin": 3151,
											"end": 3173,
											"name": "POP"
										},
										{
											"begin": 3245,
											"end": 3256,
											"name": "PUSH",
											"value": "12A05F200"
										},
										{
											"begin": 3215,
											"end": 3219,
											"name": "DUP4"
										},
										{
											"begin": 3215,
											"end": 3242,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3215,
											"end": 3242,
											"name": "ADD"
										},
										{
											"begin": 3215,
											"end": 3256,
											"name": "DUP2"
										},
										{
											"begin": 3215,
											"end": 3256,
											"name": "SWAP1"
										},
										{
											"begin": 3215,
											"end": 3256,
											"name": "SSTORE"
										},
										{
											"begin": 3215,
											"end": 3256,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3327,
											"name": "DUP1"
										},
										{
											"begin": 3303,
											"end": 3307,
											"name": "DUP4"
										},
										{
											"begin": 3303,
											"end": 3316,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3303,
											"end": 3316,
											"name": "ADD"
										},
										{
											"begin": 3303,
											"end": 3316,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "EXP"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "DUP2"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "SLOAD"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "DUP2"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "MUL"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "NOT"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "AND"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "SWAP1"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "DUP4"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "AND"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "MUL"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "OR"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "SWAP1"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "SSTORE"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "POP"
										},
										{
											"begin": 3348,
											"end": 3360,
											"name": "NUMBER"
										},
										{
											"begin": 3333,
											"end": 3337,
											"name": "DUP4"
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "ADD"
										},
										{
											"begin": 3333,
											"end": 3360,
											"name": "DUP2"
										},
										{
											"begin": 3333,
											"end": 3360,
											"name": "SWAP1"
										},
										{
											"begin": 3333,
											"end": 3360,
											"name": "SSTORE"
										},
										{
											"begin": 3333,
											"end": 3360,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 3365,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "JUMPDEST"
										},
										{
											"begin": 3825,
											"end": 3832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3904,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP3"
										},
										{
											"begin": 3884,
											"end": 3903,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3884,
											"end": 3903,
											"name": "ADD"
										},
										{
											"begin": 3884,
											"end": 3903,
											"name": "SLOAD"
										},
										{
											"begin": 3849,
											"end": 3879,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP5"
										},
										{
											"begin": 3866,
											"end": 3878,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3866,
											"end": 3878,
											"name": "ADD"
										},
										{
											"begin": 3866,
											"end": 3878,
											"name": "SLOAD"
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "NUMBER"
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3849,
											"end": 3879,
											"name": "SWAP2"
										},
										{
											"begin": 3849,
											"end": 3879,
											"name": "SWAP1"
										},
										{
											"begin": 3849,
											"end": 3879,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3849,
											"end": 3879,
											"name": "AND"
										},
										{
											"begin": 3849,
											"end": 3879,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3849,
											"end": 3879,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 3849,
											"end": 3879,
											"name": "JUMPDEST"
										},
										{
											"begin": 3849,
											"end": 3883,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 3849,
											"end": 3883,
											"name": "SWAP1"
										},
										{
											"begin": 3849,
											"end": 3904,
											"name": "SWAP2"
										},
										{
											"begin": 3849,
											"end": 3904,
											"name": "SWAP1"
										},
										{
											"begin": 3849,
											"end": 3904,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3849,
											"end": 3904,
											"name": "AND"
										},
										{
											"begin": 3849,
											"end": 3904,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3849,
											"end": 3904,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 3849,
											"end": 3904,
											"name": "JUMPDEST"
										},
										{
											"begin": 3842,
											"end": 3904,
											"name": "SWAP1"
										},
										{
											"begin": 3842,
											"end": 3904,
											"name": "POP"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "SWAP2"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "SWAP1"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "POP"
										},
										{
											"begin": 3743,
											"end": 3909,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "JUMPDEST"
										},
										{
											"begin": 10748,
											"end": 10755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10961,
											"end": 10968,
											"name": "DUP6"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "MLOAD"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "ADD"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "DUP1"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "DUP1"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "PUSH",
											"value": "194C69717569646974792E4E6574776F726B20417574686F72697A6174696F6E"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "DUP2"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "MSTORE"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "ADD"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "PUSH",
											"value": "3A0A333200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "DUP2"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "MSTORE"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "POP"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "ADD"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "DUP3"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "NOT"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "AND"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "NOT"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "AND"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "DUP2"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "MSTORE"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "ADD"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "SWAP2"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "POP"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "POP"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "SWAP1"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10879,
											"end": 10969,
											"name": "MSTORE"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "MLOAD"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "DUP1"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "DUP3"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "DUP1"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "MLOAD"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "SWAP1"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "ADD"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "SWAP1"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "DUP1"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "DUP4"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "POP"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "POP"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "POP"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "SWAP1"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "POP"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "ADD"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "SWAP2"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "POP"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "POP"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "MLOAD"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "DUP1"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "SWAP2"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "SUB"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "SWAP1"
										},
										{
											"begin": 10869,
											"end": 10970,
											"name": "KECCAK256"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "MLOAD"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "ADD"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "DUP1"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "DUP1"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "PUSH",
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "DUP2"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "MSTORE"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "POP"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "ADD"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "DUP3"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "NOT"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "AND"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "NOT"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "AND"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "DUP2"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "MSTORE"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "ADD"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "SWAP2"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "POP"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "POP"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "SWAP1"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10799,
											"end": 10971,
											"name": "MSTORE"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "MLOAD"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "DUP1"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "DUP3"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "DUP1"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "MLOAD"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "SWAP1"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "ADD"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "SWAP1"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "DUP1"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "DUP4"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "POP"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "POP"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "POP"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "SWAP1"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "POP"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "ADD"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "SWAP2"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "POP"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "POP"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "MLOAD"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "DUP1"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "SWAP2"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "SUB"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "SWAP1"
										},
										{
											"begin": 10789,
											"end": 10972,
											"name": "KECCAK256"
										},
										{
											"begin": 10980,
											"end": 10981,
											"name": "DUP4"
										},
										{
											"begin": 10983,
											"end": 10984,
											"name": "DUP7"
										},
										{
											"begin": 10986,
											"end": 10987,
											"name": "DUP7"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "MLOAD"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP2"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "MSTORE"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "ADD"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "MSTORE"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "MLOAD"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP1"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP6"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "NOT"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "AND"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "NOT"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "AND"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP2"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "MSTORE"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "ADD"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP5"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "AND"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "AND"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP2"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "MSTORE"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "ADD"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP4"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "NOT"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "AND"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "NOT"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "AND"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP2"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "MSTORE"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "ADD"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP3"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "NOT"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "AND"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "NOT"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "AND"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP2"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "MSTORE"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "ADD"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "SWAP5"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "POP"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "POP"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "POP"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "POP"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "POP"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "MLOAD"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP2"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "SUB"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "SWAP1"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP1"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP5"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "SUB"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "SWAP1"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "DUP7"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "GAS"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "CALL"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "POP"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "POP"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "POP"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "MLOAD"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "SUB"
										},
										{
											"begin": 10772,
											"end": 10988,
											"name": "MLOAD"
										},
										{
											"begin": 10765,
											"end": 10988,
											"name": "SWAP1"
										},
										{
											"begin": 10765,
											"end": 10988,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP5"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "SWAP4"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10993,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "JUMPDEST"
										},
										{
											"begin": 10329,
											"end": 10338,
											"name": "DUP3"
										},
										{
											"begin": 10329,
											"end": 10342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10329,
											"end": 10342,
											"name": "ADD"
										},
										{
											"begin": 10329,
											"end": 10342,
											"name": "SLOAD"
										},
										{
											"begin": 10323,
											"end": 10326,
											"name": "DUP3"
										},
										{
											"begin": 10323,
											"end": 10342,
											"name": "GT"
										},
										{
											"begin": 10319,
											"end": 10477,
											"name": "ISZERO"
										},
										{
											"begin": 10319,
											"end": 10477,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 10319,
											"end": 10477,
											"name": "JUMPI"
										},
										{
											"begin": 10368,
											"end": 10371,
											"name": "DUP2"
										},
										{
											"begin": 10352,
											"end": 10361,
											"name": "DUP4"
										},
										{
											"begin": 10352,
											"end": 10365,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10365,
											"name": "ADD"
										},
										{
											"begin": 10352,
											"end": 10371,
											"name": "DUP2"
										},
										{
											"begin": 10352,
											"end": 10371,
											"name": "SWAP1"
										},
										{
											"begin": 10352,
											"end": 10371,
											"name": "SSTORE"
										},
										{
											"begin": 10352,
											"end": 10371,
											"name": "POP"
										},
										{
											"begin": 10398,
											"end": 10403,
											"name": "DUP1"
										},
										{
											"begin": 10379,
											"end": 10388,
											"name": "DUP4"
										},
										{
											"begin": 10379,
											"end": 10395,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10379,
											"end": 10395,
											"name": "ADD"
										},
										{
											"begin": 10379,
											"end": 10403,
											"name": "DUP2"
										},
										{
											"begin": 10379,
											"end": 10403,
											"name": "SWAP1"
										},
										{
											"begin": 10379,
											"end": 10403,
											"name": "SSTORE"
										},
										{
											"begin": 10379,
											"end": 10403,
											"name": "POP"
										},
										{
											"begin": 10319,
											"end": 10477,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 10319,
											"end": 10477,
											"name": "JUMP"
										},
										{
											"begin": 10319,
											"end": 10477,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 10319,
											"end": 10477,
											"name": "JUMPDEST"
										},
										{
											"begin": 10443,
											"end": 10470,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 10464,
											"end": 10469,
											"name": "DUP2"
										},
										{
											"begin": 10443,
											"end": 10452,
											"name": "DUP5"
										},
										{
											"begin": 10443,
											"end": 10459,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10443,
											"end": 10459,
											"name": "ADD"
										},
										{
											"begin": 10443,
											"end": 10459,
											"name": "SLOAD"
										},
										{
											"begin": 10443,
											"end": 10463,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 10443,
											"end": 10463,
											"name": "SWAP1"
										},
										{
											"begin": 10443,
											"end": 10470,
											"name": "SWAP2"
										},
										{
											"begin": 10443,
											"end": 10470,
											"name": "SWAP1"
										},
										{
											"begin": 10443,
											"end": 10470,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10443,
											"end": 10470,
											"name": "AND"
										},
										{
											"begin": 10443,
											"end": 10470,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10443,
											"end": 10470,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 10443,
											"end": 10470,
											"name": "JUMPDEST"
										},
										{
											"begin": 10424,
											"end": 10433,
											"name": "DUP4"
										},
										{
											"begin": 10424,
											"end": 10440,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10424,
											"end": 10440,
											"name": "ADD"
										},
										{
											"begin": 10424,
											"end": 10470,
											"name": "DUP2"
										},
										{
											"begin": 10424,
											"end": 10470,
											"name": "SWAP1"
										},
										{
											"begin": 10424,
											"end": 10470,
											"name": "SSTORE"
										},
										{
											"begin": 10424,
											"end": 10470,
											"name": "POP"
										},
										{
											"begin": 10319,
											"end": 10477,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 10319,
											"end": 10477,
											"name": "JUMPDEST"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "POP"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "POP"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "POP"
										},
										{
											"begin": 10197,
											"end": 10481,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "JUMPDEST"
										},
										{
											"begin": 8772,
											"end": 8786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8843,
											"name": "DUP1"
										},
										{
											"begin": 8882,
											"end": 8914,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8955,
											"end": 8963,
											"name": "DUP1"
										},
										{
											"begin": 9006,
											"end": 9035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8805,
											"end": 8806,
											"name": "DUP1"
										},
										{
											"begin": 8796,
											"end": 8806,
											"name": "SWAP5"
										},
										{
											"begin": 8796,
											"end": 8806,
											"name": "POP"
										},
										{
											"begin": 8846,
											"end": 8850,
											"name": "DUP9"
										},
										{
											"begin": 8846,
											"end": 8861,
											"name": "PUSH",
											"value": "1D"
										},
										{
											"begin": 8846,
											"end": 8861,
											"name": "ADD"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8862,
											"end": 8867,
											"name": "DUP10"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "AND"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "AND"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "DUP2"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "MSTORE"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "ADD"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "SWAP1"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "DUP2"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "MSTORE"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "ADD"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 8868,
											"name": "KECCAK256"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 8875,
											"name": "DUP9"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "AND"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "AND"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "DUP2"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "MSTORE"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "ADD"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "SWAP1"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "DUP2"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "MSTORE"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "ADD"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "KECCAK256"
										},
										{
											"begin": 8813,
											"end": 8876,
											"name": "SWAP4"
										},
										{
											"begin": 8813,
											"end": 8876,
											"name": "POP"
										},
										{
											"begin": 8917,
											"end": 8932,
											"name": "DUP4"
										},
										{
											"begin": 8917,
											"end": 8944,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8917,
											"end": 8944,
											"name": "ADD"
										},
										{
											"begin": 8882,
											"end": 8944,
											"name": "SWAP3"
										},
										{
											"begin": 8882,
											"end": 8944,
											"name": "POP"
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8955,
											"end": 8967,
											"name": "SWAP2"
										},
										{
											"begin": 8955,
											"end": 8967,
											"name": "POP"
										},
										{
											"begin": 8950,
											"end": 9206,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 8950,
											"end": 9206,
											"name": "JUMPDEST"
										},
										{
											"begin": 8973,
											"end": 8984,
											"name": "DUP3"
										},
										{
											"begin": 8973,
											"end": 8991,
											"name": "DUP1"
										},
										{
											"begin": 8973,
											"end": 8991,
											"name": "SLOAD"
										},
										{
											"begin": 8973,
											"end": 8991,
											"name": "SWAP1"
										},
										{
											"begin": 8973,
											"end": 8991,
											"name": "POP"
										},
										{
											"begin": 8969,
											"end": 8970,
											"name": "DUP3"
										},
										{
											"begin": 8969,
											"end": 8991,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8969,
											"end": 8991,
											"name": "AND"
										},
										{
											"begin": 8969,
											"end": 8991,
											"name": "LT"
										},
										{
											"begin": 8950,
											"end": 9206,
											"name": "ISZERO"
										},
										{
											"begin": 8950,
											"end": 9206,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 8950,
											"end": 9206,
											"name": "JUMPI"
										},
										{
											"begin": 9038,
											"end": 9049,
											"name": "DUP3"
										},
										{
											"begin": 9050,
											"end": 9051,
											"name": "DUP3"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "AND"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "DUP2"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "SLOAD"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "DUP2"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "LT"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "ISZERO"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "ISZERO"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "JUMPI"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "INVALID"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "JUMPDEST"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "SWAP1"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "MSTORE"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "KECCAK256"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "SWAP1"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "MUL"
										},
										{
											"begin": 9038,
											"end": 9052,
											"name": "ADD"
										},
										{
											"begin": 9006,
											"end": 9052,
											"name": "SWAP1"
										},
										{
											"begin": 9006,
											"end": 9052,
											"name": "POP"
										},
										{
											"begin": 9082,
											"end": 9085,
											"name": "DUP6"
										},
										{
											"begin": 9064,
											"end": 9074,
											"name": "DUP2"
										},
										{
											"begin": 9064,
											"end": 9078,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9064,
											"end": 9078,
											"name": "ADD"
										},
										{
											"begin": 9064,
											"end": 9078,
											"name": "SLOAD"
										},
										{
											"begin": 9064,
											"end": 9085,
											"name": "EQ"
										},
										{
											"begin": 9060,
											"end": 9200,
											"name": "ISZERO"
										},
										{
											"begin": 9060,
											"end": 9200,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 9060,
											"end": 9200,
											"name": "JUMPI"
										},
										{
											"begin": 9106,
											"end": 9135,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 9117,
											"end": 9127,
											"name": "DUP2"
										},
										{
											"begin": 9117,
											"end": 9134,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9117,
											"end": 9134,
											"name": "ADD"
										},
										{
											"begin": 9117,
											"end": 9134,
											"name": "SLOAD"
										},
										{
											"begin": 9106,
											"end": 9112,
											"name": "DUP7"
										},
										{
											"begin": 9106,
											"end": 9116,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 9106,
											"end": 9116,
											"name": "SWAP1"
										},
										{
											"begin": 9106,
											"end": 9135,
											"name": "SWAP2"
										},
										{
											"begin": 9106,
											"end": 9135,
											"name": "SWAP1"
										},
										{
											"begin": 9106,
											"end": 9135,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9106,
											"end": 9135,
											"name": "AND"
										},
										{
											"begin": 9106,
											"end": 9135,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9106,
											"end": 9135,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 9106,
											"end": 9135,
											"name": "JUMPDEST"
										},
										{
											"begin": 9097,
											"end": 9135,
											"name": "SWAP5"
										},
										{
											"begin": 9097,
											"end": 9135,
											"name": "POP"
										},
										{
											"begin": 9060,
											"end": 9200,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 9060,
											"end": 9200,
											"name": "JUMP"
										},
										{
											"begin": 9060,
											"end": 9200,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 9060,
											"end": 9200,
											"name": "JUMPDEST"
										},
										{
											"begin": 9171,
											"end": 9174,
											"name": "DUP6"
										},
										{
											"begin": 9154,
											"end": 9164,
											"name": "DUP2"
										},
										{
											"begin": 9154,
											"end": 9168,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9154,
											"end": 9168,
											"name": "ADD"
										},
										{
											"begin": 9154,
											"end": 9168,
											"name": "SLOAD"
										},
										{
											"begin": 9154,
											"end": 9174,
											"name": "GT"
										},
										{
											"begin": 9150,
											"end": 9200,
											"name": "ISZERO"
										},
										{
											"begin": 9150,
											"end": 9200,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 9150,
											"end": 9200,
											"name": "JUMPI"
										},
										{
											"begin": 9186,
											"end": 9191,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 9186,
											"end": 9191,
											"name": "JUMP"
										},
										{
											"begin": 9150,
											"end": 9200,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 9150,
											"end": 9200,
											"name": "JUMPDEST"
										},
										{
											"begin": 9060,
											"end": 9200,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 9060,
											"end": 9200,
											"name": "JUMPDEST"
										},
										{
											"begin": 8993,
											"end": 8996,
											"name": "DUP2"
										},
										{
											"begin": 8993,
											"end": 8996,
											"name": "DUP1"
										},
										{
											"begin": 8993,
											"end": 8996,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8993,
											"end": 8996,
											"name": "ADD"
										},
										{
											"begin": 8993,
											"end": 8996,
											"name": "SWAP3"
										},
										{
											"begin": 8993,
											"end": 8996,
											"name": "POP"
										},
										{
											"begin": 8993,
											"end": 8996,
											"name": "POP"
										},
										{
											"begin": 8950,
											"end": 9206,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 8950,
											"end": 9206,
											"name": "JUMP"
										},
										{
											"begin": 8950,
											"end": 9206,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 8950,
											"end": 9206,
											"name": "JUMPDEST"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP5"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "SWAP4"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "POP"
										},
										{
											"begin": 8609,
											"end": 9210,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "JUMPDEST"
										},
										{
											"begin": 5838,
											"end": 5871,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5878,
											"name": "DUP5"
										},
										{
											"begin": 5874,
											"end": 5897,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5874,
											"end": 5897,
											"name": "ADD"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5903,
											"name": "DUP6"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "AND"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "AND"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "DUP2"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "MSTORE"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "ADD"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "SWAP1"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "DUP2"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "MSTORE"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "ADD"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5904,
											"name": "KECCAK256"
										},
										{
											"begin": 5905,
											"end": 5928,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 5913,
											"end": 5917,
											"name": "DUP7"
										},
										{
											"begin": 5913,
											"end": 5927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5927,
											"name": "ADD"
										},
										{
											"begin": 5913,
											"end": 5927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5927,
											"name": "SWAP1"
										},
										{
											"begin": 5913,
											"end": 5927,
											"name": "SLOAD"
										},
										{
											"begin": 5913,
											"end": 5927,
											"name": "SWAP1"
										},
										{
											"begin": 5913,
											"end": 5927,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5913,
											"end": 5927,
											"name": "EXP"
										},
										{
											"begin": 5913,
											"end": 5927,
											"name": "SWAP1"
										},
										{
											"begin": 5913,
											"end": 5927,
											"name": "DIV"
										},
										{
											"begin": 5913,
											"end": 5927,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5913,
											"end": 5927,
											"name": "AND"
										},
										{
											"begin": 5905,
											"end": 5928,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5905,
											"end": 5928,
											"name": "AND"
										},
										{
											"begin": 5905,
											"end": 5908,
											"name": "DUP6"
										},
										{
											"begin": 5905,
											"end": 5912,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5905,
											"end": 5912,
											"name": "SWAP1"
										},
										{
											"begin": 5905,
											"end": 5928,
											"name": "SWAP2"
										},
										{
											"begin": 5905,
											"end": 5928,
											"name": "SWAP1"
										},
										{
											"begin": 5905,
											"end": 5928,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5905,
											"end": 5928,
											"name": "AND"
										},
										{
											"begin": 5905,
											"end": 5928,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5905,
											"end": 5928,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 5905,
											"end": 5928,
											"name": "JUMPDEST"
										},
										{
											"begin": 5874,
											"end": 5929,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5874,
											"end": 5929,
											"name": "DUP2"
										},
										{
											"begin": 5874,
											"end": 5929,
											"name": "LT"
										},
										{
											"begin": 5874,
											"end": 5929,
											"name": "ISZERO"
										},
										{
											"begin": 5874,
											"end": 5929,
											"name": "ISZERO"
										},
										{
											"begin": 5874,
											"end": 5929,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 5874,
											"end": 5929,
											"name": "JUMPI"
										},
										{
											"begin": 5874,
											"end": 5929,
											"name": "INVALID"
										},
										{
											"begin": 5874,
											"end": 5929,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 5874,
											"end": 5929,
											"name": "JUMPDEST"
										},
										{
											"begin": 5874,
											"end": 5929,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5874,
											"end": 5929,
											"name": "MUL"
										},
										{
											"begin": 5874,
											"end": 5929,
											"name": "ADD"
										},
										{
											"begin": 5838,
											"end": 5929,
											"name": "SWAP1"
										},
										{
											"begin": 5838,
											"end": 5929,
											"name": "POP"
										},
										{
											"begin": 6086,
											"end": 6089,
											"name": "DUP3"
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "DUP2"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SLOAD"
										},
										{
											"begin": 6070,
											"end": 6089,
											"name": "LT"
										},
										{
											"begin": 6066,
											"end": 6300,
											"name": "ISZERO"
										},
										{
											"begin": 6066,
											"end": 6300,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 6066,
											"end": 6300,
											"name": "JUMPI"
										},
										{
											"begin": 6137,
											"end": 6199,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 6193,
											"end": 6198,
											"name": "DUP3"
										},
										{
											"begin": 6137,
											"end": 6188,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 6164,
											"end": 6168,
											"name": "DUP8"
										},
										{
											"begin": 6170,
											"end": 6175,
											"name": "DUP8"
										},
										{
											"begin": 6177,
											"end": 6187,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 6185,
											"end": 6186,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6177,
											"end": 6180,
											"name": "DUP10"
										},
										{
											"begin": 6177,
											"end": 6184,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 6177,
											"end": 6184,
											"name": "SWAP1"
										},
										{
											"begin": 6177,
											"end": 6187,
											"name": "SWAP2"
										},
										{
											"begin": 6177,
											"end": 6187,
											"name": "SWAP1"
										},
										{
											"begin": 6177,
											"end": 6187,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6177,
											"end": 6187,
											"name": "AND"
										},
										{
											"begin": 6177,
											"end": 6187,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6177,
											"end": 6187,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 6177,
											"end": 6187,
											"name": "JUMPDEST"
										},
										{
											"begin": 6137,
											"end": 6163,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 6137,
											"end": 6188,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6137,
											"end": 6188,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 6137,
											"end": 6188,
											"name": "JUMPDEST"
										},
										{
											"begin": 6137,
											"end": 6192,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 6137,
											"end": 6192,
											"name": "SWAP1"
										},
										{
											"begin": 6137,
											"end": 6199,
											"name": "SWAP2"
										},
										{
											"begin": 6137,
											"end": 6199,
											"name": "SWAP1"
										},
										{
											"begin": 6137,
											"end": 6199,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6137,
											"end": 6199,
											"name": "AND"
										},
										{
											"begin": 6137,
											"end": 6199,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6137,
											"end": 6199,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 6137,
											"end": 6199,
											"name": "JUMPDEST"
										},
										{
											"begin": 6118,
											"end": 6127,
											"name": "DUP2"
										},
										{
											"begin": 6118,
											"end": 6134,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6118,
											"end": 6134,
											"name": "ADD"
										},
										{
											"begin": 6118,
											"end": 6199,
											"name": "DUP2"
										},
										{
											"begin": 6118,
											"end": 6199,
											"name": "SWAP1"
										},
										{
											"begin": 6118,
											"end": 6199,
											"name": "SSTORE"
										},
										{
											"begin": 6118,
											"end": 6199,
											"name": "POP"
										},
										{
											"begin": 6223,
											"end": 6226,
											"name": "DUP3"
										},
										{
											"begin": 6207,
											"end": 6216,
											"name": "DUP2"
										},
										{
											"begin": 6207,
											"end": 6220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6207,
											"end": 6220,
											"name": "ADD"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "DUP2"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "SWAP1"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "SSTORE"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "POP"
										},
										{
											"begin": 6066,
											"end": 6300,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 6066,
											"end": 6300,
											"name": "JUMP"
										},
										{
											"begin": 6066,
											"end": 6300,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 6066,
											"end": 6300,
											"name": "JUMPDEST"
										},
										{
											"begin": 6266,
											"end": 6293,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP3"
										},
										{
											"begin": 6266,
											"end": 6275,
											"name": "DUP3"
										},
										{
											"begin": 6266,
											"end": 6282,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6266,
											"end": 6282,
											"name": "ADD"
										},
										{
											"begin": 6266,
											"end": 6282,
											"name": "SLOAD"
										},
										{
											"begin": 6266,
											"end": 6286,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 6266,
											"end": 6286,
											"name": "SWAP1"
										},
										{
											"begin": 6266,
											"end": 6293,
											"name": "SWAP2"
										},
										{
											"begin": 6266,
											"end": 6293,
											"name": "SWAP1"
										},
										{
											"begin": 6266,
											"end": 6293,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6266,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6266,
											"end": 6293,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6266,
											"end": 6293,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 6266,
											"end": 6293,
											"name": "JUMPDEST"
										},
										{
											"begin": 6247,
											"end": 6256,
											"name": "DUP2"
										},
										{
											"begin": 6247,
											"end": 6263,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6247,
											"end": 6263,
											"name": "ADD"
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "SWAP1"
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "SSTORE"
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "POP"
										},
										{
											"begin": 6066,
											"end": 6300,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 6066,
											"end": 6300,
											"name": "JUMPDEST"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "POP"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "POP"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "POP"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "POP"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "POP"
										},
										{
											"begin": 5697,
											"end": 6304,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "JUMPDEST"
										},
										{
											"begin": 6621,
											"end": 6630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6686,
											"name": "DUP1"
										},
										{
											"begin": 6707,
											"end": 6740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6634,
											"name": "DUP1"
										},
										{
											"begin": 6621,
											"end": 6634,
											"name": "SWAP3"
										},
										{
											"begin": 6621,
											"end": 6634,
											"name": "POP"
										},
										{
											"begin": 6616,
											"end": 7099,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 6616,
											"end": 7099,
											"name": "JUMPDEST"
										},
										{
											"begin": 6640,
											"end": 6644,
											"name": "DUP8"
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "ADD"
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "SWAP1"
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "SLOAD"
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "SWAP1"
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "EXP"
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "SWAP1"
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "DIV"
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "AND"
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "AND"
										},
										{
											"begin": 6636,
											"end": 6637,
											"name": "DUP4"
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "LT"
										},
										{
											"begin": 6616,
											"end": 7099,
											"name": "ISZERO"
										},
										{
											"begin": 6616,
											"end": 7099,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 6616,
											"end": 7099,
											"name": "JUMPI"
										},
										{
											"begin": 6689,
											"end": 6699,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 6697,
											"end": 6698,
											"name": "DUP4"
										},
										{
											"begin": 6689,
											"end": 6692,
											"name": "DUP8"
										},
										{
											"begin": 6689,
											"end": 6696,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 6689,
											"end": 6696,
											"name": "SWAP1"
										},
										{
											"begin": 6689,
											"end": 6699,
											"name": "SWAP2"
										},
										{
											"begin": 6689,
											"end": 6699,
											"name": "SWAP1"
										},
										{
											"begin": 6689,
											"end": 6699,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6689,
											"end": 6699,
											"name": "AND"
										},
										{
											"begin": 6689,
											"end": 6699,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6689,
											"end": 6699,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 6689,
											"end": 6699,
											"name": "JUMPDEST"
										},
										{
											"begin": 6669,
											"end": 6699,
											"name": "SWAP2"
										},
										{
											"begin": 6669,
											"end": 6699,
											"name": "POP"
										},
										{
											"begin": 6743,
											"end": 6747,
											"name": "DUP8"
										},
										{
											"begin": 6743,
											"end": 6766,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 6743,
											"end": 6766,
											"name": "ADD"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6767,
											"end": 6772,
											"name": "DUP9"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "AND"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "AND"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "DUP2"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "MSTORE"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "ADD"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "SWAP1"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "DUP2"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "MSTORE"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "ADD"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "KECCAK256"
										},
										{
											"begin": 6774,
											"end": 6803,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 6788,
											"end": 6792,
											"name": "DUP10"
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "ADD"
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "SWAP1"
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "SLOAD"
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "SWAP1"
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "EXP"
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "SWAP1"
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "DIV"
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "AND"
										},
										{
											"begin": 6774,
											"end": 6803,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6774,
											"end": 6803,
											"name": "AND"
										},
										{
											"begin": 6774,
											"end": 6783,
											"name": "DUP5"
										},
										{
											"begin": 6774,
											"end": 6787,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 6774,
											"end": 6787,
											"name": "SWAP1"
										},
										{
											"begin": 6774,
											"end": 6803,
											"name": "SWAP2"
										},
										{
											"begin": 6774,
											"end": 6803,
											"name": "SWAP1"
										},
										{
											"begin": 6774,
											"end": 6803,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6774,
											"end": 6803,
											"name": "AND"
										},
										{
											"begin": 6774,
											"end": 6803,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6774,
											"end": 6803,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 6774,
											"end": 6803,
											"name": "JUMPDEST"
										},
										{
											"begin": 6743,
											"end": 6804,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6743,
											"end": 6804,
											"name": "DUP2"
										},
										{
											"begin": 6743,
											"end": 6804,
											"name": "LT"
										},
										{
											"begin": 6743,
											"end": 6804,
											"name": "ISZERO"
										},
										{
											"begin": 6743,
											"end": 6804,
											"name": "ISZERO"
										},
										{
											"begin": 6743,
											"end": 6804,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 6743,
											"end": 6804,
											"name": "JUMPI"
										},
										{
											"begin": 6743,
											"end": 6804,
											"name": "INVALID"
										},
										{
											"begin": 6743,
											"end": 6804,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 6743,
											"end": 6804,
											"name": "JUMPDEST"
										},
										{
											"begin": 6743,
											"end": 6804,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6743,
											"end": 6804,
											"name": "MUL"
										},
										{
											"begin": 6743,
											"end": 6804,
											"name": "ADD"
										},
										{
											"begin": 6707,
											"end": 6804,
											"name": "SWAP1"
										},
										{
											"begin": 6707,
											"end": 6804,
											"name": "POP"
										},
										{
											"begin": 6828,
											"end": 6837,
											"name": "DUP5"
										},
										{
											"begin": 6816,
											"end": 6825,
											"name": "DUP3"
										},
										{
											"begin": 6816,
											"end": 6837,
											"name": "GT"
										},
										{
											"begin": 6812,
											"end": 7093,
											"name": "ISZERO"
										},
										{
											"begin": 6812,
											"end": 7093,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 6812,
											"end": 7093,
											"name": "JUMPI"
										},
										{
											"begin": 6849,
											"end": 6854,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 6849,
											"end": 6854,
											"name": "JUMP"
										},
										{
											"begin": 6812,
											"end": 7093,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 6812,
											"end": 7093,
											"name": "JUMPDEST"
										},
										{
											"begin": 6889,
											"end": 6898,
											"name": "DUP2"
										},
										{
											"begin": 6873,
											"end": 6882,
											"name": "DUP2"
										},
										{
											"begin": 6873,
											"end": 6886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6886,
											"name": "ADD"
										},
										{
											"begin": 6873,
											"end": 6886,
											"name": "SLOAD"
										},
										{
											"begin": 6873,
											"end": 6898,
											"name": "LT"
										},
										{
											"begin": 6869,
											"end": 7093,
											"name": "ISZERO"
										},
										{
											"begin": 6869,
											"end": 7093,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 6869,
											"end": 7093,
											"name": "JUMPI"
										},
										{
											"begin": 6989,
											"end": 6998,
											"name": "DUP2"
										},
										{
											"begin": 6973,
											"end": 6982,
											"name": "DUP2"
										},
										{
											"begin": 6973,
											"end": 6986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6973,
											"end": 6986,
											"name": "ADD"
										},
										{
											"begin": 6973,
											"end": 6998,
											"name": "DUP2"
										},
										{
											"begin": 6973,
											"end": 6998,
											"name": "SWAP1"
										},
										{
											"begin": 6973,
											"end": 6998,
											"name": "SSTORE"
										},
										{
											"begin": 6973,
											"end": 6998,
											"name": "POP"
										},
										{
											"begin": 7027,
											"end": 7084,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 7054,
											"end": 7058,
											"name": "DUP9"
										},
										{
											"begin": 7060,
											"end": 7065,
											"name": "DUP9"
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 7081,
											"end": 7082,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7067,
											"end": 7076,
											"name": "DUP7"
										},
										{
											"begin": 7067,
											"end": 7080,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 7067,
											"end": 7080,
											"name": "SWAP1"
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "SWAP2"
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "SWAP1"
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "AND"
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "JUMPDEST"
										},
										{
											"begin": 7027,
											"end": 7053,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 7027,
											"end": 7084,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7027,
											"end": 7084,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 7027,
											"end": 7084,
											"name": "JUMPDEST"
										},
										{
											"begin": 7008,
											"end": 7017,
											"name": "DUP2"
										},
										{
											"begin": 7008,
											"end": 7024,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7008,
											"end": 7024,
											"name": "ADD"
										},
										{
											"begin": 7008,
											"end": 7084,
											"name": "DUP2"
										},
										{
											"begin": 7008,
											"end": 7084,
											"name": "SWAP1"
										},
										{
											"begin": 7008,
											"end": 7084,
											"name": "SSTORE"
										},
										{
											"begin": 7008,
											"end": 7084,
											"name": "POP"
										},
										{
											"begin": 6869,
											"end": 7093,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 6869,
											"end": 7093,
											"name": "JUMPDEST"
										},
										{
											"begin": 6656,
											"end": 6659,
											"name": "DUP3"
										},
										{
											"begin": 6656,
											"end": 6659,
											"name": "DUP1"
										},
										{
											"begin": 6656,
											"end": 6659,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6656,
											"end": 6659,
											"name": "ADD"
										},
										{
											"begin": 6656,
											"end": 6659,
											"name": "SWAP4"
										},
										{
											"begin": 6656,
											"end": 6659,
											"name": "POP"
										},
										{
											"begin": 6656,
											"end": 6659,
											"name": "POP"
										},
										{
											"begin": 6616,
											"end": 7099,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 6616,
											"end": 7099,
											"name": "JUMP"
										},
										{
											"begin": 6616,
											"end": 7099,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 6616,
											"end": 7099,
											"name": "JUMPDEST"
										},
										{
											"begin": 7145,
											"end": 7146,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7146,
											"name": "SWAP3"
										},
										{
											"begin": 7141,
											"end": 7146,
											"name": "POP"
										},
										{
											"begin": 7136,
											"end": 7513,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 7136,
											"end": 7513,
											"name": "JUMPDEST"
										},
										{
											"begin": 7152,
											"end": 7156,
											"name": "DUP8"
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "ADD"
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "SWAP1"
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "SLOAD"
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "SWAP1"
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "EXP"
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "SWAP1"
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "DIV"
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7152,
											"end": 7166,
											"name": "AND"
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "AND"
										},
										{
											"begin": 7148,
											"end": 7149,
											"name": "DUP4"
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "LT"
										},
										{
											"begin": 7136,
											"end": 7513,
											"name": "ISZERO"
										},
										{
											"begin": 7136,
											"end": 7513,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 7136,
											"end": 7513,
											"name": "JUMPI"
										},
										{
											"begin": 7194,
											"end": 7204,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 7202,
											"end": 7203,
											"name": "DUP4"
										},
										{
											"begin": 7194,
											"end": 7197,
											"name": "DUP8"
										},
										{
											"begin": 7194,
											"end": 7201,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 7194,
											"end": 7201,
											"name": "SWAP1"
										},
										{
											"begin": 7194,
											"end": 7204,
											"name": "SWAP2"
										},
										{
											"begin": 7194,
											"end": 7204,
											"name": "SWAP1"
										},
										{
											"begin": 7194,
											"end": 7204,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7194,
											"end": 7204,
											"name": "AND"
										},
										{
											"begin": 7194,
											"end": 7204,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7194,
											"end": 7204,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 7194,
											"end": 7204,
											"name": "JUMPDEST"
										},
										{
											"begin": 7182,
											"end": 7204,
											"name": "SWAP2"
										},
										{
											"begin": 7182,
											"end": 7204,
											"name": "POP"
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "DUP8"
										},
										{
											"begin": 7226,
											"end": 7249,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 7226,
											"end": 7249,
											"name": "ADD"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7250,
											"end": 7255,
											"name": "DUP9"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "AND"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "AND"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "DUP2"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "MSTORE"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "ADD"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "SWAP1"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "DUP2"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "MSTORE"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "ADD"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "KECCAK256"
										},
										{
											"begin": 7257,
											"end": 7286,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 7271,
											"end": 7275,
											"name": "DUP10"
										},
										{
											"begin": 7271,
											"end": 7285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7271,
											"end": 7285,
											"name": "ADD"
										},
										{
											"begin": 7271,
											"end": 7285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7271,
											"end": 7285,
											"name": "SWAP1"
										},
										{
											"begin": 7271,
											"end": 7285,
											"name": "SLOAD"
										},
										{
											"begin": 7271,
											"end": 7285,
											"name": "SWAP1"
										},
										{
											"begin": 7271,
											"end": 7285,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7271,
											"end": 7285,
											"name": "EXP"
										},
										{
											"begin": 7271,
											"end": 7285,
											"name": "SWAP1"
										},
										{
											"begin": 7271,
											"end": 7285,
											"name": "DIV"
										},
										{
											"begin": 7271,
											"end": 7285,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7271,
											"end": 7285,
											"name": "AND"
										},
										{
											"begin": 7257,
											"end": 7286,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7257,
											"end": 7286,
											"name": "AND"
										},
										{
											"begin": 7257,
											"end": 7266,
											"name": "DUP5"
										},
										{
											"begin": 7257,
											"end": 7270,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 7257,
											"end": 7270,
											"name": "SWAP1"
										},
										{
											"begin": 7257,
											"end": 7286,
											"name": "SWAP2"
										},
										{
											"begin": 7257,
											"end": 7286,
											"name": "SWAP1"
										},
										{
											"begin": 7257,
											"end": 7286,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7257,
											"end": 7286,
											"name": "AND"
										},
										{
											"begin": 7257,
											"end": 7286,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7257,
											"end": 7286,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 7257,
											"end": 7286,
											"name": "JUMPDEST"
										},
										{
											"begin": 7226,
											"end": 7287,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 7226,
											"end": 7287,
											"name": "DUP2"
										},
										{
											"begin": 7226,
											"end": 7287,
											"name": "LT"
										},
										{
											"begin": 7226,
											"end": 7287,
											"name": "ISZERO"
										},
										{
											"begin": 7226,
											"end": 7287,
											"name": "ISZERO"
										},
										{
											"begin": 7226,
											"end": 7287,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 7226,
											"end": 7287,
											"name": "JUMPI"
										},
										{
											"begin": 7226,
											"end": 7287,
											"name": "INVALID"
										},
										{
											"begin": 7226,
											"end": 7287,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 7226,
											"end": 7287,
											"name": "JUMPDEST"
										},
										{
											"begin": 7226,
											"end": 7287,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7226,
											"end": 7287,
											"name": "MUL"
										},
										{
											"begin": 7226,
											"end": 7287,
											"name": "ADD"
										},
										{
											"begin": 7214,
											"end": 7287,
											"name": "SWAP1"
										},
										{
											"begin": 7214,
											"end": 7287,
											"name": "POP"
										},
										{
											"begin": 7311,
											"end": 7320,
											"name": "DUP5"
										},
										{
											"begin": 7299,
											"end": 7308,
											"name": "DUP3"
										},
										{
											"begin": 7299,
											"end": 7320,
											"name": "GT"
										},
										{
											"begin": 7295,
											"end": 7507,
											"name": "ISZERO"
										},
										{
											"begin": 7295,
											"end": 7507,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 7295,
											"end": 7507,
											"name": "JUMPI"
										},
										{
											"begin": 7332,
											"end": 7337,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 7332,
											"end": 7337,
											"name": "JUMP"
										},
										{
											"begin": 7295,
											"end": 7507,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 7295,
											"end": 7507,
											"name": "JUMPDEST"
										},
										{
											"begin": 7372,
											"end": 7381,
											"name": "DUP2"
										},
										{
											"begin": 7356,
											"end": 7365,
											"name": "DUP2"
										},
										{
											"begin": 7356,
											"end": 7369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7356,
											"end": 7369,
											"name": "ADD"
										},
										{
											"begin": 7356,
											"end": 7369,
											"name": "SLOAD"
										},
										{
											"begin": 7356,
											"end": 7381,
											"name": "LT"
										},
										{
											"begin": 7352,
											"end": 7507,
											"name": "ISZERO"
										},
										{
											"begin": 7352,
											"end": 7507,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 7352,
											"end": 7507,
											"name": "JUMPI"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "MLOAD"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "DUP2"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "MSTORE"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "ADD"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "DUP1"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "DUP1"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "ADD"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "DUP3"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "DUP2"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "SUB"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "DUP3"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "MSTORE"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "DUP2"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "MSTORE"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "ADD"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "DUP1"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "PUSH",
											"value": "5800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "DUP2"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "MSTORE"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "POP"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "ADD"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "SWAP2"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "POP"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "POP"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "MLOAD"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "DUP1"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "SWAP2"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "SUB"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "SWAP1"
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "REVERT"
										},
										{
											"begin": 7352,
											"end": 7507,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 7352,
											"end": 7507,
											"name": "JUMPDEST"
										},
										{
											"begin": 7471,
											"end": 7498,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 7492,
											"end": 7497,
											"name": "DUP5"
										},
										{
											"begin": 7471,
											"end": 7480,
											"name": "DUP3"
										},
										{
											"begin": 7471,
											"end": 7487,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7471,
											"end": 7487,
											"name": "ADD"
										},
										{
											"begin": 7471,
											"end": 7487,
											"name": "SLOAD"
										},
										{
											"begin": 7471,
											"end": 7491,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 7471,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7471,
											"end": 7498,
											"name": "SWAP2"
										},
										{
											"begin": 7471,
											"end": 7498,
											"name": "SWAP1"
										},
										{
											"begin": 7471,
											"end": 7498,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7471,
											"end": 7498,
											"name": "AND"
										},
										{
											"begin": 7471,
											"end": 7498,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7471,
											"end": 7498,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 7471,
											"end": 7498,
											"name": "JUMPDEST"
										},
										{
											"begin": 7452,
											"end": 7461,
											"name": "DUP2"
										},
										{
											"begin": 7452,
											"end": 7468,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7452,
											"end": 7468,
											"name": "ADD"
										},
										{
											"begin": 7452,
											"end": 7498,
											"name": "DUP2"
										},
										{
											"begin": 7452,
											"end": 7498,
											"name": "SWAP1"
										},
										{
											"begin": 7452,
											"end": 7498,
											"name": "SSTORE"
										},
										{
											"begin": 7452,
											"end": 7498,
											"name": "POP"
										},
										{
											"begin": 7168,
											"end": 7171,
											"name": "DUP3"
										},
										{
											"begin": 7168,
											"end": 7171,
											"name": "DUP1"
										},
										{
											"begin": 7168,
											"end": 7171,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7168,
											"end": 7171,
											"name": "ADD"
										},
										{
											"begin": 7168,
											"end": 7171,
											"name": "SWAP4"
										},
										{
											"begin": 7168,
											"end": 7171,
											"name": "POP"
										},
										{
											"begin": 7168,
											"end": 7171,
											"name": "POP"
										},
										{
											"begin": 7136,
											"end": 7513,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 7136,
											"end": 7513,
											"name": "JUMP"
										},
										{
											"begin": 7136,
											"end": 7513,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 7136,
											"end": 7513,
											"name": "JUMPDEST"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "POP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "POP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "POP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "POP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "POP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "POP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "POP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "POP"
										},
										{
											"begin": 6392,
											"end": 7517,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "JUMPDEST"
										},
										{
											"begin": 8108,
											"end": 8137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8230,
											"end": 8243,
											"name": "DUP1"
										},
										{
											"begin": 8167,
											"end": 8196,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8181,
											"end": 8185,
											"name": "DUP6"
										},
										{
											"begin": 8181,
											"end": 8195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 8195,
											"name": "ADD"
										},
										{
											"begin": 8181,
											"end": 8195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 8195,
											"name": "SWAP1"
										},
										{
											"begin": 8181,
											"end": 8195,
											"name": "SLOAD"
										},
										{
											"begin": 8181,
											"end": 8195,
											"name": "SWAP1"
										},
										{
											"begin": 8181,
											"end": 8195,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8181,
											"end": 8195,
											"name": "EXP"
										},
										{
											"begin": 8181,
											"end": 8195,
											"name": "SWAP1"
										},
										{
											"begin": 8181,
											"end": 8195,
											"name": "DIV"
										},
										{
											"begin": 8181,
											"end": 8195,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8181,
											"end": 8195,
											"name": "AND"
										},
										{
											"begin": 8167,
											"end": 8196,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8167,
											"end": 8196,
											"name": "AND"
										},
										{
											"begin": 8167,
											"end": 8176,
											"name": "DUP6"
										},
										{
											"begin": 8167,
											"end": 8180,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 8167,
											"end": 8180,
											"name": "SWAP1"
										},
										{
											"begin": 8167,
											"end": 8196,
											"name": "SWAP2"
										},
										{
											"begin": 8167,
											"end": 8196,
											"name": "SWAP1"
										},
										{
											"begin": 8167,
											"end": 8196,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8167,
											"end": 8196,
											"name": "AND"
										},
										{
											"begin": 8167,
											"end": 8196,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8167,
											"end": 8196,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 8167,
											"end": 8196,
											"name": "JUMPDEST"
										},
										{
											"begin": 8155,
											"end": 8164,
											"name": "DUP4"
										},
										{
											"begin": 8155,
											"end": 8196,
											"name": "LT"
										},
										{
											"begin": 8155,
											"end": 8222,
											"name": "DUP1"
										},
										{
											"begin": 8155,
											"end": 8222,
											"name": "ISZERO"
										},
										{
											"begin": 8155,
											"end": 8222,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 8155,
											"end": 8222,
											"name": "JUMPI"
										},
										{
											"begin": 8155,
											"end": 8222,
											"name": "POP"
										},
										{
											"begin": 8213,
											"end": 8222,
											"name": "DUP3"
										},
										{
											"begin": 8200,
											"end": 8209,
											"name": "DUP5"
										},
										{
											"begin": 8200,
											"end": 8222,
											"name": "GT"
										},
										{
											"begin": 8200,
											"end": 8222,
											"name": "ISZERO"
										},
										{
											"begin": 8155,
											"end": 8222,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 8155,
											"end": 8222,
											"name": "JUMPDEST"
										},
										{
											"begin": 8147,
											"end": 8223,
											"name": "ISZERO"
										},
										{
											"begin": 8147,
											"end": 8223,
											"name": "ISZERO"
										},
										{
											"begin": 8147,
											"end": 8223,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 8147,
											"end": 8223,
											"name": "JUMPI"
										},
										{
											"begin": 8147,
											"end": 8223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8147,
											"end": 8223,
											"name": "DUP1"
										},
										{
											"begin": 8147,
											"end": 8223,
											"name": "REVERT"
										},
										{
											"begin": 8147,
											"end": 8223,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 8147,
											"end": 8223,
											"name": "JUMPDEST"
										},
										{
											"begin": 8246,
											"end": 8275,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 8260,
											"end": 8264,
											"name": "DUP6"
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "ADD"
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "SWAP1"
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "SLOAD"
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "SWAP1"
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "EXP"
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "SWAP1"
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "DIV"
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "AND"
										},
										{
											"begin": 8246,
											"end": 8275,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8246,
											"end": 8275,
											"name": "AND"
										},
										{
											"begin": 8246,
											"end": 8255,
											"name": "DUP6"
										},
										{
											"begin": 8246,
											"end": 8259,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 8246,
											"end": 8259,
											"name": "SWAP1"
										},
										{
											"begin": 8246,
											"end": 8275,
											"name": "SWAP2"
										},
										{
											"begin": 8246,
											"end": 8275,
											"name": "SWAP1"
										},
										{
											"begin": 8246,
											"end": 8275,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8246,
											"end": 8275,
											"name": "AND"
										},
										{
											"begin": 8246,
											"end": 8275,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8246,
											"end": 8275,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 8246,
											"end": 8275,
											"name": "JUMPDEST"
										},
										{
											"begin": 8230,
											"end": 8275,
											"name": "SWAP1"
										},
										{
											"begin": 8230,
											"end": 8275,
											"name": "POP"
										},
										{
											"begin": 8294,
											"end": 8298,
											"name": "DUP5"
										},
										{
											"begin": 8294,
											"end": 8310,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 8294,
											"end": 8310,
											"name": "ADD"
										},
										{
											"begin": 8311,
											"end": 8316,
											"name": "DUP2"
										},
										{
											"begin": 8294,
											"end": 8317,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 8294,
											"end": 8317,
											"name": "DUP2"
										},
										{
											"begin": 8294,
											"end": 8317,
											"name": "LT"
										},
										{
											"begin": 8294,
											"end": 8317,
											"name": "ISZERO"
										},
										{
											"begin": 8294,
											"end": 8317,
											"name": "ISZERO"
										},
										{
											"begin": 8294,
											"end": 8317,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 8294,
											"end": 8317,
											"name": "JUMPI"
										},
										{
											"begin": 8294,
											"end": 8317,
											"name": "INVALID"
										},
										{
											"begin": 8294,
											"end": 8317,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 8294,
											"end": 8317,
											"name": "JUMPDEST"
										},
										{
											"begin": 8294,
											"end": 8317,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 8294,
											"end": 8317,
											"name": "MUL"
										},
										{
											"begin": 8294,
											"end": 8317,
											"name": "ADD"
										},
										{
											"begin": 8281,
											"end": 8317,
											"name": "SWAP2"
										},
										{
											"begin": 8281,
											"end": 8317,
											"name": "POP"
										},
										{
											"begin": 8352,
											"end": 8361,
											"name": "DUP4"
										},
										{
											"begin": 8328,
											"end": 8338,
											"name": "DUP3"
										},
										{
											"begin": 8328,
											"end": 8348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8348,
											"name": "ADD"
										},
										{
											"begin": 8328,
											"end": 8348,
											"name": "SLOAD"
										},
										{
											"begin": 8328,
											"end": 8361,
											"name": "EQ"
										},
										{
											"begin": 8328,
											"end": 8361,
											"name": "ISZERO"
										},
										{
											"begin": 8324,
											"end": 8489,
											"name": "ISZERO"
										},
										{
											"begin": 8324,
											"end": 8489,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 8324,
											"end": 8489,
											"name": "JUMPI"
										},
										{
											"begin": 8394,
											"end": 8403,
											"name": "DUP4"
										},
										{
											"begin": 8371,
											"end": 8381,
											"name": "DUP3"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "ADD"
										},
										{
											"begin": 8371,
											"end": 8403,
											"name": "DUP2"
										},
										{
											"begin": 8371,
											"end": 8403,
											"name": "SWAP1"
										},
										{
											"begin": 8371,
											"end": 8403,
											"name": "SSTORE"
										},
										{
											"begin": 8371,
											"end": 8403,
											"name": "POP"
										},
										{
											"begin": 8443,
											"end": 8444,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8435,
											"end": 8445,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8435,
											"end": 8445,
											"name": "MUL"
										},
										{
											"begin": 8411,
											"end": 8421,
											"name": "DUP3"
										},
										{
											"begin": 8411,
											"end": 8432,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8411,
											"end": 8432,
											"name": "ADD"
										},
										{
											"begin": 8411,
											"end": 8445,
											"name": "DUP2"
										},
										{
											"begin": 8411,
											"end": 8445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8445,
											"name": "NOT"
										},
										{
											"begin": 8411,
											"end": 8445,
											"name": "AND"
										},
										{
											"begin": 8411,
											"end": 8445,
											"name": "SWAP1"
										},
										{
											"begin": 8411,
											"end": 8445,
											"name": "SSTORE"
										},
										{
											"begin": 8411,
											"end": 8445,
											"name": "POP"
										},
										{
											"begin": 8481,
											"end": 8482,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8453,
											"end": 8463,
											"name": "DUP3"
										},
										{
											"begin": 8453,
											"end": 8478,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8453,
											"end": 8478,
											"name": "ADD"
										},
										{
											"begin": 8453,
											"end": 8482,
											"name": "DUP2"
										},
										{
											"begin": 8453,
											"end": 8482,
											"name": "SWAP1"
										},
										{
											"begin": 8453,
											"end": 8482,
											"name": "SSTORE"
										},
										{
											"begin": 8453,
											"end": 8482,
											"name": "POP"
										},
										{
											"begin": 8324,
											"end": 8489,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 8324,
											"end": 8489,
											"name": "JUMPDEST"
										},
										{
											"begin": 8502,
											"end": 8512,
											"name": "DUP2"
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "SWAP2"
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP4"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "SWAP3"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "POP"
										},
										{
											"begin": 7978,
											"end": 8517,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "JUMPDEST"
										},
										{
											"begin": 9447,
											"end": 9473,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9475,
											"end": 9504,
											"name": "DUP1"
										},
										{
											"begin": 9575,
											"end": 9605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9644,
											"end": 9676,
											"name": "DUP1"
										},
										{
											"begin": 9727,
											"end": 9763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9536,
											"end": 9537,
											"name": "DUP1"
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "SWAP5"
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "POP"
										},
										{
											"begin": 9567,
											"end": 9568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9543,
											"end": 9568,
											"name": "SWAP4"
										},
										{
											"begin": 9543,
											"end": 9568,
											"name": "POP"
										},
										{
											"begin": 9608,
											"end": 9612,
											"name": "DUP8"
										},
										{
											"begin": 9608,
											"end": 9623,
											"name": "PUSH",
											"value": "1D"
										},
										{
											"begin": 9608,
											"end": 9623,
											"name": "ADD"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9629,
											"name": "DUP9"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "AND"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "AND"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "DUP2"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "MSTORE"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "ADD"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "SWAP1"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "DUP2"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "MSTORE"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "ADD"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9608,
											"end": 9630,
											"name": "KECCAK256"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9631,
											"end": 9637,
											"name": "DUP8"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "AND"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "AND"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "DUP2"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "MSTORE"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "ADD"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "SWAP1"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "DUP2"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "MSTORE"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "ADD"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9608,
											"end": 9638,
											"name": "KECCAK256"
										},
										{
											"begin": 9575,
											"end": 9638,
											"name": "SWAP3"
										},
										{
											"begin": 9575,
											"end": 9638,
											"name": "POP"
										},
										{
											"begin": 9679,
											"end": 9683,
											"name": "DUP8"
										},
										{
											"begin": 9679,
											"end": 9697,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 9679,
											"end": 9697,
											"name": "ADD"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9698,
											"end": 9703,
											"name": "DUP9"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "AND"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "AND"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "DUP2"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "MSTORE"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "ADD"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "SWAP1"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "DUP2"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "MSTORE"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "ADD"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "KECCAK256"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9705,
											"end": 9711,
											"name": "DUP8"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "AND"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "AND"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "DUP2"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "MSTORE"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "ADD"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "SWAP1"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "DUP2"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "MSTORE"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "ADD"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9712,
											"name": "KECCAK256"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9713,
											"end": 9719,
											"name": "DUP8"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "AND"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "AND"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "DUP2"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "MSTORE"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "ADD"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "SWAP1"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "DUP2"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "MSTORE"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "ADD"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9720,
											"name": "KECCAK256"
										},
										{
											"begin": 9644,
											"end": 9720,
											"name": "SWAP2"
										},
										{
											"begin": 9644,
											"end": 9720,
											"name": "POP"
										},
										{
											"begin": 9772,
											"end": 9787,
											"name": "DUP3"
										},
										{
											"begin": 9772,
											"end": 9800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9800,
											"name": "ADD"
										},
										{
											"begin": 9801,
											"end": 9855,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 9836,
											"end": 9840,
											"name": "DUP10"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "ADD"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "SWAP1"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "SLOAD"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "SWAP1"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "EXP"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "SWAP1"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "DIV"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "AND"
										},
										{
											"begin": 9801,
											"end": 9855,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 9801,
											"end": 9855,
											"name": "AND"
										},
										{
											"begin": 9801,
											"end": 9815,
											"name": "DUP5"
										},
										{
											"begin": 9801,
											"end": 9831,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9801,
											"end": 9831,
											"name": "ADD"
										},
										{
											"begin": 9801,
											"end": 9831,
											"name": "SLOAD"
										},
										{
											"begin": 9801,
											"end": 9835,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 9801,
											"end": 9835,
											"name": "SWAP1"
										},
										{
											"begin": 9801,
											"end": 9855,
											"name": "SWAP2"
										},
										{
											"begin": 9801,
											"end": 9855,
											"name": "SWAP1"
										},
										{
											"begin": 9801,
											"end": 9855,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9801,
											"end": 9855,
											"name": "AND"
										},
										{
											"begin": 9801,
											"end": 9855,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9801,
											"end": 9855,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 9801,
											"end": 9855,
											"name": "JUMPDEST"
										},
										{
											"begin": 9772,
											"end": 9856,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 9772,
											"end": 9856,
											"name": "DUP2"
										},
										{
											"begin": 9772,
											"end": 9856,
											"name": "LT"
										},
										{
											"begin": 9772,
											"end": 9856,
											"name": "ISZERO"
										},
										{
											"begin": 9772,
											"end": 9856,
											"name": "ISZERO"
										},
										{
											"begin": 9772,
											"end": 9856,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 9772,
											"end": 9856,
											"name": "JUMPI"
										},
										{
											"begin": 9772,
											"end": 9856,
											"name": "INVALID"
										},
										{
											"begin": 9772,
											"end": 9856,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 9772,
											"end": 9856,
											"name": "JUMPDEST"
										},
										{
											"begin": 9772,
											"end": 9856,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9772,
											"end": 9856,
											"name": "MUL"
										},
										{
											"begin": 9772,
											"end": 9856,
											"name": "ADD"
										},
										{
											"begin": 9727,
											"end": 9856,
											"name": "SWAP1"
										},
										{
											"begin": 9727,
											"end": 9856,
											"name": "POP"
										},
										{
											"begin": 9887,
											"end": 9901,
											"name": "DUP2"
										},
										{
											"begin": 9887,
											"end": 9917,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9887,
											"end": 9917,
											"name": "ADD"
										},
										{
											"begin": 9887,
											"end": 9917,
											"name": "SLOAD"
										},
										{
											"begin": 9867,
											"end": 9879,
											"name": "DUP2"
										},
										{
											"begin": 9867,
											"end": 9883,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9867,
											"end": 9883,
											"name": "ADD"
										},
										{
											"begin": 9867,
											"end": 9883,
											"name": "SLOAD"
										},
										{
											"begin": 9867,
											"end": 9917,
											"name": "EQ"
										},
										{
											"begin": 9863,
											"end": 9998,
											"name": "ISZERO"
										},
										{
											"begin": 9863,
											"end": 9998,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 9863,
											"end": 9998,
											"name": "JUMPI"
										},
										{
											"begin": 9948,
											"end": 9991,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 9971,
											"end": 9983,
											"name": "DUP2"
										},
										{
											"begin": 9971,
											"end": 9990,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9971,
											"end": 9990,
											"name": "ADD"
										},
										{
											"begin": 9971,
											"end": 9990,
											"name": "SLOAD"
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "DUP7"
										},
										{
											"begin": 9948,
											"end": 9970,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 9948,
											"end": 9970,
											"name": "SWAP1"
										},
										{
											"begin": 9948,
											"end": 9991,
											"name": "SWAP2"
										},
										{
											"begin": 9948,
											"end": 9991,
											"name": "SWAP1"
										},
										{
											"begin": 9948,
											"end": 9991,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9948,
											"end": 9991,
											"name": "AND"
										},
										{
											"begin": 9948,
											"end": 9991,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9948,
											"end": 9991,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 9948,
											"end": 9991,
											"name": "JUMPDEST"
										},
										{
											"begin": 9927,
											"end": 9991,
											"name": "SWAP5"
										},
										{
											"begin": 9927,
											"end": 9991,
											"name": "POP"
										},
										{
											"begin": 9863,
											"end": 9998,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 9863,
											"end": 9998,
											"name": "JUMPDEST"
										},
										{
											"begin": 10028,
											"end": 10118,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 10066,
											"end": 10070,
											"name": "DUP9"
										},
										{
											"begin": 10072,
											"end": 10077,
											"name": "DUP9"
										},
										{
											"begin": 10079,
											"end": 10085,
											"name": "DUP9"
										},
										{
											"begin": 10087,
											"end": 10101,
											"name": "DUP6"
										},
										{
											"begin": 10087,
											"end": 10117,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10087,
											"end": 10117,
											"name": "ADD"
										},
										{
											"begin": 10087,
											"end": 10117,
											"name": "SLOAD"
										},
										{
											"begin": 10028,
											"end": 10065,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 10028,
											"end": 10118,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10028,
											"end": 10118,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 10028,
											"end": 10118,
											"name": "JUMPDEST"
										},
										{
											"begin": 10004,
											"end": 10118,
											"name": "SWAP4"
										},
										{
											"begin": 10004,
											"end": 10118,
											"name": "POP"
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "DUP5"
										},
										{
											"begin": 10153,
											"end": 10174,
											"name": "DUP5"
										},
										{
											"begin": 10125,
											"end": 10175,
											"name": "SWAP5"
										},
										{
											"begin": 10125,
											"end": 10175,
											"name": "POP"
										},
										{
											"begin": 10125,
											"end": 10175,
											"name": "SWAP5"
										},
										{
											"begin": 10125,
											"end": 10175,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP4"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP4"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "SWAP2"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 10180,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "JUMPDEST"
										},
										{
											"begin": 10587,
											"end": 10588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10571,
											"end": 10580,
											"name": "DUP2"
										},
										{
											"begin": 10571,
											"end": 10584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10571,
											"end": 10584,
											"name": "ADD"
										},
										{
											"begin": 10571,
											"end": 10588,
											"name": "DUP2"
										},
										{
											"begin": 10571,
											"end": 10588,
											"name": "SWAP1"
										},
										{
											"begin": 10571,
											"end": 10588,
											"name": "SSTORE"
										},
										{
											"begin": 10571,
											"end": 10588,
											"name": "POP"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10594,
											"end": 10603,
											"name": "DUP2"
										},
										{
											"begin": 10594,
											"end": 10610,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10594,
											"end": 10610,
											"name": "ADD"
										},
										{
											"begin": 10594,
											"end": 10614,
											"name": "DUP2"
										},
										{
											"begin": 10594,
											"end": 10614,
											"name": "SWAP1"
										},
										{
											"begin": 10594,
											"end": 10614,
											"name": "SSTORE"
										},
										{
											"begin": 10594,
											"end": 10614,
											"name": "POP"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "POP"
										},
										{
											"begin": 10485,
											"end": 10619,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "JUMPDEST"
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "DUP6"
										},
										{
											"begin": 4439,
											"end": 4466,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 4439,
											"end": 4466,
											"name": "ADD"
										},
										{
											"begin": 4467,
											"end": 4490,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 4475,
											"end": 4479,
											"name": "DUP8"
										},
										{
											"begin": 4475,
											"end": 4489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4475,
											"end": 4489,
											"name": "ADD"
										},
										{
											"begin": 4475,
											"end": 4489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4475,
											"end": 4489,
											"name": "SWAP1"
										},
										{
											"begin": 4475,
											"end": 4489,
											"name": "SLOAD"
										},
										{
											"begin": 4475,
											"end": 4489,
											"name": "SWAP1"
										},
										{
											"begin": 4475,
											"end": 4489,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4475,
											"end": 4489,
											"name": "EXP"
										},
										{
											"begin": 4475,
											"end": 4489,
											"name": "SWAP1"
										},
										{
											"begin": 4475,
											"end": 4489,
											"name": "DIV"
										},
										{
											"begin": 4475,
											"end": 4489,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4475,
											"end": 4489,
											"name": "AND"
										},
										{
											"begin": 4467,
											"end": 4490,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4467,
											"end": 4490,
											"name": "AND"
										},
										{
											"begin": 4467,
											"end": 4470,
											"name": "DUP8"
										},
										{
											"begin": 4467,
											"end": 4474,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 4467,
											"end": 4474,
											"name": "SWAP1"
										},
										{
											"begin": 4467,
											"end": 4490,
											"name": "SWAP2"
										},
										{
											"begin": 4467,
											"end": 4490,
											"name": "SWAP1"
										},
										{
											"begin": 4467,
											"end": 4490,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4467,
											"end": 4490,
											"name": "AND"
										},
										{
											"begin": 4467,
											"end": 4490,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4467,
											"end": 4490,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 4467,
											"end": 4490,
											"name": "JUMPDEST"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "DUP2"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "LT"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "ISZERO"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "ISZERO"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "JUMPI"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "INVALID"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "JUMPDEST"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "ADD"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "SLOAD"
										},
										{
											"begin": 4499,
											"end": 4502,
											"name": "DUP6"
										},
										{
											"begin": 4510,
											"end": 4515,
											"name": "DUP6"
										},
										{
											"begin": 4523,
											"end": 4534,
											"name": "DUP6"
										},
										{
											"begin": 4542,
											"end": 4551,
											"name": "DUP6"
										},
										{
											"begin": 4559,
											"end": 4564,
											"name": "DUP6"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "MLOAD"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "ADD"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP1"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP8"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "NOT"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "AND"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "NOT"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "AND"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP2"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "MSTORE"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "ADD"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP7"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP2"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "MSTORE"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "ADD"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP6"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "AND"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "AND"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "1000000000000000000000000"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "MUL"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP2"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "MSTORE"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "ADD"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP5"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "AND"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "AND"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "1000000000000000000000000"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "MUL"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP2"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "MSTORE"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "ADD"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP4"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP2"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "GT"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "ISZERO"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "JUMPI"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "INVALID"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "JUMPDEST"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "AND"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "MUL"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP2"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "MSTORE"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "ADD"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP3"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "DUP2"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "MSTORE"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "ADD"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "SWAP7"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "POP"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "POP"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "POP"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "POP"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "POP"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "POP"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "POP"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "SWAP1"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4415,
											"end": 4565,
											"name": "MSTORE"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "MLOAD"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "DUP3"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "MLOAD"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "ADD"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "DUP4"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "ADD"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "POP"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "MLOAD"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "DUP1"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "SWAP2"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "SUB"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "SWAP1"
										},
										{
											"begin": 4405,
											"end": 4566,
											"name": "KECCAK256"
										},
										{
											"begin": 4350,
											"end": 4354,
											"name": "DUP7"
										},
										{
											"begin": 4350,
											"end": 4377,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 4350,
											"end": 4377,
											"name": "ADD"
										},
										{
											"begin": 4378,
											"end": 4401,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 4386,
											"end": 4390,
											"name": "DUP9"
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "ADD"
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "SWAP1"
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "SLOAD"
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "SWAP1"
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "EXP"
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "SWAP1"
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "DIV"
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "AND"
										},
										{
											"begin": 4378,
											"end": 4401,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4378,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "DUP9"
										},
										{
											"begin": 4378,
											"end": 4385,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 4378,
											"end": 4385,
											"name": "SWAP1"
										},
										{
											"begin": 4378,
											"end": 4401,
											"name": "SWAP2"
										},
										{
											"begin": 4378,
											"end": 4401,
											"name": "SWAP1"
										},
										{
											"begin": 4378,
											"end": 4401,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4378,
											"end": 4401,
											"name": "AND"
										},
										{
											"begin": 4378,
											"end": 4401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4401,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 4378,
											"end": 4401,
											"name": "JUMPDEST"
										},
										{
											"begin": 4350,
											"end": 4402,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4350,
											"end": 4402,
											"name": "DUP2"
										},
										{
											"begin": 4350,
											"end": 4402,
											"name": "LT"
										},
										{
											"begin": 4350,
											"end": 4402,
											"name": "ISZERO"
										},
										{
											"begin": 4350,
											"end": 4402,
											"name": "ISZERO"
										},
										{
											"begin": 4350,
											"end": 4402,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 4350,
											"end": 4402,
											"name": "JUMPI"
										},
										{
											"begin": 4350,
											"end": 4402,
											"name": "INVALID"
										},
										{
											"begin": 4350,
											"end": 4402,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 4350,
											"end": 4402,
											"name": "JUMPDEST"
										},
										{
											"begin": 4350,
											"end": 4402,
											"name": "ADD"
										},
										{
											"begin": 4350,
											"end": 4566,
											"name": "DUP2"
										},
										{
											"begin": 4350,
											"end": 4566,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4566,
											"name": "NOT"
										},
										{
											"begin": 4350,
											"end": 4566,
											"name": "AND"
										},
										{
											"begin": 4350,
											"end": 4566,
											"name": "SWAP1"
										},
										{
											"begin": 4350,
											"end": 4566,
											"name": "SSTORE"
										},
										{
											"begin": 4350,
											"end": 4566,
											"name": "POP"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "POP"
										},
										{
											"begin": 4158,
											"end": 4571,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 646,
											"end": 761,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 646,
											"end": 761,
											"name": "JUMPDEST"
										},
										{
											"begin": 704,
											"end": 711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "DUP1"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP3"
										},
										{
											"begin": 727,
											"end": 732,
											"name": "GT"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "ISZERO"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "ISZERO"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "JUMPI"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "MLOAD"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "DUP2"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "MSTORE"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "ADD"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "DUP1"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "DUP1"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "ADD"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "DUP3"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "DUP2"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "SUB"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "DUP3"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "MSTORE"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "DUP2"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "MSTORE"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "ADD"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "DUP1"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "PUSH",
											"value": "2500000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "DUP2"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "MSTORE"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "POP"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "ADD"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "SWAP2"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "POP"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "POP"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "MLOAD"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "DUP1"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "SWAP2"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "SUB"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "SWAP1"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "REVERT"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 719,
											"end": 738,
											"name": "JUMPDEST"
										},
										{
											"begin": 755,
											"end": 756,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP4"
										},
										{
											"begin": 751,
											"end": 756,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 756,
											"name": "ISZERO"
										},
										{
											"begin": 751,
											"end": 756,
											"name": "ISZERO"
										},
										{
											"begin": 751,
											"end": 756,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 751,
											"end": 756,
											"name": "JUMPI"
										},
										{
											"begin": 751,
											"end": 756,
											"name": "INVALID"
										},
										{
											"begin": 751,
											"end": 756,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 751,
											"end": 756,
											"name": "JUMPDEST"
										},
										{
											"begin": 751,
											"end": 756,
											"name": "MOD"
										},
										{
											"begin": 744,
											"end": 756,
											"name": "SWAP1"
										},
										{
											"begin": 744,
											"end": 756,
											"name": "POP"
										},
										{
											"begin": 646,
											"end": 761,
											"name": "SWAP3"
										},
										{
											"begin": 646,
											"end": 761,
											"name": "SWAP2"
										},
										{
											"begin": 646,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 646,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 646,
											"end": 761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 222,
											"end": 338,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 222,
											"end": 338,
											"name": "JUMPDEST"
										},
										{
											"begin": 280,
											"end": 287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 308,
											"end": 309,
											"name": "DUP3"
										},
										{
											"begin": 303,
											"end": 304,
											"name": "DUP3"
										},
										{
											"begin": 303,
											"end": 309,
											"name": "GT"
										},
										{
											"begin": 303,
											"end": 309,
											"name": "ISZERO"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "ISZERO"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "ISZERO"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "JUMPI"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP2"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "MSTORE"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "ADD"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "ADD"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP3"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP2"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "SUB"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP3"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "MSTORE"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP2"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "MSTORE"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "ADD"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"value": "2D00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP2"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "MSTORE"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "ADD"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "SWAP2"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "SWAP2"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "SUB"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "REVERT"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "JUMPDEST"
										},
										{
											"begin": 332,
											"end": 333,
											"name": "DUP2"
										},
										{
											"begin": 328,
											"end": 329,
											"name": "DUP4"
										},
										{
											"begin": 328,
											"end": 333,
											"name": "SUB"
										},
										{
											"begin": 321,
											"end": 333,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 333,
											"name": "POP"
										},
										{
											"begin": 222,
											"end": 338,
											"name": "SWAP3"
										},
										{
											"begin": 222,
											"end": 338,
											"name": "SWAP2"
										},
										{
											"begin": 222,
											"end": 338,
											"name": "POP"
										},
										{
											"begin": 222,
											"end": 338,
											"name": "POP"
										},
										{
											"begin": 222,
											"end": 338,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 527,
											"end": 642,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 527,
											"end": 642,
											"name": "JUMPDEST"
										},
										{
											"begin": 585,
											"end": 592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 612,
											"end": 613,
											"name": "DUP1"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "DUP3"
										},
										{
											"begin": 608,
											"end": 613,
											"name": "GT"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "ISZERO"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "ISZERO"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "JUMPI"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "MLOAD"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "DUP2"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "MSTORE"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "ADD"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "DUP1"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "DUP1"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "ADD"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "DUP3"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "DUP2"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "SUB"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "DUP3"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "MSTORE"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "DUP2"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "MSTORE"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "ADD"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "DUP1"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "PUSH",
											"value": "2F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "DUP2"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "MSTORE"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "POP"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "ADD"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "SWAP2"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "POP"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "POP"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "MLOAD"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "DUP1"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "SWAP2"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "SUB"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "SWAP1"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "REVERT"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 600,
											"end": 619,
											"name": "JUMPDEST"
										},
										{
											"begin": 636,
											"end": 637,
											"name": "DUP2"
										},
										{
											"begin": 632,
											"end": 633,
											"name": "DUP4"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "DUP2"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "ISZERO"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "ISZERO"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "JUMPI"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "INVALID"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "JUMPDEST"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "DIV"
										},
										{
											"begin": 625,
											"end": 637,
											"name": "SWAP1"
										},
										{
											"begin": 625,
											"end": 637,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 642,
											"name": "SWAP3"
										},
										{
											"begin": 527,
											"end": 642,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 642,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 642,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 642,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 82,
											"end": 218,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 82,
											"end": 218,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 155,
											"end": 164,
											"name": "DUP1"
										},
										{
											"begin": 171,
											"end": 172,
											"name": "DUP3"
										},
										{
											"begin": 167,
											"end": 168,
											"name": "DUP5"
										},
										{
											"begin": 167,
											"end": 172,
											"name": "ADD"
										},
										{
											"begin": 155,
											"end": 172,
											"name": "SWAP1"
										},
										{
											"begin": 155,
											"end": 172,
											"name": "POP"
										},
										{
											"begin": 191,
											"end": 192,
											"name": "DUP4"
										},
										{
											"begin": 186,
											"end": 187,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 192,
											"name": "LT"
										},
										{
											"begin": 186,
											"end": 192,
											"name": "ISZERO"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "ISZERO"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "ISZERO"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "JUMPI"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "MLOAD"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "DUP2"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "MSTORE"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "ADD"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "ADD"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "DUP3"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "DUP2"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "SUB"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "DUP3"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "MSTORE"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "DUP2"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "MSTORE"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "ADD"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "PUSH",
											"value": "2B00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "DUP2"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "MSTORE"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "POP"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "ADD"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "SWAP2"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "POP"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "POP"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "MLOAD"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "DUP1"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "SWAP2"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "SUB"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "SWAP1"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "REVERT"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 178,
											"end": 198,
											"name": "JUMPDEST"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 213,
											"name": "SWAP2"
										},
										{
											"begin": 205,
											"end": 213,
											"name": "POP"
										},
										{
											"begin": 82,
											"end": 218,
											"name": "POP"
										},
										{
											"begin": 82,
											"end": 218,
											"name": "SWAP3"
										},
										{
											"begin": 82,
											"end": 218,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 218,
											"name": "POP"
										},
										{
											"begin": 82,
											"end": 218,
											"name": "POP"
										},
										{
											"begin": 82,
											"end": 218,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addToAggregate(BimodalLib.AmountAggregate storage,uint256,uint256)": "971bff52",
							"addToRunningPendingWithdrawals(BimodalLib.Ledger storage,ERC20,uint256,uint256)": "b0abcbbb",
							"appendOperationToEonAccumulator(BimodalLib.Ledger storage,uint256,ERC20,address,BimodalLib.Operation,uint256)": "f9ac8fca",
							"clearAggregate(BimodalLib.AmountAggregate storage)": "e8e95a3d",
							"currentEon(BimodalLib.Ledger storage)": "26df6e49",
							"currentEra(BimodalLib.Ledger storage)": "87d5cab9",
							"deductFromRunningPendingWithdrawals(BimodalLib.Ledger storage,ERC20,uint256,uint256,uint256)": "e37e06ea",
							"getCurrentEonDepositsWithdrawals(BimodalLib.Ledger storage,ERC20,address)": "e7f24bad",
							"getLiveChallenges(BimodalLib.Ledger storage,uint256)": "378a4719",
							"getOrCreateCheckpoint(BimodalLib.Ledger storage,uint256,uint256)": "e72b5713",
							"getPendingWithdrawalsAtEon(BimodalLib.Ledger storage,ERC20,uint256)": "207cbaba",
							"getWalletPendingWithdrawalAmountAtEon(BimodalLib.Ledger storage,ERC20,address,uint256)": "a7e478ba",
							"init(BimodalLib.Ledger storage,uint256,address)": "7fcacff9",
							"signedMessageECRECOVER(bytes32,bytes32,bytes32,uint8)": "8e9f9072"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"self\",\"type\":\"BimodalLib.Ledger storage\"},{\"name\":\"token\",\"type\":\"ERC20\"},{\"name\":\"eon\",\"type\":\"uint256\"}],\"name\":\"getPendingWithdrawalsAtEon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"self\",\"type\":\"BimodalLib.Ledger storage\"}],\"name\":\"currentEon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"self\",\"type\":\"BimodalLib.Ledger storage\"},{\"name\":\"eon\",\"type\":\"uint256\"}],\"name\":\"getLiveChallenges\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"BimodalLib.Ledger storage\"},{\"name\":\"blocksPerEon\",\"type\":\"uint256\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"self\",\"type\":\"BimodalLib.Ledger storage\"}],\"name\":\"currentEra\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"message\",\"type\":\"bytes32\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"signedMessageECRECOVER\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"aggregate\",\"type\":\"BimodalLib.AmountAggregate storage\"},{\"name\":\"eon\",\"type\":\"uint256\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"addToAggregate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"self\",\"type\":\"BimodalLib.Ledger storage\"},{\"name\":\"token\",\"type\":\"ERC20\"},{\"name\":\"holder\",\"type\":\"address\"},{\"name\":\"eon\",\"type\":\"uint256\"}],\"name\":\"getWalletPendingWithdrawalAmountAtEon\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"BimodalLib.Ledger storage\"},{\"name\":\"token\",\"type\":\"ERC20\"},{\"name\":\"eon\",\"type\":\"uint256\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"addToRunningPendingWithdrawals\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"BimodalLib.Ledger storage\"},{\"name\":\"token\",\"type\":\"ERC20\"},{\"name\":\"eon\",\"type\":\"uint256\"},{\"name\":\"latestEon\",\"type\":\"uint256\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deductFromRunningPendingWithdrawals\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"BimodalLib.Ledger storage\"},{\"name\":\"targetEon\",\"type\":\"uint256\"},{\"name\":\"latestEon\",\"type\":\"uint256\"}],\"name\":\"getOrCreateCheckpoint\",\"outputs\":[{\"name\":\"checkpoint\",\"type\":\"BimodalLib.Checkpoint storage\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"self\",\"type\":\"BimodalLib.Ledger storage\"},{\"name\":\"token\",\"type\":\"ERC20\"},{\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"getCurrentEonDepositsWithdrawals\",\"outputs\":[{\"name\":\"currentEonDeposits\",\"type\":\"uint256\"},{\"name\":\"currentEonWithdrawals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"aggregate\",\"type\":\"BimodalLib.AmountAggregate storage\"}],\"name\":\"clearAggregate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"BimodalLib.Ledger storage\"},{\"name\":\"eon\",\"type\":\"uint256\"},{\"name\":\"token\",\"type\":\"ERC20\"},{\"name\":\"participant\",\"type\":\"address\"},{\"name\":\"operation\",\"type\":\"BimodalLib.Operation\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"appendOperationToEonAccumulator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"addToRunningPendingWithdrawals(BimodalLib.Ledger storage,ERC20,uint256,uint256)\":{\"notice\":\"Increases the total pending withdrawal amount at a specific eon.\"},\"appendOperationToEonAccumulator(BimodalLib.Ledger storage,uint256,ERC20,address,BimodalLib.Operation,uint256)\":{\"notice\":\"This method is used to embed a parent-chain operation into the accumulator through hashing its values. The on-chain accumulator is used to provide a reference with respect to which the operator can commit checkpoints.\"},\"currentEon(BimodalLib.Ledger storage)\":{\"notice\":\"This method calculates the current eon number using the genesis block number and eon duration.\"},\"currentEra(BimodalLib.Ledger storage)\":{\"notice\":\"This method calculates the current era number\"},\"deductFromRunningPendingWithdrawals(BimodalLib.Ledger storage,ERC20,uint256,uint256,uint256)\":{\"notice\":\"Decreases the total pending withdrawal amount at a specific eon.\"},\"getCurrentEonDepositsWithdrawals(BimodalLib.Ledger storage,ERC20,address)\":{\"notice\":\"Get the total amounts deposited and pending withdrawal at the current eon.\"},\"getLiveChallenges(BimodalLib.Ledger storage,uint256)\":{\"notice\":\"Get the total number of live challenges for a specific eon.\"},\"getOrCreateCheckpoint(BimodalLib.Ledger storage,uint256,uint256)\":{\"notice\":\"Get checkpoint data or assume it to be empty if non-existant.\"},\"getPendingWithdrawalsAtEon(BimodalLib.Ledger storage,ERC20,uint256)\":{\"notice\":\"Retrieves the total pending withdrawal amount at a specific eon.\"},\"getWalletPendingWithdrawalAmountAtEon(BimodalLib.Ledger storage,ERC20,address,uint256)\":{\"notice\":\"Get the total amount pending withdrawal by a wallet at a specific eon.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/BimodalLib.sol\":\"BimodalLib\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BimodalLib.sol\":{\"keccak256\":\"0x970571af98a4f6ca4f5d133ac7891429b4aae712014d047610fbc5085fd873b0\",\"urls\":[\"bzzr://6503a1920ba11333c2037fabed15c9293388243265837cd42b5ded068abfb8a6\"]},\"contracts/ERC20.sol\":{\"keccak256\":\"0xd5a653c81eddef74a22c4db9d779e193f86c6fda781c01e11b7b8df128e74bbd\",\"urls\":[\"bzzr://1a82dc0db682e55c7e8c76b0bfb61e78d8c1f97ba5d0e4893ed03f2b94ce3288\"]},\"contracts/SafeMath/SafeMathLib256.sol\":{\"keccak256\":\"0x8740538d437a7ace9712a59c994f7f77c9d1150ea28812834e66dd5cd713e5d4\",\"urls\":[\"bzzr://978ca097a9bf804f53db61e53215fd916dd733ef54e3af454aef115063cdeeb6\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"addToRunningPendingWithdrawals(BimodalLib.Ledger storage,ERC20,uint256,uint256)": {
								"notice": "Increases the total pending withdrawal amount at a specific eon."
							},
							"appendOperationToEonAccumulator(BimodalLib.Ledger storage,uint256,ERC20,address,BimodalLib.Operation,uint256)": {
								"notice": "This method is used to embed a parent-chain operation into the accumulator through hashing its values. The on-chain accumulator is used to provide a reference with respect to which the operator can commit checkpoints."
							},
							"currentEon(BimodalLib.Ledger storage)": {
								"notice": "This method calculates the current eon number using the genesis block number and eon duration."
							},
							"currentEra(BimodalLib.Ledger storage)": {
								"notice": "This method calculates the current era number"
							},
							"deductFromRunningPendingWithdrawals(BimodalLib.Ledger storage,ERC20,uint256,uint256,uint256)": {
								"notice": "Decreases the total pending withdrawal amount at a specific eon."
							},
							"getCurrentEonDepositsWithdrawals(BimodalLib.Ledger storage,ERC20,address)": {
								"notice": "Get the total amounts deposited and pending withdrawal at the current eon."
							},
							"getLiveChallenges(BimodalLib.Ledger storage,uint256)": {
								"notice": "Get the total number of live challenges for a specific eon."
							},
							"getOrCreateCheckpoint(BimodalLib.Ledger storage,uint256,uint256)": {
								"notice": "Get checkpoint data or assume it to be empty if non-existant."
							},
							"getPendingWithdrawalsAtEon(BimodalLib.Ledger storage,ERC20,uint256)": {
								"notice": "Retrieves the total pending withdrawal amount at a specific eon."
							},
							"getWalletPendingWithdrawalAmountAtEon(BimodalLib.Ledger storage,ERC20,address,uint256)": {
								"notice": "Get the total amount pending withdrawal by a wallet at a specific eon."
							}
						}
					}
				}
			},
			"contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"ERC20Basic": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/SafeMath/SafeMathLib256.sol": {
				"SafeMathLib256": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeMath/SafeMathLib256.sol\":55:763  library SafeMathLib256 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeMath/SafeMathLib256.sol\":55:763  library SafeMathLib256 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a7230582093c0b941af74bc2d531230f5928b389d0331fb7aa032f413a664f474189910840029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a7230582093c0b941af74bc2d531230f5928b389d0331fb7aa032f413a664f474189910840029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP4 0xc0 0xb9 COINBASE 0xaf PUSH21 0xBC2D531230F5928B389D0331FB7AA032F413A664F4 PUSH21 0x189910840029000000000000000000000000000000 ",
							"sourceMap": "55:708:2:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a7230582093c0b941af74bc2d531230f5928b389d0331fb7aa032f413a664f474189910840029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP4 0xc0 0xb9 COINBASE 0xaf PUSH21 0xBC2D531230F5928B389D0331FB7AA032F413A664F4 PUSH21 0x189910840029000000000000000000000000000000 ",
							"sourceMap": "55:708:2:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 55,
									"end": 763,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 763,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582093c0b941af74bc2d531230f5928b389d0331fb7aa032f413a664f474189910840029",
									".code": [
										{
											"begin": 55,
											"end": 763,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 55,
											"end": 763,
											"name": "ADDRESS"
										},
										{
											"begin": 55,
											"end": 763,
											"name": "EQ"
										},
										{
											"begin": 55,
											"end": 763,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 55,
											"end": 763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 55,
											"end": 763,
											"name": "MSTORE"
										},
										{
											"begin": 55,
											"end": 763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 763,
											"name": "DUP1"
										},
										{
											"begin": 55,
											"end": 763,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMath/SafeMathLib256.sol\":\"SafeMathLib256\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMath/SafeMathLib256.sol\":{\"keccak256\":\"0x8740538d437a7ace9712a59c994f7f77c9d1150ea28812834e66dd5cd713e5d4\",\"urls\":[\"bzzr://978ca097a9bf804f53db61e53215fd916dd733ef54e3af454aef115063cdeeb6\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/BimodalLib.sol": {
				"ast": {
					"absolutePath": "contracts/BimodalLib.sol",
					"exportedSymbols": {
						"BimodalLib": [
							930
						]
					},
					"id": 931,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.4",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "contracts/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 931,
							"sourceUnit": 1003,
							"src": "25:21:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeMath/SafeMathLib256.sol",
							"file": "./SafeMath/SafeMathLib256.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 931,
							"sourceUnit": 1128,
							"src": "47:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "This library defines the bi-modal commit-chain ledger. It provides data\nstructure definitions, accessors and mutators.",
							"fullyImplemented": true,
							"id": 930,
							"linearizedBaseContracts": [
								930
							],
							"name": "BimodalLib",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 6,
									"libraryName": {
										"contractScope": null,
										"id": 4,
										"name": "SafeMathLib256",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1127,
										"src": "250:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathLib256_$1127",
											"typeString": "library SafeMathLib256"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "244:33:0",
									"typeName": {
										"id": 5,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "269:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "BimodalLib.ChallengeType",
									"id": 11,
									"members": [
										{
											"id": 7,
											"name": "NONE",
											"nodeType": "EnumValue",
											"src": "317:4:0"
										},
										{
											"id": 8,
											"name": "STATE_UPDATE",
											"nodeType": "EnumValue",
											"src": "327:12:0"
										},
										{
											"id": 9,
											"name": "TRANSFER_DELIVERY",
											"nodeType": "EnumValue",
											"src": "345:17:0"
										},
										{
											"id": 10,
											"name": "SWAP_ENACTMENT",
											"nodeType": "EnumValue",
											"src": "368:14:0"
										}
									],
									"name": "ChallengeType",
									"nodeType": "EnumDefinition",
									"src": "292:94:0"
								},
								{
									"canonicalName": "BimodalLib.AmountAggregate",
									"id": 16,
									"members": [
										{
											"constant": false,
											"id": 13,
											"name": "eon",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "533:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 12,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "533:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "550:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 14,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "550:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AmountAggregate",
									"nodeType": "StructDefinition",
									"scope": 930,
									"src": "504:65:0",
									"visibility": "public"
								},
								{
									"canonicalName": "BimodalLib.Checkpoint",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 18,
											"name": "eonNumber",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "669:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 17,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "669:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"name": "merkleRoot",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "692:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "692:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"name": "liveChallenges",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "716:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 21,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "716:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nodeType": "StructDefinition",
									"scope": 930,
									"src": "645:98:0",
									"visibility": "public"
								},
								{
									"canonicalName": "BimodalLib.Wallet",
									"id": 33,
									"members": [
										{
											"constant": false,
											"id": 27,
											"name": "depositsKept",
											"nodeType": "VariableDeclaration",
											"scope": 33,
											"src": "888:31:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_AmountAggregate_$16_storage_$3_storage_ptr",
												"typeString": "struct BimodalLib.AmountAggregate[3]"
											},
											"typeName": {
												"baseType": {
													"contractScope": null,
													"id": 24,
													"name": "AmountAggregate",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 16,
													"src": "888:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
														"typeString": "struct BimodalLib.AmountAggregate"
													}
												},
												"id": 26,
												"length": {
													"argumentTypes": null,
													"hexValue": "33",
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "904:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": null,
														"typeString": null
													},
													"value": "3"
												},
												"nodeType": "ArrayTypeName",
												"src": "888:18:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AmountAggregate_$16_storage_$3_storage_ptr",
													"typeString": "struct BimodalLib.AmountAggregate[3]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 30,
											"name": "withdrawals",
											"nodeType": "VariableDeclaration",
											"scope": 33,
											"src": "976:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Withdrawal_$38_storage_$dyn_storage_ptr",
												"typeString": "struct BimodalLib.Withdrawal[]"
											},
											"typeName": {
												"baseType": {
													"contractScope": null,
													"id": 28,
													"name": "Withdrawal",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 38,
													"src": "976:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Withdrawal_$38_storage_ptr",
														"typeString": "struct BimodalLib.Withdrawal"
													}
												},
												"id": 29,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "976:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Withdrawal_$38_storage_$dyn_storage_ptr",
													"typeString": "struct BimodalLib.Withdrawal[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"name": "recovered",
											"nodeType": "VariableDeclaration",
											"scope": 33,
											"src": "1081:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 31,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1081:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Wallet",
									"nodeType": "StructDefinition",
									"scope": 930,
									"src": "819:281:0",
									"visibility": "public"
								},
								{
									"canonicalName": "BimodalLib.Withdrawal",
									"id": 38,
									"members": [
										{
											"constant": false,
											"id": 35,
											"name": "eon",
											"nodeType": "VariableDeclaration",
											"scope": 38,
											"src": "1195:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 34,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1195:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 37,
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 38,
											"src": "1212:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 36,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1212:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Withdrawal",
									"nodeType": "StructDefinition",
									"scope": 930,
									"src": "1171:60:0",
									"visibility": "public"
								},
								{
									"canonicalName": "BimodalLib.Challenge",
									"id": 57,
									"members": [
										{
											"constant": false,
											"id": 40,
											"name": "challengeType",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1368:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_ChallengeType_$11",
												"typeString": "enum BimodalLib.ChallengeType"
											},
											"typeName": {
												"contractScope": null,
												"id": 39,
												"name": "ChallengeType",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 11,
												"src": "1368:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ChallengeType_$11",
													"typeString": "enum BimodalLib.ChallengeType"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 42,
											"name": "block",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1406:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 41,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1406:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 44,
											"name": "initialStateEon",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1430:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 43,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1430:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 46,
											"name": "initialStateBalance",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1464:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 45,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1464:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 48,
											"name": "deltaHighestSpendings",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1502:29:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 47,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1502:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 50,
											"name": "deltaHighestGains",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1542:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 49,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1542:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 52,
											"name": "finalStateBalance",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1578:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 51,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1578:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 54,
											"name": "deliveredTxNonce",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1614:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 53,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1614:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 56,
											"name": "trailIdentifier",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1649:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 55,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1649:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Challenge",
									"nodeType": "StructDefinition",
									"scope": 930,
									"src": "1314:367:0",
									"visibility": "public"
								},
								{
									"canonicalName": "BimodalLib.Operation",
									"id": 61,
									"members": [
										{
											"id": 58,
											"name": "DEPOSIT",
											"nodeType": "EnumValue",
											"src": "1789:7:0"
										},
										{
											"id": 59,
											"name": "WITHDRAWAL",
											"nodeType": "EnumValue",
											"src": "1802:10:0"
										},
										{
											"id": 60,
											"name": "CANCELLATION",
											"nodeType": "EnumValue",
											"src": "1818:12:0"
										}
									],
									"name": "Operation",
									"nodeType": "EnumDefinition",
									"src": "1768:66:0"
								},
								{
									"canonicalName": "BimodalLib.Ledger",
									"id": 127,
									"members": [
										{
											"constant": false,
											"id": 63,
											"name": "EONS_KEPT",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2005:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 62,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2005:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 65,
											"name": "DEPOSITS_KEPT",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2026:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 64,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2026:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 67,
											"name": "MIN_CHALLENGE_GAS_COST",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2051:30:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 66,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2051:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 69,
											"name": "BLOCKS_PER_EON",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2087:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 68,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2087:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 71,
											"name": "BLOCKS_PER_EPOCH",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2115:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 70,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2115:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 73,
											"name": "EXTENDED_BLOCKS_PER_EPOCH",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2145:33:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 72,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2145:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 75,
											"name": "genesis",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2207:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 74,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2207:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 77,
											"name": "operator",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2228:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 76,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2228:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 81,
											"name": "checkpoints",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2250:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Checkpoint_$23_storage_$5_storage_ptr",
												"typeString": "struct BimodalLib.Checkpoint[5]"
											},
											"typeName": {
												"baseType": {
													"contractScope": null,
													"id": 78,
													"name": "Checkpoint",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 23,
													"src": "2250:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
														"typeString": "struct BimodalLib.Checkpoint"
													}
												},
												"id": 80,
												"length": {
													"argumentTypes": null,
													"hexValue": "35",
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2261:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": null,
														"typeString": null
													},
													"value": "5"
												},
												"nodeType": "ArrayTypeName",
												"src": "2250:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Checkpoint_$23_storage_$5_storage_ptr",
													"typeString": "struct BimodalLib.Checkpoint[5]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 85,
											"name": "parentChainAccumulator",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2281:33:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$5_storage_ptr",
												"typeString": "bytes32[5]"
											},
											"typeName": {
												"baseType": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 84,
												"length": {
													"argumentTypes": null,
													"hexValue": "35",
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2289:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": null,
														"typeString": null
													},
													"value": "5"
												},
												"nodeType": "ArrayTypeName",
												"src": "2281:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$5_storage_ptr",
													"typeString": "bytes32[5]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 87,
											"name": "lastSubmissionEon",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2342:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 86,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2342:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 95,
											"name": "challengeBook",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2373:86:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Challenge_$57_storage_$_$_$",
												"typeString": "mapping(address => mapping(address => mapping(address => struct BimodalLib.Challenge)))"
											},
											"typeName": {
												"id": 94,
												"keyType": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2373:72:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Challenge_$57_storage_$_$_$",
													"typeString": "mapping(address => mapping(address => mapping(address => struct BimodalLib.Challenge)))"
												},
												"valueType": {
													"id": 93,
													"keyType": {
														"id": 89,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "2393:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Challenge_$57_storage_$_$",
														"typeString": "mapping(address => mapping(address => struct BimodalLib.Challenge))"
													},
													"valueType": {
														"id": 92,
														"keyType": {
															"id": 90,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2422:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "Mapping",
														"src": "2413:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Challenge_$57_storage_$",
															"typeString": "mapping(address => struct BimodalLib.Challenge)"
														},
														"valueType": {
															"contractScope": null,
															"id": 91,
															"name": "Challenge",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 57,
															"src": "2433:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Challenge_$57_storage_ptr",
																"typeString": "struct BimodalLib.Challenge"
															}
														}
													}
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 101,
											"name": "walletBook",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2465:59:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Wallet_$33_storage_$_$",
												"typeString": "mapping(address => mapping(address => struct BimodalLib.Wallet))"
											},
											"typeName": {
												"id": 100,
												"keyType": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2465:48:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Wallet_$33_storage_$_$",
													"typeString": "mapping(address => mapping(address => struct BimodalLib.Wallet))"
												},
												"valueType": {
													"id": 99,
													"keyType": {
														"id": 97,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2494:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "2485:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Wallet_$33_storage_$",
														"typeString": "mapping(address => struct BimodalLib.Wallet)"
													},
													"valueType": {
														"contractScope": null,
														"id": 98,
														"name": "Wallet",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 33,
														"src": "2505:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Wallet_$33_storage_ptr",
															"typeString": "struct BimodalLib.Wallet"
														}
													}
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 107,
											"name": "deposits",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2530:48:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_$",
												"typeString": "mapping(address => struct BimodalLib.AmountAggregate[5])"
											},
											"typeName": {
												"id": 106,
												"keyType": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2530:39:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_$",
													"typeString": "mapping(address => struct BimodalLib.AmountAggregate[5])"
												},
												"valueType": {
													"baseType": {
														"contractScope": null,
														"id": 103,
														"name": "AmountAggregate",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 16,
														"src": "2550:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
															"typeString": "struct BimodalLib.AmountAggregate"
														}
													},
													"id": 105,
													"length": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2566:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "2550:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_ptr",
														"typeString": "struct BimodalLib.AmountAggregate[5]"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 113,
											"name": "pendingWithdrawals",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2584:58:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_$",
												"typeString": "mapping(address => struct BimodalLib.AmountAggregate[5])"
											},
											"typeName": {
												"id": 112,
												"keyType": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2584:39:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_$",
													"typeString": "mapping(address => struct BimodalLib.AmountAggregate[5])"
												},
												"valueType": {
													"baseType": {
														"contractScope": null,
														"id": 109,
														"name": "AmountAggregate",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 16,
														"src": "2604:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
															"typeString": "struct BimodalLib.AmountAggregate"
														}
													},
													"id": 111,
													"length": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2620:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "2604:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_ptr",
														"typeString": "struct BimodalLib.AmountAggregate[5]"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 119,
											"name": "confirmedWithdrawals",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2648:60:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_$",
												"typeString": "mapping(address => struct BimodalLib.AmountAggregate[5])"
											},
											"typeName": {
												"id": 118,
												"keyType": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2648:39:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_$",
													"typeString": "mapping(address => struct BimodalLib.AmountAggregate[5])"
												},
												"valueType": {
													"baseType": {
														"contractScope": null,
														"id": 115,
														"name": "AmountAggregate",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 16,
														"src": "2668:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
															"typeString": "struct BimodalLib.AmountAggregate"
														}
													},
													"id": 117,
													"length": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2684:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": null,
															"typeString": null
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "2668:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_ptr",
														"typeString": "struct BimodalLib.AmountAggregate[5]"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 123,
											"name": "tokenToTrail",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2714:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
												"typeString": "mapping(address => uint64)"
											},
											"typeName": {
												"id": 122,
												"keyType": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2714:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
													"typeString": "mapping(address => uint64)"
												},
												"valueType": {
													"id": 121,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 126,
											"name": "trailToToken",
											"nodeType": "VariableDeclaration",
											"scope": 127,
											"src": "2760:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 125,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "2760:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Ledger",
									"nodeType": "StructDefinition",
									"scope": 930,
									"src": "1956:831:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "2938:427:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 136,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "2944:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																"typeString": "struct BimodalLib.Ledger storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "BLOCKS_PER_EON",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 69,
														"src": "2944:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 139,
														"name": "blocksPerEon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2966:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2944:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2944:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 142,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "2984:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																"typeString": "struct BimodalLib.Ledger storage pointer"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "BLOCKS_PER_EPOCH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 71,
														"src": "2984:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "34",
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3032:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 145,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "3008:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																		"typeString": "struct BimodalLib.Ledger storage pointer"
																	}
																},
																"id": 146,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "BLOCKS_PER_EON",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 69,
																"src": "3008:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1105,
															"src": "3008:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3008:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2984:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2984:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 152,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3040:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																"typeString": "struct BimodalLib.Ledger storage pointer"
															}
														},
														"id": 154,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "EXTENDED_BLOCKS_PER_EPOCH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 73,
														"src": "3040:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "33",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3097:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 155,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "3073:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																		"typeString": "struct BimodalLib.Ledger storage pointer"
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "BLOCKS_PER_EON",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 69,
																"src": "3073:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1105,
															"src": "3073:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3073:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3040:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "3040:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 162,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3105:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																"typeString": "struct BimodalLib.Ledger storage pointer"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "EONS_KEPT",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 63,
														"src": "3105:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3122:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "3105:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "3105:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 168,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3151:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																"typeString": "struct BimodalLib.Ledger storage pointer"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "DEPOSITS_KEPT",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 65,
														"src": "3151:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3172:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "3151:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "3151:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 174,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3215:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																"typeString": "struct BimodalLib.Ledger storage pointer"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "MIN_CHALLENGE_GAS_COST",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 67,
														"src": "3215:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "302e303035",
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3245:11:0",
														"subdenomination": "szabo",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000000000_by_1",
															"typeString": "int_const 5000000000"
														},
														"value": "0.005"
													},
													"src": "3215:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "3215:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 180,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3303:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																"typeString": "struct BimodalLib.Ledger storage pointer"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "operator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 77,
														"src": "3303:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 183,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "3319:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3303:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3303:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 186,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3333:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																"typeString": "struct BimodalLib.Ledger storage pointer"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "genesis",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 75,
														"src": "3333:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 189,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "3348:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3348:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3333:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "3333:27:0"
											}
										]
									},
									"documentation": null,
									"id": 194,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "2853:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
													"typeString": "struct BimodalLib.Ledger"
												},
												"typeName": {
													"contractScope": null,
													"id": 128,
													"name": "Ledger",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 127,
													"src": "2853:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
														"typeString": "struct BimodalLib.Ledger"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"name": "blocksPerEon",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "2878:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "2904:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2847:77:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2938:0:0"
									},
									"scope": 930,
									"src": "2834:531:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "3596:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3669:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 208,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "3644:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																			"typeString": "struct BimodalLib.Ledger storage pointer"
																		}
																	},
																	"id": 209,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "BLOCKS_PER_EON",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 69,
																	"src": "3644:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 204,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 196,
																				"src": "3626:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																					"typeString": "struct BimodalLib.Ledger storage pointer"
																				}
																			},
																			"id": 205,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "genesis",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 75,
																			"src": "3626:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 201,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "3609:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3609:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1050,
																		"src": "3609:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3609:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1105,
																"src": "3609:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3609:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1029,
														"src": "3609:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3609:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 200,
												"id": 214,
												"nodeType": "Return",
												"src": "3602:69:0"
											}
										]
									},
									"documentation": "This method calculates the current eon number using the genesis block number\nand eon duration.",
									"id": 216,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "currentEon",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3528:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
													"typeString": "struct BimodalLib.Ledger"
												},
												"typeName": {
													"contractScope": null,
													"id": 195,
													"name": "Ledger",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 127,
													"src": "3528:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
														"typeString": "struct BimodalLib.Ledger"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3522:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3585:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3584:9:0"
									},
									"scope": 930,
									"src": "3503:173:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "3836:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 230,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "3884:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																	"typeString": "struct BimodalLib.Ledger storage pointer"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "BLOCKS_PER_EON",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "3884:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 226,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "3866:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																			"typeString": "struct BimodalLib.Ledger storage pointer"
																		}
																	},
																	"id": 227,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "genesis",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 75,
																	"src": "3866:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 223,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "3849:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3849:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1050,
																"src": "3849:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3849:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1126,
														"src": "3849:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3849:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 222,
												"id": 233,
												"nodeType": "Return",
												"src": "3842:62:0"
											}
										]
									},
									"documentation": "This method calculates the current era number",
									"id": 235,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "currentEra",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "3768:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
													"typeString": "struct BimodalLib.Ledger"
												},
												"typeName": {
													"contractScope": null,
													"id": 217,
													"name": "Ledger",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 127,
													"src": "3768:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
														"typeString": "struct BimodalLib.Ledger"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3762:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "3825:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3824:9:0"
									},
									"scope": 930,
									"src": "3743:166:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "4344:227:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 250,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "4350:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																	"typeString": "struct BimodalLib.Ledger storage pointer"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "parentChainAccumulator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 85,
															"src": "4350:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$5_storage",
																"typeString": "bytes32[5] storage ref"
															}
														},
														"id": 258,
														"indexExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 254,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "4386:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																			"typeString": "struct BimodalLib.Ledger storage pointer"
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "EONS_KEPT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 63,
																	"src": "4386:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 252,
																	"name": "eon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "4378:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mod",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1126,
																"src": "4378:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4378:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4350:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 262,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 237,
																				"src": "4439:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																					"typeString": "struct BimodalLib.Ledger storage pointer"
																				}
																			},
																			"id": 263,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "parentChainAccumulator",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 85,
																			"src": "4439:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$5_storage",
																				"typeString": "bytes32[5] storage ref"
																			}
																		},
																		"id": 269,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 266,
																						"name": "self",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 237,
																						"src": "4475:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																							"typeString": "struct BimodalLib.Ledger storage pointer"
																						}
																					},
																					"id": 267,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "EONS_KEPT",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 63,
																					"src": "4475:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 264,
																					"name": "eon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 239,
																					"src": "4467:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mod",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1126,
																				"src": "4467:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4467:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4439:52:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 270,
																		"name": "eon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 239,
																		"src": "4499:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 271,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "4510:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$1002",
																			"typeString": "contract ERC20"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 272,
																		"name": "participant",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "4523:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 273,
																		"name": "operation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 245,
																		"src": "4542:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Operation_$61",
																			"typeString": "enum BimodalLib.Operation"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 274,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 247,
																		"src": "4559:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_contract$_ERC20_$1002",
																			"typeString": "contract ERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_enum$_Operation_$61",
																			"typeString": "enum BimodalLib.Operation"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 260,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "4415:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4415:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4415:150:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 259,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "4405:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																"typeString": "function () pure returns (bytes32)"
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4405:161:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4350:216:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "4350:216:0"
											}
										]
									},
									"documentation": "This method is used to embed a parent-chain operation into the accumulator\nthrough hashing its values. The on-chain accumulator is used to provide a\nreference with respect to which the operator can commit checkpoints.",
									"id": 280,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "appendOperationToEonAccumulator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4204:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
													"typeString": "struct BimodalLib.Ledger"
												},
												"typeName": {
													"contractScope": null,
													"id": 236,
													"name": "Ledger",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 127,
													"src": "4204:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
														"typeString": "struct BimodalLib.Ledger"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"name": "eon",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4229:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4246:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1002",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 240,
													"name": "ERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1002,
													"src": "4246:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1002",
														"typeString": "contract ERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"name": "participant",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4263:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"name": "operation",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4288:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Operation_$61",
													"typeString": "enum BimodalLib.Operation"
												},
												"typeName": {
													"contractScope": null,
													"id": 244,
													"name": "Operation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 61,
													"src": "4288:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Operation_$61",
														"typeString": "enum BimodalLib.Operation"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4313:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4198:132:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4344:0:0"
									},
									"scope": 930,
									"src": "4158:413:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "4800:811:0",
										"statements": [
											{
												"assignments": [
													292
												],
												"declarations": [
													{
														"constant": false,
														"id": 292,
														"name": "lastAggregateEon",
														"nodeType": "VariableDeclaration",
														"scope": 379,
														"src": "4806:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4833:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4806:28:0"
											},
											{
												"body": {
													"id": 357,
													"nodeType": "Block",
													"src": "4885:579:0",
													"statements": [
														{
															"assignments": [
																307
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 307,
																	"name": "currentAggregate",
																	"nodeType": "VariableDeclaration",
																	"scope": 379,
																	"src": "4893:40:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																		"typeString": "struct BimodalLib.AmountAggregate"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 306,
																		"name": "AmountAggregate",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 16,
																		"src": "4893:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																			"typeString": "struct BimodalLib.AmountAggregate"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 318,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 308,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "4936:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																				"typeString": "struct BimodalLib.Ledger storage pointer"
																			}
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "pendingWithdrawals",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 113,
																		"src": "4936:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_$",
																			"typeString": "mapping(address => struct BimodalLib.AmountAggregate storage ref[5] storage ref)"
																		}
																	},
																	"id": 311,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 310,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "4960:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$1002",
																			"typeString": "contract ERC20"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4936:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage",
																		"typeString": "struct BimodalLib.AmountAggregate storage ref[5] storage ref"
																	}
																},
																"id": 317,
																"indexExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 314,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 282,
																				"src": "4975:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																					"typeString": "struct BimodalLib.Ledger storage pointer"
																				}
																			},
																			"id": 315,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "EONS_KEPT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 63,
																			"src": "4975:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 312,
																			"name": "eon",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "4967:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mod",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1126,
																		"src": "4967:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4967:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4936:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AmountAggregate_$16_storage",
																	"typeString": "struct BimodalLib.AmountAggregate storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4893:98:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 319,
																		"name": "currentAggregate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "5003:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																			"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																		}
																	},
																	"id": 320,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "eon",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 13,
																	"src": "5003:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 321,
																	"name": "eon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "5027:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 327,
																				"name": "currentAggregate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "5091:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																					"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "eon",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 13,
																			"src": "5091:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 329,
																			"name": "lastAggregateEon",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "5114:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5091:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 331,
																				"name": "currentAggregate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "5134:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																					"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																				}
																			},
																			"id": 332,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "eon",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 13,
																			"src": "5134:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 333,
																			"name": "eon",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "5157:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5134:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5091:69:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": null,
																"id": 342,
																"nodeType": "IfStatement",
																"src": "5087:302:0",
																"trueBody": {
																	"id": 341,
																	"nodeType": "Block",
																	"src": "5162:227:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 336,
																					"name": "lastAggregateEon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 292,
																					"src": "5341:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 337,
																						"name": "currentAggregate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 307,
																						"src": "5360:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																							"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																						}
																					},
																					"id": 338,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "eon",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 13,
																					"src": "5360:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5341:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 340,
																			"nodeType": "ExpressionStatement",
																			"src": "5341:39:0"
																		}
																	]
																}
															},
															"id": 343,
															"nodeType": "IfStatement",
															"src": "4999:390:0",
															"trueBody": {
																"id": 326,
																"nodeType": "Block",
																"src": "5032:49:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 323,
																				"name": "currentAggregate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "5049:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																					"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																				}
																			},
																			"id": 324,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 15,
																			"src": "5049:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 290,
																		"id": 325,
																		"nodeType": "Return",
																		"src": "5042:30:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 344,
																	"name": "eon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "5400:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5407:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5400:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 349,
															"nodeType": "IfStatement",
															"src": "5396:38:0",
															"trueBody": {
																"id": 348,
																"nodeType": "Block",
																"src": "5410:24:0",
																"statements": [
																	{
																		"id": 347,
																		"nodeType": "Break",
																		"src": "5420:5:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 350,
																	"name": "eon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "5441:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5455:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 351,
																			"name": "eon",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "5447:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1050,
																		"src": "5447:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5447:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5441:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 356,
															"nodeType": "ExpressionStatement",
															"src": "5441:16:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 299,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "4860:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 300,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "4864:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																"typeString": "struct BimodalLib.Ledger storage pointer"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "EONS_KEPT",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 63,
														"src": "4864:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4860:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"initializationExpression": {
													"assignments": [
														296
													],
													"declarations": [
														{
															"constant": false,
															"id": 296,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 379,
															"src": "4845:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 295,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4845:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 298,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4857:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4845:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4880:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 303,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "4880:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"nodeType": "ExpressionStatement",
													"src": "4880:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4840:624:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 359,
														"name": "lastAggregateEon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "5473:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5493:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5473:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 365,
												"nodeType": "IfStatement",
												"src": "5469:50:0",
												"trueBody": {
													"id": 364,
													"nodeType": "Block",
													"src": "5496:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5511:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 290,
															"id": 363,
															"nodeType": "Return",
															"src": "5504:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 366,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "5531:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																		"typeString": "struct BimodalLib.Ledger storage pointer"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "pendingWithdrawals",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 113,
																"src": "5531:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_$",
																	"typeString": "mapping(address => struct BimodalLib.AmountAggregate storage ref[5] storage ref)"
																}
															},
															"id": 369,
															"indexExpression": {
																"argumentTypes": null,
																"id": 368,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "5555:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$1002",
																	"typeString": "contract ERC20"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5531:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage",
																"typeString": "struct BimodalLib.AmountAggregate storage ref[5] storage ref"
															}
														},
														"id": 375,
														"indexExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 372,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "5583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																			"typeString": "struct BimodalLib.Ledger storage pointer"
																		}
																	},
																	"id": 373,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "EONS_KEPT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 63,
																	"src": "5583:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 370,
																	"name": "lastAggregateEon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "5562:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mod",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1126,
																"src": "5562:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5562:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5531:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AmountAggregate_$16_storage",
															"typeString": "struct BimodalLib.AmountAggregate storage ref"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 15,
													"src": "5531:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 290,
												"id": 377,
												"nodeType": "Return",
												"src": "5524:82:0"
											}
										]
									},
									"documentation": "Retrieves the total pending withdrawal amount at a specific eon.",
									"id": 379,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getPendingWithdrawalsAtEon",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "4698:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
													"typeString": "struct BimodalLib.Ledger"
												},
												"typeName": {
													"contractScope": null,
													"id": 281,
													"name": "Ledger",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 127,
													"src": "4698:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
														"typeString": "struct BimodalLib.Ledger"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "4723:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1002",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 283,
													"name": "ERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1002,
													"src": "4723:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1002",
														"typeString": "contract ERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"name": "eon",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "4740:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4692:63:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "4789:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4788:9:0"
									},
									"scope": 930,
									"src": "4657:954:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "5832:472:0",
										"statements": [
											{
												"assignments": [
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 391,
														"name": "aggregate",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "5838:33:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
															"typeString": "struct BimodalLib.AmountAggregate"
														},
														"typeName": {
															"contractScope": null,
															"id": 390,
															"name": "AmountAggregate",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 16,
															"src": "5838:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																"typeString": "struct BimodalLib.AmountAggregate"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 402,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 392,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "5874:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																	"typeString": "struct BimodalLib.Ledger storage pointer"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "pendingWithdrawals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 113,
															"src": "5874:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_$",
																"typeString": "mapping(address => struct BimodalLib.AmountAggregate storage ref[5] storage ref)"
															}
														},
														"id": 395,
														"indexExpression": {
															"argumentTypes": null,
															"id": 394,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "5898:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1002",
																"typeString": "contract ERC20"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5874:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage",
															"typeString": "struct BimodalLib.AmountAggregate storage ref[5] storage ref"
														}
													},
													"id": 401,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 398,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "5913:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																		"typeString": "struct BimodalLib.Ledger storage pointer"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "EONS_KEPT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 63,
																"src": "5913:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 396,
																"name": "eon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "5905:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1126,
															"src": "5905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5905:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5874:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AmountAggregate_$16_storage",
														"typeString": "struct BimodalLib.AmountAggregate storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5838:91:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 403,
															"name": "aggregate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "6070:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																"typeString": "struct BimodalLib.AmountAggregate storage pointer"
															}
														},
														"id": 404,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "eon",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "6070:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 405,
														"name": "eon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "6086:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6070:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 440,
													"nodeType": "Block",
													"src": "6239:61:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 430,
																		"name": "aggregate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "6247:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																			"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																		}
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "6247:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 387,
																			"src": "6287:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 433,
																				"name": "aggregate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 391,
																				"src": "6266:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																					"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																				}
																			},
																			"id": 434,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 15,
																			"src": "6266:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1029,
																		"src": "6266:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6266:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6247:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 439,
															"nodeType": "ExpressionStatement",
															"src": "6247:46:0"
														}
													]
												},
												"id": 441,
												"nodeType": "IfStatement",
												"src": "6066:234:0",
												"trueBody": {
													"id": 429,
													"nodeType": "Block",
													"src": "6091:142:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 407,
																		"name": "aggregate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "6118:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																			"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																		}
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "6118:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 387,
																			"src": "6193:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 411,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 381,
																					"src": "6164:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																						"typeString": "struct BimodalLib.Ledger storage pointer"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 412,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 383,
																					"src": "6170:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC20_$1002",
																						"typeString": "contract ERC20"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 415,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6185:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 413,
																							"name": "eon",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 385,
																							"src": "6177:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 414,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1050,
																						"src": "6177:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 416,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6177:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																						"typeString": "struct BimodalLib.Ledger storage pointer"
																					},
																					{
																						"typeIdentifier": "t_contract$_ERC20_$1002",
																						"typeString": "contract ERC20"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 410,
																				"name": "getPendingWithdrawalsAtEon",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 379,
																				"src": "6137:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Ledger_$127_storage_ptr_$_t_contract$_ERC20_$1002_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (struct BimodalLib.Ledger storage pointer,contract ERC20,uint256) view returns (uint256)"
																				}
																			},
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6137:51:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1029,
																		"src": "6137:55:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6137:62:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6118:81:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 422,
															"nodeType": "ExpressionStatement",
															"src": "6118:81:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 423,
																		"name": "aggregate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "6207:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																			"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "eon",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 13,
																	"src": "6207:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 426,
																	"name": "eon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "6223:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6207:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 428,
															"nodeType": "ExpressionStatement",
															"src": "6207:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": "Increases the total pending withdrawal amount at a specific eon.",
									"id": 443,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "addToRunningPendingWithdrawals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "5742:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
													"typeString": "struct BimodalLib.Ledger"
												},
												"typeName": {
													"contractScope": null,
													"id": 380,
													"name": "Ledger",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 127,
													"src": "5742:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
														"typeString": "struct BimodalLib.Ledger"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "5767:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1002",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 382,
													"name": "ERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1002,
													"src": "5767:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1002",
														"typeString": "contract ERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"name": "eon",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "5784:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "5801:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5736:82:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5832:0:0"
									},
									"scope": 930,
									"src": "5697:607:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "6555:962:0",
										"statements": [
											{
												"body": {
													"id": 518,
													"nodeType": "Block",
													"src": "6661:438:0",
													"statements": [
														{
															"assignments": [
																468
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 468,
																	"name": "targetEon",
																	"nodeType": "VariableDeclaration",
																	"scope": 581,
																	"src": "6669:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 467,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6669:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 473,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 471,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6697:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 469,
																		"name": "eon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "6689:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1029,
																	"src": "6689:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6689:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6669:30:0"
														},
														{
															"assignments": [
																475
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 475,
																	"name": "aggregate",
																	"nodeType": "VariableDeclaration",
																	"scope": 581,
																	"src": "6707:33:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																		"typeString": "struct BimodalLib.AmountAggregate"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 474,
																		"name": "AmountAggregate",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 16,
																		"src": "6707:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																			"typeString": "struct BimodalLib.AmountAggregate"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 486,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 476,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "6743:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																				"typeString": "struct BimodalLib.Ledger storage pointer"
																			}
																		},
																		"id": 477,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "pendingWithdrawals",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 113,
																		"src": "6743:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_$",
																			"typeString": "mapping(address => struct BimodalLib.AmountAggregate storage ref[5] storage ref)"
																		}
																	},
																	"id": 479,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 478,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "6767:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$1002",
																			"typeString": "contract ERC20"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6743:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage",
																		"typeString": "struct BimodalLib.AmountAggregate storage ref[5] storage ref"
																	}
																},
																"id": 485,
																"indexExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 482,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 445,
																				"src": "6788:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																					"typeString": "struct BimodalLib.Ledger storage pointer"
																				}
																			},
																			"id": 483,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "EONS_KEPT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 63,
																			"src": "6788:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 480,
																			"name": "targetEon",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6774:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mod",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1126,
																		"src": "6774:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6774:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6743:61:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AmountAggregate_$16_storage",
																	"typeString": "struct BimodalLib.AmountAggregate storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6707:97:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 487,
																	"name": "targetEon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "6816:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 488,
																	"name": "latestEon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "6828:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6816:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 492,
																			"name": "aggregate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 475,
																			"src": "6873:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																				"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																			}
																		},
																		"id": 493,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "eon",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 13,
																		"src": "6873:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 494,
																		"name": "targetEon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "6889:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6873:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": null,
																"id": 516,
																"nodeType": "IfStatement",
																"src": "6869:224:0",
																"trueBody": {
																	"id": 515,
																	"nodeType": "Block",
																	"src": "6900:193:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 496,
																						"name": "aggregate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 475,
																						"src": "6973:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																							"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																						}
																					},
																					"id": 498,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "eon",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 13,
																					"src": "6973:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 499,
																					"name": "targetEon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 468,
																					"src": "6989:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6973:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 501,
																			"nodeType": "ExpressionStatement",
																			"src": "6973:25:0"
																		},
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 513,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 502,
																						"name": "aggregate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 475,
																						"src": "7008:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																							"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																						}
																					},
																					"id": 504,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 15,
																					"src": "7008:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 506,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 445,
																							"src": "7054:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																								"typeString": "struct BimodalLib.Ledger storage pointer"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 507,
																							"name": "token",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 447,
																							"src": "7060:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_ERC20_$1002",
																								"typeString": "contract ERC20"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 510,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "7081:1:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"id": 508,
																									"name": "targetEon",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 468,
																									"src": "7067:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 509,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sub",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1050,
																								"src": "7067:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 511,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "7067:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																								"typeString": "struct BimodalLib.Ledger storage pointer"
																							},
																							{
																								"typeIdentifier": "t_contract$_ERC20_$1002",
																								"typeString": "contract ERC20"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 505,
																						"name": "getPendingWithdrawalsAtEon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 379,
																						"src": "7027:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_struct$_Ledger_$127_storage_ptr_$_t_contract$_ERC20_$1002_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (struct BimodalLib.Ledger storage pointer,contract ERC20,uint256) view returns (uint256)"
																						}
																					},
																					"id": 512,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7027:57:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7008:76:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 514,
																			"nodeType": "ExpressionStatement",
																			"src": "7008:76:0"
																		}
																	]
																}
															},
															"id": 517,
															"nodeType": "IfStatement",
															"src": "6812:281:0",
															"trueBody": {
																"id": 491,
																"nodeType": "Block",
																"src": "6839:24:0",
																"statements": [
																	{
																		"id": 490,
																		"nodeType": "Break",
																		"src": "6849:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 460,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "6636:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 461,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																"typeString": "struct BimodalLib.Ledger storage pointer"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "EONS_KEPT",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 63,
														"src": "6640:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6636:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"initializationExpression": {
													"assignments": [
														457
													],
													"declarations": [
														{
															"constant": false,
															"id": 457,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 581,
															"src": "6621:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 456,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6621:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 459,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6633:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6621:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6656:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 464,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "6656:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 466,
													"nodeType": "ExpressionStatement",
													"src": "6656:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6616:483:0"
											},
											{
												"body": {
													"id": 578,
													"nodeType": "Block",
													"src": "7173:340:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 531,
																	"name": "targetEon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "7182:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 534,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 457,
																			"src": "7202:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 532,
																			"name": "eon",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 449,
																			"src": "7194:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1029,
																		"src": "7194:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7194:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7182:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 537,
															"nodeType": "ExpressionStatement",
															"src": "7182:22:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 538,
																	"name": "aggregate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "7214:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																		"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 539,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 445,
																				"src": "7226:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																					"typeString": "struct BimodalLib.Ledger storage pointer"
																				}
																			},
																			"id": 540,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "pendingWithdrawals",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 113,
																			"src": "7226:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage_$",
																				"typeString": "mapping(address => struct BimodalLib.AmountAggregate storage ref[5] storage ref)"
																			}
																		},
																		"id": 542,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 541,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "7250:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$1002",
																				"typeString": "contract ERC20"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7226:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_AmountAggregate_$16_storage_$5_storage",
																			"typeString": "struct BimodalLib.AmountAggregate storage ref[5] storage ref"
																		}
																	},
																	"id": 548,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 545,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 445,
																					"src": "7271:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																						"typeString": "struct BimodalLib.Ledger storage pointer"
																					}
																				},
																				"id": 546,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "EONS_KEPT",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 63,
																				"src": "7271:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 543,
																				"name": "targetEon",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 468,
																				"src": "7257:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mod",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1126,
																			"src": "7257:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7257:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7226:61:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AmountAggregate_$16_storage",
																		"typeString": "struct BimodalLib.AmountAggregate storage ref"
																	}
																},
																"src": "7214:73:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																	"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																}
															},
															"id": 550,
															"nodeType": "ExpressionStatement",
															"src": "7214:73:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 551,
																	"name": "targetEon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "7299:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 552,
																	"name": "latestEon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "7311:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7299:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 556,
																			"name": "aggregate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 475,
																			"src": "7356:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																				"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																			}
																		},
																		"id": 557,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "eon",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 13,
																		"src": "7356:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 558,
																		"name": "targetEon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "7372:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7356:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 575,
																	"nodeType": "Block",
																	"src": "7442:65:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 565,
																						"name": "aggregate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 475,
																						"src": "7452:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																							"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																						}
																					},
																					"id": 567,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 15,
																					"src": "7452:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 571,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 453,
																							"src": "7492:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 568,
																								"name": "aggregate",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 475,
																								"src": "7471:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																									"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																								}
																							},
																							"id": 569,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "amount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 15,
																							"src": "7471:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 570,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1050,
																						"src": "7471:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 572,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7471:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7452:46:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 574,
																			"nodeType": "ExpressionStatement",
																			"src": "7452:46:0"
																		}
																	]
																},
																"id": 576,
																"nodeType": "IfStatement",
																"src": "7352:155:0",
																"trueBody": {
																	"id": 564,
																	"nodeType": "Block",
																	"src": "7383:53:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "58",
																						"id": 561,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7400:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_550c64a15031c3064454c19adc6243a6122c138a242eaa098da50bb114fc8d56",
																							"typeString": "literal_string \"X\""
																						},
																						"value": "X"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_550c64a15031c3064454c19adc6243a6122c138a242eaa098da50bb114fc8d56",
																							"typeString": "literal_string \"X\""
																						}
																					],
																					"id": 560,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						1147,
																						1148
																					],
																					"referencedDeclaration": 1148,
																					"src": "7393:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (string memory) pure"
																					}
																				},
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7393:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 563,
																			"nodeType": "ExpressionStatement",
																			"src": "7393:11:0"
																		}
																	]
																}
															},
															"id": 577,
															"nodeType": "IfStatement",
															"src": "7295:212:0",
															"trueBody": {
																"id": 555,
																"nodeType": "Block",
																"src": "7322:24:0",
																"statements": [
																	{
																		"id": 554,
																		"nodeType": "Break",
																		"src": "7332:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 524,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "7148:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 525,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7152:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																"typeString": "struct BimodalLib.Ledger storage pointer"
															}
														},
														"id": 526,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "EONS_KEPT",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 63,
														"src": "7152:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "7148:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 520,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "7141:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7145:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7141:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 523,
													"nodeType": "ExpressionStatement",
													"src": "7141:5:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7168:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 528,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "7168:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 530,
													"nodeType": "ExpressionStatement",
													"src": "7168:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7136:377:0"
											}
										]
									},
									"documentation": "Decreases the total pending withdrawal amount at a specific eon.",
									"id": 581,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "deductFromRunningPendingWithdrawals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6442:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
													"typeString": "struct BimodalLib.Ledger"
												},
												"typeName": {
													"contractScope": null,
													"id": 444,
													"name": "Ledger",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 127,
													"src": "6442:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
														"typeString": "struct BimodalLib.Ledger"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6467:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1002",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 446,
													"name": "ERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1002,
													"src": "6467:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1002",
														"typeString": "contract ERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"name": "eon",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6484:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"name": "latestEon",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6501:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6524:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6436:105:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6555:0:0"
									},
									"scope": 930,
									"src": "6392:1125:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "7712:183:0",
										"statements": [
											{
												"assignments": [
													591
												],
												"declarations": [
													{
														"constant": false,
														"id": 591,
														"name": "checkpoint",
														"nodeType": "VariableDeclaration",
														"scope": 613,
														"src": "7718:29:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
															"typeString": "struct BimodalLib.Checkpoint"
														},
														"typeName": {
															"contractScope": null,
															"id": 590,
															"name": "Checkpoint",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 23,
															"src": "7718:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
																"typeString": "struct BimodalLib.Checkpoint"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 600,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 592,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "7750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																"typeString": "struct BimodalLib.Ledger storage pointer"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "checkpoints",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 81,
														"src": "7750:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Checkpoint_$23_storage_$5_storage",
															"typeString": "struct BimodalLib.Checkpoint storage ref[5] storage ref"
														}
													},
													"id": 599,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 596,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "7775:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																		"typeString": "struct BimodalLib.Ledger storage pointer"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "EONS_KEPT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 63,
																"src": "7775:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 594,
																"name": "eon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "7767:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1126,
															"src": "7767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7767:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7750:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Checkpoint_$23_storage",
														"typeString": "struct BimodalLib.Checkpoint storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7718:73:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 601,
															"name": "checkpoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "7801:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
																"typeString": "struct BimodalLib.Checkpoint storage pointer"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "eonNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7801:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 603,
														"name": "eon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "7825:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7801:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 608,
												"nodeType": "IfStatement",
												"src": "7797:56:0",
												"trueBody": {
													"id": 607,
													"nodeType": "Block",
													"src": "7830:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7845:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 589,
															"id": 606,
															"nodeType": "Return",
															"src": "7838:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 609,
														"name": "checkpoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "7865:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
															"typeString": "struct BimodalLib.Checkpoint storage pointer"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "liveChallenges",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 22,
													"src": "7865:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 589,
												"id": 611,
												"nodeType": "Return",
												"src": "7858:32:0"
											}
										]
									},
									"documentation": "Get the total number of live challenges for a specific eon.",
									"id": 613,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getLiveChallenges",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7630:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
													"typeString": "struct BimodalLib.Ledger"
												},
												"typeName": {
													"contractScope": null,
													"id": 582,
													"name": "Ledger",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 127,
													"src": "7630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
														"typeString": "struct BimodalLib.Ledger"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"name": "eon",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7655:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7624:46:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7704:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7704:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7703:6:0"
									},
									"scope": 930,
									"src": "7598:297:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "8141:376:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 625,
																	"name": "latestEon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "8155:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 628,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "8181:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																					"typeString": "struct BimodalLib.Ledger storage pointer"
																				}
																			},
																			"id": 629,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "EONS_KEPT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 63,
																			"src": "8181:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 626,
																			"name": "targetEon",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "8167:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1029,
																		"src": "8167:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8167:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8155:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 632,
																	"name": "targetEon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "8200:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 633,
																	"name": "latestEon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "8213:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8200:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8155:67:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1145,
															1146
														],
														"referencedDeclaration": 1145,
														"src": "8147:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8147:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "8147:76:0"
											},
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"name": "index",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "8230:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8230:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 645,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 642,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "8260:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																	"typeString": "struct BimodalLib.Ledger storage pointer"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "EONS_KEPT",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 63,
															"src": "8260:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 640,
															"name": "targetEon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8246:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1126,
														"src": "8246:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8246:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8230:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 646,
														"name": "checkpoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "8281:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
															"typeString": "struct BimodalLib.Checkpoint storage pointer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 647,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "8294:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																	"typeString": "struct BimodalLib.Ledger storage pointer"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "checkpoints",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 81,
															"src": "8294:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Checkpoint_$23_storage_$5_storage",
																"typeString": "struct BimodalLib.Checkpoint storage ref[5] storage ref"
															}
														},
														"id": 650,
														"indexExpression": {
															"argumentTypes": null,
															"id": 649,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "8311:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8294:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$23_storage",
															"typeString": "struct BimodalLib.Checkpoint storage ref"
														}
													},
													"src": "8281:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
														"typeString": "struct BimodalLib.Checkpoint storage pointer"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "8281:36:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 653,
															"name": "checkpoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "8328:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
																"typeString": "struct BimodalLib.Checkpoint storage pointer"
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "eonNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "8328:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 655,
														"name": "targetEon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "8352:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8328:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 678,
												"nodeType": "IfStatement",
												"src": "8324:165:0",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "8363:126:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 657,
																		"name": "checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "8371:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
																			"typeString": "struct BimodalLib.Checkpoint storage pointer"
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "eonNumber",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 18,
																	"src": "8371:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 660,
																	"name": "targetEon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "8394:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8371:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "8371:32:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 663,
																		"name": "checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "8411:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
																			"typeString": "struct BimodalLib.Checkpoint storage pointer"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "merkleRoot",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 20,
																	"src": "8411:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8443:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8435:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": "bytes32"
																	},
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8435:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "8411:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 670,
															"nodeType": "ExpressionStatement",
															"src": "8411:34:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 671,
																		"name": "checkpoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "8453:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
																			"typeString": "struct BimodalLib.Checkpoint storage pointer"
																		}
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "liveChallenges",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 22,
																	"src": "8453:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8481:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8453:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "8453:29:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 679,
													"name": "checkpoint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 622,
													"src": "8502:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
														"typeString": "struct BimodalLib.Checkpoint storage pointer"
													}
												},
												"functionReturnParameters": 623,
												"id": 680,
												"nodeType": "Return",
												"src": "8495:17:0"
											}
										]
									},
									"documentation": "Get checkpoint data or assume it to be empty if non-existant.",
									"id": 682,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getOrCreateCheckpoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "8014:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
													"typeString": "struct BimodalLib.Ledger"
												},
												"typeName": {
													"contractScope": null,
													"id": 614,
													"name": "Ledger",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 127,
													"src": "8014:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
														"typeString": "struct BimodalLib.Ledger"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"name": "targetEon",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "8039:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"name": "latestEon",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "8062:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8008:75:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"name": "checkpoint",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "8108:29:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
													"typeString": "struct BimodalLib.Checkpoint"
												},
												"typeName": {
													"contractScope": null,
													"id": 621,
													"name": "Checkpoint",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 23,
													"src": "8108:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Checkpoint_$23_storage_ptr",
														"typeString": "struct BimodalLib.Checkpoint"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8107:31:0"
									},
									"scope": 930,
									"src": "7978:539:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "8790:420:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 695,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "8796:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8805:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8796:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "8796:10:0"
											},
											{
												"assignments": [
													700
												],
												"declarations": [
													{
														"constant": false,
														"id": 700,
														"name": "accountingEntry",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "8813:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Wallet_$33_storage_ptr",
															"typeString": "struct BimodalLib.Wallet"
														},
														"typeName": {
															"contractScope": null,
															"id": 699,
															"name": "Wallet",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 33,
															"src": "8813:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Wallet_$33_storage_ptr",
																"typeString": "struct BimodalLib.Wallet"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 707,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 701,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "8846:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																	"typeString": "struct BimodalLib.Ledger storage pointer"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "walletBook",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 101,
															"src": "8846:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Wallet_$33_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct BimodalLib.Wallet storage ref))"
															}
														},
														"id": 704,
														"indexExpression": {
															"argumentTypes": null,
															"id": 703,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "8862:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1002",
																"typeString": "contract ERC20"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8846:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Wallet_$33_storage_$",
															"typeString": "mapping(address => struct BimodalLib.Wallet storage ref)"
														}
													},
													"id": 706,
													"indexExpression": {
														"argumentTypes": null,
														"id": 705,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "8869:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8846:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Wallet_$33_storage",
														"typeString": "struct BimodalLib.Wallet storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8813:63:0"
											},
											{
												"assignments": [
													711
												],
												"declarations": [
													{
														"constant": false,
														"id": 711,
														"name": "withdrawals",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "8882:32:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Withdrawal_$38_storage_$dyn_storage_ptr",
															"typeString": "struct BimodalLib.Withdrawal[]"
														},
														"typeName": {
															"baseType": {
																"contractScope": null,
																"id": 709,
																"name": "Withdrawal",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 38,
																"src": "8882:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Withdrawal_$38_storage_ptr",
																	"typeString": "struct BimodalLib.Withdrawal"
																}
															},
															"id": 710,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "8882:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Withdrawal_$38_storage_$dyn_storage_ptr",
																"typeString": "struct BimodalLib.Withdrawal[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 712,
														"name": "accountingEntry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "8917:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Wallet_$33_storage_ptr",
															"typeString": "struct BimodalLib.Wallet storage pointer"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "withdrawals",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 30,
													"src": "8917:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Withdrawal_$38_storage_$dyn_storage",
														"typeString": "struct BimodalLib.Withdrawal storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8882:62:0"
											},
											{
												"body": {
													"id": 753,
													"nodeType": "Block",
													"src": "8998:208:0",
													"statements": [
														{
															"assignments": [
																727
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 727,
																	"name": "withdrawal",
																	"nodeType": "VariableDeclaration",
																	"scope": 756,
																	"src": "9006:29:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Withdrawal_$38_storage_ptr",
																		"typeString": "struct BimodalLib.Withdrawal"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 726,
																		"name": "Withdrawal",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 38,
																		"src": "9006:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Withdrawal_$38_storage_ptr",
																			"typeString": "struct BimodalLib.Withdrawal"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 731,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 728,
																	"name": "withdrawals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "9038:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Withdrawal_$38_storage_$dyn_storage_ptr",
																		"typeString": "struct BimodalLib.Withdrawal storage ref[] storage pointer"
																	}
																},
																"id": 730,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 729,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "9050:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9038:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Withdrawal_$38_storage",
																	"typeString": "struct BimodalLib.Withdrawal storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9006:46:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 732,
																		"name": "withdrawal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "9064:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Withdrawal_$38_storage_ptr",
																			"typeString": "struct BimodalLib.Withdrawal storage pointer"
																		}
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "eon",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 35,
																	"src": "9064:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 734,
																	"name": "eon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "9082:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9064:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 745,
																			"name": "withdrawal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "9154:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Withdrawal_$38_storage_ptr",
																				"typeString": "struct BimodalLib.Withdrawal storage pointer"
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "eon",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 35,
																		"src": "9154:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 747,
																		"name": "eon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "9171:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9154:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": null,
																"id": 751,
																"nodeType": "IfStatement",
																"src": "9150:50:0",
																"trueBody": {
																	"id": 750,
																	"nodeType": "Block",
																	"src": "9176:24:0",
																	"statements": [
																		{
																			"id": 749,
																			"nodeType": "Break",
																			"src": "9186:5:0"
																		}
																	]
																}
															},
															"id": 752,
															"nodeType": "IfStatement",
															"src": "9060:140:0",
															"trueBody": {
																"id": 744,
																"nodeType": "Block",
																"src": "9087:57:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 736,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 693,
																				"src": "9097:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 739,
																							"name": "withdrawal",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 727,
																							"src": "9117:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Withdrawal_$38_storage_ptr",
																								"typeString": "struct BimodalLib.Withdrawal storage pointer"
																							}
																						},
																						"id": 740,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 37,
																						"src": "9117:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 737,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 693,
																						"src": "9106:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 738,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1029,
																					"src": "9106:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9106:29:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9097:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 743,
																		"nodeType": "ExpressionStatement",
																		"src": "9097:38:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 719,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "8969:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 720,
															"name": "withdrawals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "8973:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Withdrawal_$38_storage_$dyn_storage_ptr",
																"typeString": "struct BimodalLib.Withdrawal storage ref[] storage pointer"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8973:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8969:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 754,
												"initializationExpression": {
													"assignments": [
														716
													],
													"declarations": [
														{
															"constant": false,
															"id": 716,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 756,
															"src": "8955:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"typeName": {
																"id": 715,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "8955:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 718,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8966:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8955:12:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8993:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 723,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "8993:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 725,
													"nodeType": "ExpressionStatement",
													"src": "8993:3:0"
												},
												"nodeType": "ForStatement",
												"src": "8950:256:0"
											}
										]
									},
									"documentation": "Get the total amount pending withdrawal by a wallet at a specific eon.",
									"id": 756,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getWalletPendingWithdrawalAmountAtEon",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "8661:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
													"typeString": "struct BimodalLib.Ledger"
												},
												"typeName": {
													"contractScope": null,
													"id": 683,
													"name": "Ledger",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 127,
													"src": "8661:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
														"typeString": "struct BimodalLib.Ledger"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "8686:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1002",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 685,
													"name": "ERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1002,
													"src": "8686:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1002",
														"typeString": "contract ERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"name": "holder",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "8703:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"name": "eon",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "8723:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8655:83:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "8772:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8771:16:0"
									},
									"scope": 930,
									"src": "8609:601:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "9508:672:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 769,
														"name": "currentEonDeposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "9515:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9536:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9515:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "9515:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 773,
														"name": "currentEonWithdrawals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "9543:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9567:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9543:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "9543:25:0"
											},
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"name": "accountingEntry",
														"nodeType": "VariableDeclaration",
														"scope": 839,
														"src": "9575:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Wallet_$33_storage_ptr",
															"typeString": "struct BimodalLib.Wallet"
														},
														"typeName": {
															"contractScope": null,
															"id": 777,
															"name": "Wallet",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 33,
															"src": "9575:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Wallet_$33_storage_ptr",
																"typeString": "struct BimodalLib.Wallet"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 779,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "9608:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																	"typeString": "struct BimodalLib.Ledger storage pointer"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "walletBook",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 101,
															"src": "9608:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Wallet_$33_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct BimodalLib.Wallet storage ref))"
															}
														},
														"id": 782,
														"indexExpression": {
															"argumentTypes": null,
															"id": 781,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "9624:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1002",
																"typeString": "contract ERC20"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9608:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Wallet_$33_storage_$",
															"typeString": "mapping(address => struct BimodalLib.Wallet storage ref)"
														}
													},
													"id": 784,
													"indexExpression": {
														"argumentTypes": null,
														"id": 783,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "9631:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9608:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Wallet_$33_storage",
														"typeString": "struct BimodalLib.Wallet storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9575:63:0"
											},
											{
												"assignments": [
													787
												],
												"declarations": [
													{
														"constant": false,
														"id": 787,
														"name": "challengeEntry",
														"nodeType": "VariableDeclaration",
														"scope": 839,
														"src": "9644:32:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Challenge_$57_storage_ptr",
															"typeString": "struct BimodalLib.Challenge"
														},
														"typeName": {
															"contractScope": null,
															"id": 786,
															"name": "Challenge",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 57,
															"src": "9644:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Challenge_$57_storage_ptr",
																"typeString": "struct BimodalLib.Challenge"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 788,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "9679:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																		"typeString": "struct BimodalLib.Ledger storage pointer"
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "challengeBook",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 95,
																"src": "9679:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Challenge_$57_storage_$_$_$",
																	"typeString": "mapping(address => mapping(address => mapping(address => struct BimodalLib.Challenge storage ref)))"
																}
															},
															"id": 791,
															"indexExpression": {
																"argumentTypes": null,
																"id": 790,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "9698:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$1002",
																	"typeString": "contract ERC20"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9679:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Challenge_$57_storage_$_$",
																"typeString": "mapping(address => mapping(address => struct BimodalLib.Challenge storage ref))"
															}
														},
														"id": 793,
														"indexExpression": {
															"argumentTypes": null,
															"id": 792,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "9705:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9679:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Challenge_$57_storage_$",
															"typeString": "mapping(address => struct BimodalLib.Challenge storage ref)"
														}
													},
													"id": 795,
													"indexExpression": {
														"argumentTypes": null,
														"id": 794,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "9713:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9679:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Challenge_$57_storage",
														"typeString": "struct BimodalLib.Challenge storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9644:76:0"
											},
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"name": "depositEntry",
														"nodeType": "VariableDeclaration",
														"scope": 839,
														"src": "9727:36:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
															"typeString": "struct BimodalLib.AmountAggregate"
														},
														"typeName": {
															"contractScope": null,
															"id": 797,
															"name": "AmountAggregate",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 16,
															"src": "9727:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																"typeString": "struct BimodalLib.AmountAggregate"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 808,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 799,
															"name": "accountingEntry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "9772:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Wallet_$33_storage_ptr",
																"typeString": "struct BimodalLib.Wallet storage pointer"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "depositsKept",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "9772:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_AmountAggregate_$16_storage_$3_storage",
															"typeString": "struct BimodalLib.AmountAggregate storage ref[3] storage ref"
														}
													},
													"id": 807,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 804,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "9836:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																		"typeString": "struct BimodalLib.Ledger storage pointer"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "DEPOSITS_KEPT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 65,
																"src": "9836:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 801,
																	"name": "challengeEntry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "9801:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Challenge_$57_storage_ptr",
																		"typeString": "struct BimodalLib.Challenge storage pointer"
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "initialStateEon",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "9801:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1126,
															"src": "9801:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9801:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9772:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AmountAggregate_$16_storage",
														"typeString": "struct BimodalLib.AmountAggregate storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9727:129:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 809,
															"name": "depositEntry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "9867:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																"typeString": "struct BimodalLib.AmountAggregate storage pointer"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "eon",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "9867:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 811,
															"name": "challengeEntry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "9887:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Challenge_$57_storage_ptr",
																"typeString": "struct BimodalLib.Challenge storage pointer"
															}
														},
														"id": 812,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialStateEon",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "9887:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9867:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 823,
												"nodeType": "IfStatement",
												"src": "9863:135:0",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "9919:79:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 814,
																	"name": "currentEonDeposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "9927:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 817,
																				"name": "depositEntry",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "9971:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																					"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																				}
																			},
																			"id": 818,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 15,
																			"src": "9971:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 815,
																			"name": "currentEonDeposits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "9948:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1029,
																		"src": "9948:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9948:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9927:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "9927:64:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 824,
														"name": "currentEonWithdrawals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "10004:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 826,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10066:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																	"typeString": "struct BimodalLib.Ledger storage pointer"
																}
															},
															{
																"argumentTypes": null,
																"id": 827,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "10072:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$1002",
																	"typeString": "contract ERC20"
																}
															},
															{
																"argumentTypes": null,
																"id": 828,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "10079:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 829,
																	"name": "challengeEntry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "10087:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Challenge_$57_storage_ptr",
																		"typeString": "struct BimodalLib.Challenge storage pointer"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "initialStateEon",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "10087:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
																	"typeString": "struct BimodalLib.Ledger storage pointer"
																},
																{
																	"typeIdentifier": "t_contract$_ERC20_$1002",
																	"typeString": "contract ERC20"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 825,
															"name": "getWalletPendingWithdrawalAmountAtEon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "10028:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Ledger_$127_storage_ptr_$_t_contract$_ERC20_$1002_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (struct BimodalLib.Ledger storage pointer,contract ERC20,address,uint256) view returns (uint256)"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:90:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10004:114:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "10004:114:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 834,
															"name": "currentEonDeposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "10133:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 835,
															"name": "currentEonWithdrawals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "10153:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 836,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10132:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 768,
												"id": 837,
												"nodeType": "Return",
												"src": "10125:50:0"
											}
										]
									},
									"documentation": "Get the total amounts deposited and pending withdrawal at the current eon.",
									"id": 839,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getCurrentEonDepositsWithdrawals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "9353:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
													"typeString": "struct BimodalLib.Ledger"
												},
												"typeName": {
													"contractScope": null,
													"id": 757,
													"name": "Ledger",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 127,
													"src": "9353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Ledger_$127_storage_ptr",
														"typeString": "struct BimodalLib.Ledger"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "9378:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1002",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 759,
													"name": "ERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1002,
													"src": "9378:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1002",
														"typeString": "contract ERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"name": "holder",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "9395:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9347:66:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"name": "currentEonDeposits",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "9447:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"name": "currentEonWithdrawals",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "9475:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9446:59:0"
									},
									"scope": 930,
									"src": "9306:874:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "10313:168:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 848,
														"name": "eon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "10323:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 849,
															"name": "aggregate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "10329:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																"typeString": "struct BimodalLib.AmountAggregate storage pointer"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "eon",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "10329:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10323:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "10416:61:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 865,
																		"name": "aggregate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 841,
																		"src": "10424:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																			"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																		}
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "10424:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 871,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 845,
																			"src": "10464:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 868,
																				"name": "aggregate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 841,
																				"src": "10443:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																					"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																				}
																			},
																			"id": 869,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 15,
																			"src": "10443:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1029,
																		"src": "10443:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10443:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10424:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 874,
															"nodeType": "ExpressionStatement",
															"src": "10424:46:0"
														}
													]
												},
												"id": 876,
												"nodeType": "IfStatement",
												"src": "10319:158:0",
												"trueBody": {
													"id": 864,
													"nodeType": "Block",
													"src": "10344:66:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 852,
																		"name": "aggregate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 841,
																		"src": "10352:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																			"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																		}
																	},
																	"id": 854,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "eon",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 13,
																	"src": "10352:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 855,
																	"name": "eon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "10368:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10352:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 857,
															"nodeType": "ExpressionStatement",
															"src": "10352:19:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 858,
																		"name": "aggregate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 841,
																		"src": "10379:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																			"typeString": "struct BimodalLib.AmountAggregate storage pointer"
																		}
																	},
																	"id": 860,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "10379:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 861,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "10398:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10379:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 863,
															"nodeType": "ExpressionStatement",
															"src": "10379:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 878,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "addToAggregate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"name": "aggregate",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "10226:33:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
													"typeString": "struct BimodalLib.AmountAggregate"
												},
												"typeName": {
													"contractScope": null,
													"id": 840,
													"name": "AmountAggregate",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 16,
													"src": "10226:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
														"typeString": "struct BimodalLib.AmountAggregate"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"name": "eon",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "10265:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "10282:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10220:79:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10313:0:0"
									},
									"scope": 930,
									"src": "10197:284:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "10565:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 883,
															"name": "aggregate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "10571:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																"typeString": "struct BimodalLib.AmountAggregate storage pointer"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "eon",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "10571:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10587:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10571:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "10571:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 889,
															"name": "aggregate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "10594:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
																"typeString": "struct BimodalLib.AmountAggregate storage pointer"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "10594:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10613:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10594:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "10594:20:0"
											}
										]
									},
									"documentation": null,
									"id": 896,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "clearAggregate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"name": "aggregate",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "10514:33:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
													"typeString": "struct BimodalLib.AmountAggregate"
												},
												"typeName": {
													"contractScope": null,
													"id": 879,
													"name": "AmountAggregate",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 16,
													"src": "10514:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AmountAggregate_$16_storage_ptr",
														"typeString": "struct BimodalLib.AmountAggregate"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10508:43:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10565:0:0"
									},
									"scope": 930,
									"src": "10485:134:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "10759:234:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																			"id": 913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10825:34:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																				"typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
																			},
																			"value": "\u0019Ethereum Signed Message:\n32"
																		},
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "194c69717569646974792e4e6574776f726b20417574686f72697a6174696f6e3a0a3332",
																							"id": 917,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10907:42:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_7487a0dddc07ea0d8c30380464d86bcd898dfa1bc27e0228eda90035be396975",
																								"typeString": "literal_string \"\u0019Liquidity.Network Authorization:\n32\""
																							},
																							"value": "\u0019Liquidity.Network Authorization:\n32"
																						},
																						{
																							"argumentTypes": null,
																							"id": 918,
																							"name": "message",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 898,
																							"src": "10961:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_7487a0dddc07ea0d8c30380464d86bcd898dfa1bc27e0228eda90035be396975",
																								"typeString": "literal_string \"\u0019Liquidity.Network Authorization:\n32\""
																							},
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 915,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1129,
																							"src": "10879:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 916,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "encodePacked",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "10879:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 919,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10879:90:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 914,
																				"name": "keccak256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1136,
																				"src": "10869:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																					"typeString": "function () pure returns (bytes32)"
																				}
																			},
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10869:101:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																				"typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 911,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1129,
																			"src": "10799:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10799:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10799:172:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 910,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "10789:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																	"typeString": "function () pure returns (bytes32)"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10789:183:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 923,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "10980:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 924,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "10983:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 925,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "10986:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 909,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "10772:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10772:216:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 908,
												"id": 927,
												"nodeType": "Return",
												"src": "10765:223:0"
											}
										]
									},
									"documentation": null,
									"id": 929,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "signedMessageECRECOVER",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"name": "message",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "10660:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 897,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "10681:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 899,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "10692:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 901,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "10703:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 903,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10703:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10654:60:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "10748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10747:9:0"
									},
									"scope": 930,
									"src": "10623:370:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 931,
							"src": "221:10774:0"
						}
					],
					"src": "0:10996:0"
				},
				"id": 0
			},
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							1002
						],
						"ERC20Basic": [
							962
						]
					},
					"id": 1003,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 932,
							"literals": [
								"solidity",
								"0.4",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 962,
							"linearizedBaseContracts": [
								962
							],
							"name": "ERC20Basic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 937,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "93:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "93:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "92:9:1"
									},
									"scope": 962,
									"src": "49:53:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 944,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "124:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "124:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "123:13:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "158:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "157:9:1"
									},
									"scope": 962,
									"src": "105:62:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 953,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "188:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "200:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "187:27:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "231:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 950,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "231:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "230:6:1"
									},
									"scope": 962,
									"src": "170:67:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 961,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "255:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "277:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "297:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "254:57:1"
									},
									"src": "240:72:1"
								}
							],
							"scope": 1003,
							"src": "25:289:1"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 963,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 962,
										"src": "334:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$962",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 964,
									"nodeType": "InheritanceSpecifier",
									"src": "334:10:1"
								}
							],
							"contractDependencies": [
								962
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1002,
							"linearizedBaseContracts": [
								1002,
								962
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 973,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "368:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "383:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "367:32:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "425:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "424:9:1"
									},
									"scope": 1002,
									"src": "349:85:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 984,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "460:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "474:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "486:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "459:41:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "521:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "521:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "520:6:1"
									},
									"scope": 1002,
									"src": "438:89:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 993,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "548:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "565:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "547:32:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "596:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 990,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "596:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "595:6:1"
									},
									"scope": 1002,
									"src": "531:71:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1001,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "628:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "655:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "622:79:1"
									},
									"src": "608:94:1"
								}
							],
							"scope": 1003,
							"src": "316:388:1"
						}
					],
					"src": "0:705:1"
				},
				"id": 1
			},
			"contracts/SafeMath/SafeMathLib256.sol": {
				"ast": {
					"absolutePath": "contracts/SafeMath/SafeMathLib256.sol",
					"exportedSymbols": {
						"SafeMathLib256": [
							1127
						]
					},
					"id": 1128,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1004,
							"literals": [
								"solidity",
								"0.4",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1127,
							"linearizedBaseContracts": [
								1127
							],
							"name": "SafeMathLib256",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "149:69:2",
										"statements": [
											{
												"assignments": [
													1014
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1029,
														"src": "155:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1013,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "155:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1018,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1015,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "167:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1016,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "171:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "167:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "155:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1020,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "186:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1021,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "191:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "186:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "2b",
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "194:3:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8",
																"typeString": "literal_string \"+\""
															},
															"value": "+"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8",
																"typeString": "literal_string \"+\""
															}
														],
														"id": 1019,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1145,
															1146
														],
														"referencedDeclaration": 1146,
														"src": "178:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "178:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "178:20:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1026,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1014,
													"src": "212:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1012,
												"id": 1027,
												"nodeType": "Return",
												"src": "205:8:2"
											}
										]
									},
									"documentation": null,
									"id": 1029,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "95:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "95:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "106:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "106:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "94:22:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "140:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "139:9:2"
									},
									"scope": 1127,
									"src": "82:136:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "289:49:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1039,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "303:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1040,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1031,
																"src": "308:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "303:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "2d",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "311:3:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																"typeString": "literal_string \"-\""
															},
															"value": "-"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																"typeString": "literal_string \"-\""
															}
														],
														"id": 1038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1145,
															1146
														],
														"referencedDeclaration": 1146,
														"src": "295:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "295:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "295:20:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1045,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "328:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1046,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "332:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "328:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1037,
												"id": 1048,
												"nodeType": "Return",
												"src": "321:12:2"
											}
										]
									},
									"documentation": null,
									"id": 1050,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "235:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "246:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "234:22:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "280:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "279:9:2"
									},
									"scope": 1127,
									"src": "222:116:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "409:114:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1059,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "419:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "424:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "419:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1065,
												"nodeType": "IfStatement",
												"src": "415:35:2",
												"trueBody": {
													"id": 1064,
													"nodeType": "Block",
													"src": "427:23:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "442:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1058,
															"id": 1063,
															"nodeType": "Return",
															"src": "435:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													1067
												],
												"declarations": [
													{
														"constant": false,
														"id": 1067,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1084,
														"src": "456:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1066,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "456:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1071,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1068,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "468:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1069,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "472:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "468:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "456:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1073,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "487:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1074,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "491:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "487:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1076,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "496:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "487:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "2a",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "499:3:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04994f67dc55b09e814ab7ffc8df3686b4afb2bb53e60eae97ef043fe03fb829",
																"typeString": "literal_string \"*\""
															},
															"value": "*"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04994f67dc55b09e814ab7ffc8df3686b4afb2bb53e60eae97ef043fe03fb829",
																"typeString": "literal_string \"*\""
															}
														],
														"id": 1072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1145,
															1146
														],
														"referencedDeclaration": 1146,
														"src": "479:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "479:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "479:24:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1081,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1067,
													"src": "517:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1082,
												"nodeType": "Return",
												"src": "510:8:2"
											}
										]
									},
									"documentation": null,
									"id": 1084,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "354:22:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "400:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "399:9:2"
									},
									"scope": 1127,
									"src": "342:181:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "594:48:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1094,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "608:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "612:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "608:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "2f",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "615:3:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
																"typeString": "literal_string \"/\""
															},
															"value": "/"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
																"typeString": "literal_string \"/\""
															}
														],
														"id": 1093,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1145,
															1146
														],
														"referencedDeclaration": 1146,
														"src": "600:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "600:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "600:19:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1100,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "632:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1101,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "636:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "632:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1103,
												"nodeType": "Return",
												"src": "625:12:2"
											}
										]
									},
									"documentation": null,
									"id": 1105,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "540:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "551:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "539:22:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "585:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "584:9:2"
									},
									"scope": 1127,
									"src": "527:115:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "713:48:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1115,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "727:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "731:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "727:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "25",
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "734:3:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43b2f7df8a0d3a744d9a3126411ef3787d9e447a59b458310e828119cf8614ad",
																"typeString": "literal_string \"%\""
															},
															"value": "%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43b2f7df8a0d3a744d9a3126411ef3787d9e447a59b458310e828119cf8614ad",
																"typeString": "literal_string \"%\""
															}
														],
														"id": 1114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1145,
															1146
														],
														"referencedDeclaration": 1146,
														"src": "719:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "719:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "719:19:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1121,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "751:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1122,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "755:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "751:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1113,
												"id": 1124,
												"nodeType": "Return",
												"src": "744:12:2"
											}
										]
									},
									"documentation": null,
									"id": 1126,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "659:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "670:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "658:22:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "704:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "703:9:2"
									},
									"scope": 1127,
									"src": "646:115:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1128,
							"src": "55:708:2"
						}
					],
					"src": "0:763:2"
				},
				"id": 2
			}
		}
	}
}